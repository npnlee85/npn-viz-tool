/*
 * Regs-Dot-Gov-Directives
 * Version: 0.1.0 - 2015-02-23
 */
angular.module("npn-viz-tool.filter",["isteven-multi-select"]).directive("filterControl",["$http","$filter",function(a){return{restrict:"E",templateUrl:"js/filter/filter.html",controller:["$scope",function(b){function c(){b.serverResults=void 0}function d(){var a={},c=0;return angular.forEach([].concat(b.animals).concat(b.plants),function(b){a["group_ids["+c++ +"]"]=b.species_type_id}),b.networks.length&&(a.network_id=b.networks[0].network_id),a}function e(a){return angular.forEach(a,function(a){a.selected=!0}),a}b.addSpecies={selected:void 0},b.animals=[],b.plants=[],b.networks=[],b.$watch("animals",c),b.$watch("plants",c),b.$watch("networks",c),b.$watch("addSpecies.selected",function(){b.addSpecies.speciesToAdd=angular.isObject(b.addSpecies.selected)?b.addSpecies.selected:void 0}),b.findSpecies=function(){return b.serverResults||(b.serverResults=a.get("/npn_portal/species/getSpeciesFilter.json",{params:d()}).then(function(a){var c=[];return angular.forEach(a.data,function(a){a.$display=a.common_name+" ("+a.number_observations+")",c.push(a)}),console.log("species",c),b.serverResults=c})),b.serverResults},a.get("/npn_portal/networks/getPartnerNetworks.json").success(function(a){angular.forEach(a,function(a){a.network_name=a.network_name.trim()}),b.partners=a}),a.get("/npn_portal/species/getPlantTypes.json").success(function(a){b.plantTypes=e(a)}),a.get("/npn_portal/species/getAnimalTypes.json").success(function(a){b.animalTypes=e(a)})}]}}]),angular.module("npn-viz-tool.filters",[]).filter("trim",function(){return function(a){return angular.isString(a)?a.trim():a}}).filter("faFileIcon",function(){var a={pdf:"fa-file-pdf-o"};return function(b){return b&&!a[b]&&console.debug("no explicit file type icon for "+b),a[b]||"fa-file-o"}}).filter("ellipses",function(){return function(a){var b=2==arguments.length?arguments[1]:55;return"string"==typeof a&&a.length>b?a.substring(0,b)+" ...":a}}),angular.module("npn-viz-tool",["templates-npnvis","npn-viz-tool.services","npn-viz-tool.map","npn-viz-tool.toolbar","npn-viz-tool.filters","uiGmapgoogle-maps","ui.bootstrap","ngAnimate"]).config(function(a){a.configure({v:"3.17",libraries:"geometry"})}),angular.module("npn-viz-tool.map",["npn-viz-tool.services","npn-viz-tool.stations","npn-viz-tool.toolbar","npn-viz-tool.filter","uiGmapgoogle-maps"]).directive("npnVizMap",["$document","uiGmapGoogleMapApi","uiGmapIsReady",function(a,b){return{restrict:"E",templateUrl:"js/map/map.html",scope:{},controller:["$scope",function(a){a.stationView=!0,b.then(function(b){console.log("maps",b),a.map={center:{latitude:38.8402805,longitude:-97.61142369999999},zoom:4,options:{streetViewControl:!1,panControl:!1,zoomControl:!0,zoomControlOptions:{style:b.ZoomControlStyle.SMALL,position:b.ControlPosition.RIGHT_TOP}}}})}]}}]),angular.module("templates-npnvis",["js/filter/filter.html","js/map/map.html","js/toolbar/tool.html","js/toolbar/toolbar.html"]),angular.module("js/filter/filter.html",[]).run(["$templateCache",function(a){a.put("js/filter/filter.html",'<ul class="list-unstyled">\n    <li>\n        <label for="species">Species</label>\n        <input id="species"\n               type="text" class="form-control"\n               placeholder="Add Species To Filter"\n               typeahead="sp as sp.$display for sp in findSpecies()  | filter:{common_name:$viewValue}"\n               typeahead-loading="findingSpecies"\n               ng-model="addSpecies.selected" />\n        <button class="btn btn-default" ng-disabled="!addSpecies.speciesToAdd">\n            <i class="fa" ng-class="{\'fa-cog fa-spin\': findingSpecies, \'fa-plus\': !findingSpecies}"></i>\n        </button>\n    </li>\n    <li>\n        <label>Animal Types</label>\n        <div isteven-multi-select\n            max-labels="3"\n            input-model="animalTypes"\n            output-model="animals"\n            button-label="species_type"\n            item-label="species_type"\n            tick-property="selected"\n            orientation="horizontal"\n            helper-elements="all none reset filter"></div>\n    </li>\n    <li>\n        <label>Plant Types</label>\n        <div isteven-multi-select\n            max-labels="3"\n            input-model="plantTypes"\n            output-model="plants"\n            button-label="species_type"\n            item-label="species_type"\n            tick-property="selected"\n            orientation="horizontal"\n            helper-elements="all none reset filter"></div>\n    </li>\n    <li>\n        <label>Partners</label>\n        <div isteven-multi-select\n            max-labels="1"\n            input-model="partners"\n            output-model="networks"\n            button-label="network_name"\n            item-label="network_name"\n            tick-property="selected"\n            orientation="horizontal"\n            selection-mode="single"></div>\n    </li>\n</ul>\n\n')}]),angular.module("js/map/map.html",[]).run(["$templateCache",function(a){a.put("js/map/map.html",'<ui-gmap-google-map ng-if="map" center=\'map.center\' zoom=\'map.zoom\' options="map.options">\n    <npn-stations ng-if="stationView"></npn-stations>\n</ui-gmap-google-map>\n\n<toolbar>\n    <tool icon="fa-search" title="Filter">\n        <filter-control></filter-control>\n    </tool>\n    <tool icon="fa-bars" title="Layers">\n        layer content\n    </tool>\n    <tool icon="fa-bar-chart" title="Visualizations">\n        visualization content\n    </tool>\n    <tool icon="fa-cog" title="Settings">\n        settings content\n    </tool>\n</toolbar>')}]),angular.module("js/toolbar/tool.html",[]).run(["$templateCache",function(a){a.put("js/toolbar/tool.html",'<div class="tool-content {{title.toLowerCase()}}" ng-show="selected">\n    <h2>{{title}}</h2>\n    <div ng-transclude>\n    </div>\n</div>')}]),angular.module("js/toolbar/toolbar.html",[]).run(["$templateCache",function(a){a.put("js/toolbar/toolbar.html",'<div class="toolbar">\n  <ul class="tools-list">\n    <li ng-repeat="t in tools" ng-class="{open: t.selected}"\n        popover-placement="right" popover="{{t.title}}" popover-trigger="mouseenter" popover-popup-delay="1000"\n        ng-click="select(t)">\n      <i class="fa {{t.icon}}"></i>\n    </li>\n  </ul>\n  <div class="toolbar-content" ng-class="{open: open}" ng-transclude></div>\n</div>')}]),angular.module("npn-viz-tool.services",["ngResource"]).factory("LayerService",["$http","$q","uiGmapIsReady",function(a,b,c){function d(c){var d=b.defer();return c.data?d.resolve(c):a.get("layers/"+c.file).success(function(a){c.data=a,d.resolve(c)}),d.promise}function e(){g.data.setStyle(function(a){var b=a.getProperty("$style");return b&&"function"==typeof b?b(a):b?angular.extend(i,b):i})}var f=null,g=null,h=c.promise(1).then(function(b){return g=b[0].map,console.log("LayerService - map is ready"),a.get("layers/layers.json").success(function(a){f={},a.forEach(function(a){f[a.label]=a}),console.log("LayerService - layer list is loaded",f)})}),i={strokeColor:"#ffffff",strokeOpacity:null,strokeWeight:1,fillColor:"#c0c5b8",fillOpacity:null};return{restyleLayers:function(){var a=b.defer();return h.then(function(){e(),a.resolve()}),a.promise},resetLayers:function(){var a=b.defer();return h.then(function(){for(var b in f){var c,d=f[b];if(d.loaded){for(c=0;c<d.loaded.length;c++)d.loaded[c].removeProperty("$style"),g.data.remove(d.loaded[c]);delete d.loaded}}a.resolve()}),a.promise},loadLayer:function(a,c){var i=b.defer();return h.then(function(){var b=f[a];return b?void d(b).then(function(){b.style=c,b.loaded=g.data.addGeoJson(b.data),b.loaded.forEach(function(a){a.setProperty("$style",c)}),e(),i.resolve([g,b.loaded])}):(console.log("no such layer labeled",a),i.reject(a))}),i.promise}}}]),angular.module("npn-viz-tool.stations",["npn-viz-tool.services"]).directive("npnStations",["$http","LayerService",function(a,b){return{restrict:"E",template:'<ui-gmap-markers models="stations.markers" idKey="\'station_id\'" coords="\'self\'" icon="\'icon\'" options="\'markerOpts\'" doCluster="true"></ui-gmap-markers>',scope:{},controller:["$scope",function(c){c.stations={states:[],markers:[]};var d=[];a.get("/npn_portal/stations/getStationCountByState.json").success(function(e){var f=e.reduce(function(a,b){return a[b.state]=b,b.number_stations=parseInt(b.number_stations),a.$min=Math.min(a.$min,b.number_stations),a.$max=Math.max(a.$max,b.number_stations),a},{$max:0,$min:0}),g=d3.scale.linear().domain([f.$min,f.$max]).range(["#F7FBFF","#08306B"]);b.resetLayers().then(function(){b.loadLayer("US States",function(a){var b=a.getProperty("NAME"),d=-1!=c.stations.states.indexOf(b),e=f[b],h={strokeOpacity:1,strokeColor:"#ffffff",strokeWeight:1,fillOpacity:0};return e&&!d?(e.visited=!0,h.fillOpacity=.8,h.fillColor=g(e.number_stations),h.clickable=!0):d||console.warn("no station count for "+b),h}).then(function(b){var e=b[0];d.push(e.data.addListener("mouseover",function(a){e.data.overrideStyle(a.feature,{strokeWeight:3})})),d.push(e.data.addListener("mouseout",function(){e.data.revertStyle()})),d.push(e.data.addListener("click",function(b){var d=b.feature.getProperty("NAME");-1===c.stations.states.indexOf(d)&&(c.stations.states.push(d),e.panTo(b.latLng),e.setZoom(6),a.get("/npn_portal/stations/getAllStations.json",{params:{state_code:d}}).success(function(a){a.forEach(function(a){a.markerOpts={title:a.station_name}}),c.stations.markers=c.stations.markers.concat(a),e.data.remove(b.feature)}))}))})})}),c.$on("$destroy",function(){b.resetLayers(),d.forEach(function(a){a.remove()})})}]}}]),angular.module("npn-viz-tool.toolbar",[]).directive("toolbar",function(){return{restrict:"E",templateUrl:"js/toolbar/toolbar.html",transclude:!0,scope:{},controller:function(a){var b=a.tools=[];a.select=function(b){b.selected=!b.selected,a.open=b.selected},this.addTool=function(a){b.push(a)}}}}).directive("tool",function(){return{restrict:"E",require:"^toolbar",templateUrl:"js/toolbar/tool.html",transclude:!0,scope:{title:"@",icon:"@"},link:function(a,b,c,d){d.addTool(a)}}});