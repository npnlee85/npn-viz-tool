/*
 * USANPN-Visualization-Tool
 * Version: 1.0.0 - 2017-05-11
 */
angular.module("npn-viz-tool.vis-activity",["npn-viz-tool.vis","npn-viz-tool.filter","npn-viz-tool.filters","npn-viz-tool.settings","ui.bootstrap"]).factory("ActivityCurve",["$log","$filter","FilterService",function(a,b,c){var d=b("doy"),e=b("number"),f=b("speciesTitle"),g=function(a){return e(a,2)},h=[{id:"num_yes_records",label:"Total Yes Records"},{id:"proportion_yes_records",label:"Proportion Yes Records",valueFormat:g}],i={Plantae:h.concat([{id:"numindividuals_with_yes_record",label:"Total Individuals with Yes Records"},{id:"proportion_individuals_with_yes_record",label:"Proportion Individuals with Yes Records",valueFormat:g}]),Animalia:h.concat([{id:"numsites_with_yes_record",label:"Total Sites with Yes Records"},{id:"proportion_sites_with_yes_record",label:"Proportion Sites with Yes Records",valueFormat:g},{id:"total_numanimals_in-phase",label:"Total Animals In Phase"},{id:"mean_numanimals_in-phase",label:"Animals In Phase",valueFormat:g},{id:"mean_numanimals_in-phase_per_hr",label:"Animals In Phase per Hour",valueFormat:g},{id:"mean_numanimals_in-phase_per_hr_per_acre",label:"Animals In Phase per Hour per Acre",valueFormat:g}])},j=function(a){var b,d,e,f,g,h=this;h.id=a,Object.defineProperty(this,"validPhenophases",{get:function(){return f}}),Object.defineProperty(this,"validMetrics",{get:function(){return g}}),Object.defineProperty(this,"year",{enumerable:!0,get:function(){return d},set:function(a){delete h.$data,d=a}}),Object.defineProperty(this,"phenophase",{enumerable:!0,get:function(){return e},set:function(a){delete h.$data,e=a}}),Object.defineProperty(this,"species",{enumerable:!0,get:function(){return b},set:function(a){delete h.$data,b=a,g=b&&b.kingdom?i[b.kingdom]||[]:[],h.metric&&-1===g.indexOf(h.metric)&&delete h.metric,g.length&&!h.metric&&(h.metric=g[0]),f=void 0,b&&c.getFilter().getPhenophasesForSpecies(b.species_id).then(function(a){f=a,h.phenophase=f.length?f[0]:void 0})}})};return j.prototype.axisLabel=function(){return this.metric?this.metric.label:"?"},j.prototype.doyDataValue=function(){var a,b,c=this;if(c.doyFocus&&c.$data)for(b=0;b<c.$data.length;b++)if(a=c.$data[b],c.doyFocus>=a.start_doy&&c.doyFocus<=a.end_doy)return(c.metric.valueFormat||angular.identity)(a[c.metric.id])},j.prototype.legendLabel=function(a){var b=this.doyDataValue();return this.year+": "+f(this.species)+" - "+this.phenophase.phenophase_name+(a?" ("+this.metric.label+")":"")+("undefined"!=typeof b?" ["+b+"]":"")},j.prototype.metricId=function(){return this.metric?this.metric.id:void 0},j.prototype.data=function(b){if(arguments.length)return delete this.$data,b&&(b.forEach(function(a){a.start_doy=d(a.start_date),a.end_doy=d(a.end_date)}),b.sort(function(a,b){return a.start_doy-b.start_doy}),this.$data=b),this;var c=this,e=c.$data;return e&&c.metric&&(e=e.filter(function(a){return-9999!=a[c.metric.id]}),e.length!==c.$data.length&&a.debug("filtered out "+(c.$data.length-e.length)+"/"+c.$data.length+" of -9999 records for metric ",c.metric)),e},j.prototype.color=function(a){return arguments.length?(this.$color=a,this):this.$color},j.prototype.axisOrient=function(a){return arguments.length?(this.$orient=a,this):this.$orient},j.prototype.axis=function(){var a=this.y(),b=a.ticks(),c=d3.svg.axis().scale(a);return b.length&&(b[b.length-1]=a.domain()[1],c.tickValues(b)),c.orient(this.axisOrient()||"left")},j.prototype.x=function(a){return arguments.length?(this.$$x=a,this):this.$$x},j.prototype.y=function(a){return arguments.length?(this.$$y=a,this):this.$$y},j.prototype.isValid=function(){return this.species&&this.phenophase&&this.year&&this.metric},j.prototype.plotted=function(){return this.isValid()&&this.data()},j.prototype.shouldRevisualize=function(){return this.isValid()&&!this.data()},j.prototype.domain=function(){var b,c=this,d=c.data();return d&&c.metric?(b=d3.extent(d,function(a){return a[c.metric.id]}),b[0]>0?b[0]=0:b[0]<0&&a.warn("negative domain start for metric",b,c.metric),b):void 0},j.prototype.draw=function(b){var c,d,e,f=this,g=f.data();b.selectAll("path.curve.curve-"+f.id).remove(),g&&g.length&&(g=g.concat([g[g.length-1]]),a.debug("draw.data",g),c=f.x(),d=f.y(),e=d3.svg.line().interpolate(f.interpolate||"monotone").x(function(a,b){return c(b===g.length-1?a.end_doy:a.start_doy)}).y(function(a){return d(a[f.metric.id])}),a.debug("ActivityCurve.draw",f.species,f.phenophase,f.year,f.metric,g,f.domain(),d.domain()),b.append("path").attr("class","curve curve-"+f.id).attr("fill","none").attr("stroke",f.color()).attr("stroke-linejoin","round").attr("stroke-linecap","round").attr("stroke-width",1.5).attr("d",e(g)))},j}]).controller("ActivityCurvesVisCtrl",["$scope","$q","$uibModalInstance","$timeout","$log","$filter","ActivityCurve","FilterService","ChartService",function(a,b,c,d,e,f,g,h,i){function j(){a.selection.$updateCount>0&&!a.selection.shouldRevisualize()&&a.selection.$updateCount++}a.modal=c,a.frequencies=[{value:"months",label:"Monthly"},{value:14,label:"Bi-weekly"},{value:7,label:"Weekly"}],a.selection={$updateCount:0,interpolate:"monotone",curves:[{color:"#0000ff",orient:"left"},{color:"orange",orient:"right"}].map(function(a,b){return new g(b).color(a.color).axisOrient(a.orient)}),frequency:a.frequencies[0],shouldRevisualize:function(){return a.selection.curves.reduce(function(a,b){return a||b.shouldRevisualize()},!1)}},a.$watch("selection.frequency",function(b){a.selection.curves.forEach(function(a){a.data(null)})}),a.$watch("selection.interpolate",function(b){a.selection.curves.forEach(function(a){b?a.interpolate=b:delete a.interpolate,j()})}),a.$watch("selection.curves[0].metric",j),a.$watch("selection.curves[1].metric",j),a.visualize=function(){function c(a){var b=new Date;return a===b.getFullYear()?f("date")(b,"yyyy-MM-dd"):a+"-12-31"}var d=a.selection.curves.filter(function(a){return a.data(null).isValid()}).map(function(d){var f=b.defer(),g={request_src:"npn-vis-activity-curves",start_date:d.year+"-01-01",end_date:c(d.year),frequency:a.selection.frequency.value,"species_id[0]":d.species.species_id,"phenophase_id[0]":d.phenophase.phenophase_id};return e.debug("params",g),a.working=!0,i.getMagnitudeData(g,function(a){f.resolve(d.data(a))}),f.promise});b.all(d).then(function(){e.debug("all activity data has arrived"),a.selection.$updateCount++,delete a.working})}}]).directive("activityCurveControl",["$log","FilterService",function(a,b){return{restrict:"E",templateUrl:"js/activity/curve-control.html",scope:{input:"="},link:function(c){c.validYears=function(a){for(var b=(new Date).getFullYear(),c=[];b>=a;)c.push(a++);return c}(2010),c.input.year=c.validYears[c.validYears.length-2],b.getFilter().getSpeciesList().then(function(b){a.debug("speciesList",b),c.speciesList=b,b.length&&0===c.input.id&&(c.input.species=c.input.id<b.length?b[c.input.id]:b[0])})}}}]).directive("activityCurvesChart",["$log","$timeout","$filter","ChartService",function(a,b,c,d){function e(a){for(var b=1,c=[];365>=b;)c.push(b),b+=a;return c}var f={7:{rotate:45,values:e(14)},14:{rotate:45,values:e(28)},months:{values:[1,32,60,91,121,152,182,213,244,274,305,335]}},g=new Date(2010,0),h=c("legendDoy");return{restrict:"E",replace:!0,template:'<div class="chart-container"><vis-download ng-if="selection.$updateCount > 0" selector=".chart" filename="npn-activity-curves.png"></vis-download><div><svg class="chart"></svg></div></div>',scope:{selection:"="},link:function(c){function e(){return!l.curves[1].isValid()||l.curves[0].metricId()===l.curves[1].metricId()}function i(){function b(a){return a&&2===a.length?[a[0],1.05*a[1]]:a}k.selectAll("g .axis").remove();var c=e();if(c){var d=d3.extent(l.curves.reduce(function(a,b){return b.isValid()&&(a=a.concat(b.domain())),a},[])),g=s().domain(b(d));a.debug("ActivityCurves.common domain",d),l.curves.forEach(function(a){a.y(g)})}else l.curves.forEach(function(a){a.isValid()&&a.y(s().domain(b(a.domain())))});k.append("g").attr("class","y axis left").call(l.curves[0].axis()).append("text").attr("class","axis-title").attr("transform","rotate(-90)").attr("y","0").attr("dy","-4em").attr("x",-1*(n.height/2)).style("text-anchor","middle").text(l.curves[0].axisLabel()),c||k.append("g").attr("class","y axis right").attr("transform","translate("+n.width+")").call(l.curves[1].axis()).append("text").attr("class","axis-title").attr("transform","rotate(-90)").attr("y","0").attr("dy","4em").attr("x",-1*(n.height/2)).style("text-anchor","middle").text(l.curves[1].axisLabel());var h=f[l.frequency.value];r.tickValues(h.values),k.append("g").attr("class","x axis").attr("transform","translate(0,"+n.height+")").call(r).append("text").attr("y","0").attr("dy","3em").attr("x",n.width/2).attr("class","axis-label").style("text-anchor","middle").text("Date"),h.rotate&&(k.selectAll("g.x.axis g.tick text").style("text-anchor","end").attr("transform","rotate(-"+h.rotate+")"),k.selectAll("g.x.axis .axis-label").attr("dy","4em")),k.selectAll(".axis path").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),k.selectAll(".axis line").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),k.selectAll("text").style("font-family","Arial"),k.selectAll("g .x.axis text").style("font-size",m+"px"),k.selectAll("g .y.axis text").style("font-size",m+"px"),c||(k.selectAll("g.y.axis.left g.tick text").style("fill",l.curves[0].color()),k.selectAll("g.y.axis.left text.axis-title").style("fill",l.curves[0].color()),k.selectAll("g.y.axis.right g.tick text").style("fill",l.curves[1].color()),k.selectAll("g.y.axis.right text.axis-title").style("fill",l.curves[1].color())),l.curves.forEach(function(a){a.draw(k)}),j()}function j(){k.select(".legend").remove();var a=e(),b=k.append("g").attr("class","legend").attr("transform","translate(150,-"+(n.margin.top-10)+")").style("font-size","1em"),c=5,d=4;l.curves.reduce(function(e,f){var g;return f.plotted()&&(g=b.append("g").attr("class","legend-item curve-"+f.id).attr("transform","translate(10,"+((e+1)*m+e*d)+")"),g.append("circle").attr("r",c).attr("fill",f.color()),g.append("text").style("font-size",m+"px").attr("x",2*c).attr("y",c/2).text(f.legendLabel(!a)),e++),e},0)}var k,l=c.selection,m=14,n=d.getSizeInfo({top:80,left:80,right:80,bottom:80}),o=d3.time.format("%m/%d"),p=function(a){var b=(a-1)*d.ONE_DAY_MILLIS+g.getTime(),c=new Date(b);return o(c)},q=d3.scale.linear().range([0,n.width]).domain([1,365]),r=d3.svg.axis().scale(q).orient("bottom").tickFormat(p),s=function(){return d3.scale.linear().range([n.height,0]).domain([0,100])};l.curves.forEach(function(a){a.x(q).y(s())}),b(function(){function a(){l.curves.forEach(function(a){delete a.doyFocus}),e.style("display","none"),j()}function b(){l.curves.reduce(function(a,b){return a||b.plotted()},!1)&&e.style("display",null)}function c(){var a=d3.mouse(this),b=a[0],c=(a[1],Math.round(q.invert(b)));f.attr("transform","translate("+b+")"),g.attr("x",b+10).text(h(c)),l.curves.forEach(function(a){a.doyFocus=c}),j()}var d=d3.select(".chart").attr("width",n.width+n.margin.left+n.margin.right).attr("height",n.height+n.margin.top+n.margin.bottom);d.append("g").append("rect").attr("width","100%").attr("height","100%").attr("fill","#fff"),k=d.append("g").attr("transform","translate("+n.margin.left+","+n.margin.top+")"),k.append("g").attr("class","chart-title").append("text").attr("y","0").attr("dy","-3em").attr("x","0").style("text-anchor","start").style("font-size","18px").text("Activity Curves"),d.append("g").append("text").attr("dx",5).attr("dy",n.height+136).attr("font-size","11px").attr("font-style","italic").attr("text-anchor","right").text("USA National Phenology Network, www.usanpn.org"),i();var e=d.append("g").attr("transform","translate("+n.margin.left+","+n.margin.top+")").style("display","none"),f=e.append("line").attr("class","focus").attr("fill","none").attr("stroke","green").attr("stroke-width",1).attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",n.height),g=e.append("text").attr("class","focus-doy").style("text-anchor","start").attr("y",10).attr("x",0).text("testing");d.append("rect").attr("class","overlay").attr("transform","translate("+n.margin.left+","+n.margin.top+")").style("fill","none").style("pointer-events","all").attr("x",0).attr("y",0).attr("width",n.width).attr("height",n.height).on("mouseover",b).on("mouseout",a).on("mousemove",c)}),c.$watch("selection.$updateCount",function(a){a>0&&i()})}}}]),angular.module("npn-viz-tool.bounds",["npn-viz-tool.filter","uiGmapgoogle-maps"]).service("RestrictedBoundsService",["$log","$location","uiGmapGoogleMapApi",function(a,b,c){var d=b.search().allowedBounds,e={},f={getRestrictor:function(a,b){return e[a]||(e[a]=new g(a)),e[a].setBounds(b),e[a]}},g=function(b){this.key=b;var c=this;c.center_changed=function(b,e,f){return a.debug("["+c.key+"].center_changed"),c.bounds?(d&&!c.rectangle&&(c.rectangle=new google.maps.Rectangle({strokeColor:"#FFF",strokeOpacity:.8,strokeWeight:2,fillColor:"#FFF",fillOpacity:.35,map:b,bounds:c.bounds})),c.bounds.contains(b.getCenter())?void(c.lastValidCenter=b.getCenter()):(a.debug("["+c.key+"] attempted to pan center out of bounds, panning back to ",c.lastValidCenter),void b.panTo(c.lastValidCenter))):void a.debug("["+c.key+"] no bounds set ignoring.")}};return g.prototype.setBounds=function(b){a.debug("["+this.key+"].setBounds:",b),this.bounds=b,this.lastValidCenter=b?b.getCenter():void 0,this.rectangle&&this.rectangle.setMap(null),this.rectangle=void 0},g.prototype.getBounds=function(){return this.bounds},f}]).directive("boundsManager",["$rootScope","$log","uiGmapGoogleMapApi","FilterService","BoundsFilterArg",function(a,b,c,d,e){return{restrict:"E",template:'<ui-gmap-drawing-manager ng-if="!isFilterEmpty()" options="options" control="control"></ui-gmap-drawing-manager>',controller:["$scope",function(f){function g(){d.getFilter().hasSufficientCriteria()&&a.$broadcast("filter-rerun-phase2",{})}f.isFilterEmpty=d.isFilterEmpty,c.then(function(a){var c=a,h={drawingModes:[c.drawing.OverlayType.RECTANGLE],position:c.ControlPosition.TOP_RIGHT,drawingControl:!1};b.debug("api",a),f.options={drawingControlOptions:h,rectangleOptions:e.RECTANGLE_OPTIONS},f.control={},f.$on("bounds-filter-ready",function(a,b){c.event.addListener(b.filter.arg,"mouseover",function(){b.filter.arg.setOptions(angular.extend({},e.RECTANGLE_OPTIONS,{strokeWeight:2}))}),c.event.addListener(b.filter.arg,"mouseout",function(){b.filter.arg.setOptions(e.RECTANGLE_OPTIONS)}),c.event.addListener(b.filter.arg,"rightclick",function(){d.removeFromFilter(b.filter),g()})}),f.$watch("control.getDrawingManager",function(){if(f.control.getDrawingManager){var a=f.control.getDrawingManager();c.event.addListener(a,"rectanglecomplete",function(b){a.setDrawingMode(null),d.addToFilter(new e(b)),g()}),f.$on("filter-reset",function(b,c){h.drawingControl=!1,a.setOptions(h)}),f.$on("filter-update",function(b,c){h.drawingControl=d.hasSufficientCriteria(),a.setOptions(h)})}})})}]}}]),angular.module("npn-viz-tool.vis-cache",["angular-md5"]).factory("CacheService",["$log","$timeout","md5",function(a,b,c){var d=[],e={keyFromObject:function(a){return c.createHash(JSON.stringify(a))},dump:function(){a.debug("cache",d)},put:function(c,e){if(null!=c){if(null==e)return a.debug("removing cached object '"+c+"'",d[c]),void(d[c]=null);var f=arguments.length>2?arguments[2]:3e5,g=0>f?-1:(new Date).getTime()+f;a.debug("caching (expiry:"+g+") '"+c+"'",e),d[c]={data:e,expiry:g},f>0&&b(function(){a.debug("expiring cached object '"+c+"'",d[c]),d[c]=null},f)}},get:function(b){var c=d[b];return null==c?arguments.length>1?arguments[1]:null:c.expiry<0||c.expiry>(new Date).getTime()?(a.debug("cache entry '"+b+"' is valid returning."),c.data):(a.debug("cache entry '"+b+"' has expired."),delete d[b],arguments.length>1?arguments[1]:null)}};return e}]),angular.module("npn-viz-tool.vis-calendar",["npn-viz-tool.vis","npn-viz-tool.filter","npn-viz-tool.filters","ui.bootstrap"]).controller("CalendarVisCtrl",["$scope","$uibModalInstance","$http","$timeout","$filter","$log","FilterService","ChartService",function(a,b,c,d,e,f,g,h){function i(){f.debug("Calling phenophase list update"),a.phenophaseList=[];var b=a.selection.species.species_id,c=a.selection.year;b&&c&&(a.phenophaseList=[],g.getFilter().getPhenophasesForSpecies(b,!0,[c]).then(function(b){f.debug("phenophaseList",b),b.length&&(b.splice(0,0,{phenophase_id:-1,phenophase_name:"All phenophases"}),a.selection.phenophase=b.length?b[0]:void 0),a.phenophaseList=b}))}function j(){a.selection.color<a.colors.length?a.selection.color++:a.selection.color=0}function k(b){f.debug("addToPlot",b),b&&(-1===b.phenophase_id?(f.debug("add all phenophases..."),m(b.species_id),a.phenophaseList.filter(function(a){return-1!==a.phenophase_id}).forEach(function(b){k(angular.extend(a.selection.species,b))})):(a.toPlot.push(l(b)),j()),a.data=x=void 0)}function l(b){var c=b||angular.extend({},a.selection.species,a.selection.phenophase);return angular.extend({},c,{color:a.selection.color})}function m(b){for(;;){var c,d=-1;for(c=0;c<a.toPlot.length;c++)if(a.toPlot[c].species_id===b){d=c;break}if(-1===d)break;a.removeFromPlot(d)}}function n(){var a=d3.select(".chart");a.selectAll("g .y.axis line").style("stroke","#777").style("stroke-dasharray","2,2"),a.selectAll(".axis path").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),a.selectAll(".axis line").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),a.selectAll("text").style("font-family","Arial")}function o(b){var c=-1*(D.rangeBand()/2+a.yAxisConfig.labelOffset);b.selectAll("text").attr("x",0).attr("dy",c).attr("style","text-anchor: start; font-size: "+a.yAxisConfig.fontSize+"px;")}function p(){D.rangeBands([z.height,0],a.yAxisConfig.bandPadding,.5),x&&x.labels&&D.domain(d3.range(0,x.labels.length)),E.scale(D),y&&y.selectAll("g .y.axis").call(E).call(o)}function q(a,b,c){var d=a+b;return Number(d.toFixed(c))}function r(a){return x&&x.labels&&a<x.labels.length?x.labels[a]:""}function s(){var a,b=[1],c=1;for(a=1;12>a;a++){var d=new Date(1900,a);d.setTime(d.getTime()-h.ONE_DAY_MILLIS),c+=d.getDate(),b.push(c)}return B.domain().filter(function(a){return-1!==b.indexOf(a)})}function t(a){var b=new Date(1900,0);return b.setTime(b.getTime()+h.ONE_DAY_MILLIS*a),A(b)}function u(){if(x){a.working=!0,B.rangeBands([0,z.width],-.1,.5),C.scale(B),y.selectAll("g .x.axis").call(C),p();var b=y.selectAll(".doy").data(x.data,function(a){return a.y+"-"+a.x+"-"+a.color});b.exit().remove(),b.enter().insert("line",":first-child").attr("class","doy");var c=Math.ceil(B.rangeBand()/2),d=D.rangeBand()/2;b.attr("x1",function(a){return B(a.x)-c}).attr("y1",function(a,b){return D(a.y)+d}).attr("x2",function(a){return B(a.x)+c}).attr("y2",function(a,b){return D(a.y)+d}).attr("doy-point",function(a){return"("+a.x+","+a.y+")"}).attr("stroke",function(b){return b.color===G?G:a.colorRange[b.color]}).attr("stroke-width",D.rangeBand()).append("title").text(function(a){return a.x}),n(),a.working=!1}}function v(){function b(a,b){angular.forEach(a,function(a){d.data.push({y:g,x:a,color:b})})}if(w){if(w.error_message)return f.warn("Received error",w),a.error_message=w.error_message,void(a.working=!1);var c={},d={labels:[],data:[]},g=a.toPlot.length*a.toPlotYears.length-1;angular.forEach(w,function(a){c[a.species_id]=a;var b={};angular.forEach(a.phenophases,function(a){b[a.phenophase_id]=a}),a.phenophases=b}),f.debug("speciesMap",c),angular.forEach(a.toPlot,function(h){f.debug("toPlot",h);var i=c[h.species_id],j=i.phenophases[h.phenophase_id];angular.forEach(a.toPlotYears,function(c){j&&j.years&&j.years[c]&&(a.selection.negative&&(f.debug("year negative",g,c,i.common_name,j,j.years[c].negative),b(j.years[c].negative,G)),f.debug("year positive",g,c,i.common_name,j,j.years[c].positive),b(j.years[c].positive,h.color)),d.labels.splice(0,0,e("speciesTitle")(h)+"/"+h.phenophase_name+" ("+c+")"),f.debug("y of "+g+" is for "+d.labels[0]),g--})}),a.data=x=d,f.debug("calendar data",x),u()}}var w,x,y,z=(g.getFilter().getDateArg(),h.getSizeInfo({top:20,right:35,bottom:45,left:35})),A=d3.time.format("%B"),B=d3.scale.ordinal().rangeBands([0,z.width]).domain(d3.range(1,366)),C=d3.svg.axis().scale(B).orient("bottom").tickValues(s()).tickFormat(t),D=d3.scale.ordinal().rangeBands([z.height,0]).domain(d3.range(0,6)),E=d3.svg.axis().scale(D).orient("right").tickSize(z.width).tickFormat(function(a){return a}).tickFormat(r);a.validYears=d3.range(1900,(new Date).getFullYear()+1),a.modal=b;var F=g.getColorScale();a.colors=F.domain(),a.colorRange=F.range(),a.selection={color:0,year:(new Date).getFullYear(),netagive:!1},a.toPlotYears=[],a.toPlot=[],g.getFilter().getSpeciesList().then(function(b){f.debug("speciesList",b),a.speciesList=b,b.length&&(a.selection.species=b[0])}),a.$watch("selection.species",i),a.$watch("selection.year",i),a.canAddToPlot=function(){if(!a.selection.species||!a.selection.phenophase)return!1;if(0===a.toPlot.length)return!0;var b,c=l();for(b=0;b<a.toPlot.length;b++)if(angular.equals(a.toPlot[b],c))return!1;return!0},a.addToPlot=function(){k(l())},a.removeFromPlot=function(b){a.toPlot.splice(b,1),a.data=x=void 0},a.addYear=function(){a.selection.year&&(a.toPlotYears.push(a.selection.year),a.toPlotYears.sort(),a.data=x=void 0)},a.canAddYear=function(){return a.toPlotYears.length<2&&a.selection.year&&-1===a.toPlotYears.indexOf(a.selection.year)&&-1!==a.validYears.indexOf(a.selection.year)},a.removeYear=function(b){a.toPlotYears.splice(b,1),a.data=x=void 0},d(function(){var a=d3.select(".chart").attr("width",z.width+z.margin.left+z.margin.right).attr("height",z.height+z.margin.top+z.margin.bottom);a.append("g").append("rect").attr("width","100%").attr("height","100%").attr("fill","#fff"),y=a.append("g").attr("transform","translate("+z.margin.left+","+z.margin.top+")"),y.append("g").attr("class","x axis").attr("transform","translate(0,"+z.height+")").call(C),y.append("g").attr("class","y axis").call(E).call(o),y.selectAll("g .x.axis text").attr("style","font-size: 14px"),y.selectAll("g .y.axis path").style("display","none"),a.append("g").append("text").attr("dx",5).attr("dy",z.height+61).attr("font-size","11px").attr("font-style","italic").attr("text-anchor","right").text("USA National Phenology Network, www.usanpn.org"),n()},500),a.yAxisConfig={labelOffset:4,bandPadding:.5,fontSize:14},a.$watch("yAxisConfig.labelOffset",u),a.$watch("yAxisConfig.bandPadding",u),a.$watch("yAxisConfig.fontSize",u),a.incrBandPadding=function(){a.yAxisConfig.bandPadding=q(a.yAxisConfig.bandPadding,.05,2)},a.decrBandPadding=function(){a.yAxisConfig.bandPadding=q(a.yAxisConfig.bandPadding,-.05,2)},a.incrFontSize=function(){a.yAxisConfig.fontSize++},a.decrFontSize=function(){a.yAxisConfig.fontSize--};var G="#aaa";a.$watch("selection.negative",v),a.visualize=function(){if(x)return u();a.working=!0,f.debug("visualize",a.selection.axis,a.toPlot);var b=(g.getFilter().getDateArg(),{request_src:"npn-vis-calendar"}),c={};a.toPlotYears.forEach(function(a,c){b["year["+c+"]"]=a}),angular.forEach(a.toPlot,function(a,d){c[a.species_id+"."+a.phenophase_id]=a.color,b["species_id["+d+"]"]=a.species_id,b["phenophase_id["+d+"]"]=a.phenophase_id}),a.error_message=void 0,h.getObservationDates(b,function(a){w=a,v()})}}]),angular.module("npn-viz-tool.cluster",[]).factory("ClusterService",[function(){var a={getDefaultClusterOptions:function(){var a=[0,1,2,4,8,16,32,64,128,256].map(function(a){return{n:1e3*a,url:"cluster/m"+a+".png",width:52,height:52,textColor:"#fff"}});return{styles:a,maxZoom:12}}};return a}]),angular.module("npn-viz-tool.export",["npn-viz-tool.filter"]).directive("exportControl",["$log","$http","$window","FilterService",function(a,b,c,d){return{restrict:"E",template:'<a title="Export" href id="export-control" class="btn btn-default btn-xs" ng-disabled="!getFilteredMarkers().length" ng-click="exportData()"><i class="fa fa-download"></i></a>',controller:["$scope",function(e){e.getFilteredMarkers=d.getFilteredMarkers,e.exportData=function(){var e=d.getFilter(),f=e.getDateArg().toExportParam();f.downloadType="selectable",f.searchSource="visualization-tool",f.startYear===f.endYear&&(f.endYear+=1,f.endDate=f.endYear+"-01-01"),e.getSpeciesArgs().length&&(f.species=[],e.getSpeciesArgs().forEach(function(a){f.species.push(a.getId())})),e.getNetworkArgs().length&&(f.partnerGroups=[],e.getNetworkArgs().forEach(function(a){f.partnerGroups.push(a.getId())})),e.getGeographicArgs().length&&(f.stations=[],d.getFilteredMarkers().forEach(function(a,b){f.stations.push(a.station_id)})),a.debug("export.params",f);var g="",h="";location.hostname.includes("local")?(g=location.protocol+"//"+location.hostname,h=g):location.hostname.includes("dev")?(g="//data-dev.usanpn.org",h="http://data-dev.usanpn.org"):(g="//data.usanpn.org",h="http://data.usanpn.org"),b({method:"POST",url:h+":3002/pop/search",data:{searchJson:f}}).then(function(a){location.hostname.includes("local")?c.open(g+":8080?search="+a.data.saved_search_hash):(console.log(g+"/observations?search="+a.data.saved_search_hash),c.open(g+"/observations?search="+a.data.saved_search_hash))})}}]}}]),angular.module("npn-viz-tool.filter",["npn-viz-tool.settings","npn-viz-tool.stations","npn-viz-tool.cluster","npn-viz-tool.vis-cache","npn-viz-tool.help","angular-md5","isteven-multi-select"]).factory("FilterArg",[function(){var a=function(a){this.arg=a};return a.prototype.getArg=function(){return this.arg},a.prototype.$filter=function(a){return!0},a.prototype.$removed=function(){},a}]).factory("DateFilterArg",["FilterArg",function(a){var b=function(b){b&&(b.start_date&&"number"!=typeof b.start_date&&(b.start_date=parseInt(b.start_date)),b.end_date&&"number"!=typeof b.end_date&&(b.end_date=parseInt(b.end_date))),a.apply(this,arguments)};return b.prototype.getId=function(){return"date"},b.prototype.getStartYear=function(){return this.arg.start_date},b.prototype.getStartDate=function(){return this.arg.start_date+"-01-01"},b.prototype.getEndYear=function(){return this.arg.end_date},b.prototype.getEndDate=function(){return this.arg.end_date+"-12-31"},b.prototype.toExportParam=function(){return{startDate:this.arg.start_date+"-01-01",endDate:this.arg.end_date+"-01-01",startYear:this.arg.start_date,startMonth:"January",startDay:1,endYear:this.arg.end_date,endMonth:"January",endDay:1,rangeType:"Calendar"}},b.prototype.toString=function(){return this.arg.start_date+"-"+this.arg.end_date},b.fromString=function(a){var c=a.indexOf("-");return new b({start_date:a.substring(0,c),end_date:a.substring(c+1)})},b}]).factory("NetworkFilterArg",["$http","$rootScope","$log","$url","FilterArg","SpeciesFilterArg","SettingsService",function(a,b,c,d,e,f,g){var h=function(a){e.apply(this,arguments),this.counts={station:"?",observation:"?"},this.stations=[],this.ydo=arguments.length>1?arguments[1]:g.getSettingValue("onlyYesData"),c.debug("NetworkFilterArg",this.arg,this.ydo);var d=this;b.$broadcast("network-filter-ready",{filter:d})};return h.prototype.getId=function(){return parseInt(this.arg.network_id)},h.prototype.getName=function(){return this.arg.network_name},h.prototype.toExportParam=function(){return this.getId()},h.prototype.resetCounts=function(a){this.counts.station=this.counts.observation=a,this.stations=[]},h.prototype.updateCounts=function(a,b,c){var d,e,g=this.getId(),h=0;if(-1!==a.networks.indexOf(g)){-1===this.stations.indexOf(a.station_id)&&(this.stations.push(a.station_id),this.counts.station++);for(d in b)(b[d].$match||c)&&(e=f.countObservationsForPhenophase.call(this,b[d]),c&&(a.observationCount+=e),this.counts.observation+=e,h+=e)}return h},h.prototype.toString=function(){var a=this.arg.network_id;return this.ydo&&(a+=":1"),a},h.fromString=function(b){var e=b.split(":"),f=e.length>1?e[0]:b,g=2===e.length?"1"===e[1]:void 0;return a.get(d("/npn_portal/networks/getPartnerNetworks.json"),{params:{active_only:!0}}).then(function(a){for(var d=a.data,e=0;d&&e<d.length;e++)if(f==d[e].network_id)return g?new h(d[e],g):new h(d[e]);c.warn("NO NETWORK FOUND WITH ID "+b)})},h}]).factory("SpeciesFilterArg",["$http","$rootScope","$log","$url","FilterArg","SettingsService",function(a,b,c,d,e,f){var g=function(g,h){e.apply(this,arguments),this.counts={station:"?",observation:"?"},h&&"*"!=h&&(this.phenophaseSelections=h.split(",")),this.ydo=arguments.length>2?arguments[2]:f.getSettingValue("onlyYesData"),c.debug("SpeciesFilterArg:",g,this.phenophaseSelections,this.ydo);var i=this;a.get(d("/npn_portal/phenophases/getPhenophasesForSpecies.json"),{params:{return_all:!0,species_id:i.arg.species_id}}).success(function(a){var c={};i.phenophases=a[0].phenophases.filter(function(a){return c[a.phenophase_id]?!1:(c[a.phenophase_id]=a,a.selected=!i.phenophaseSelections||-1!=i.phenophaseSelections.indexOf(a.phenophase_id),!0)}),i.phenophasesMap={},angular.forEach(i.phenophases,function(a){i.phenophasesMap[a.phenophase_id]=a}),b.$broadcast("species-filter-ready",{filter:i})})};return g.countObservationsForPhenophase=function(a){var b=this||{},c=0;return a.y&&(c+=a.y),b.ydo||(a.n&&(c+=a.n),a.q&&(c+=a.q)),c},g.prototype.getId=function(){return parseInt(this.arg.species_id)},g.prototype.getPhenophaseList=function(){return angular.copy(this.phenophases)},g.prototype.resetCounts=function(a){this.counts.station=this.counts.observation=a,angular.forEach(this.phenophases,function(a){a.count=0})},g.prototype.$filter=function(a){var b=this,d=0,e=Object.keys(a).filter(function(e){if(!b.phenophasesMap[e])return c.error("phenophase_id: "+e+" not found for species: "+b.arg.species_id),!1;var f=g.countObservationsForPhenophase.call(b,a[e]);return b.phenophasesMap[e].count+=f,a[e].$match=b.phenophasesMap[e].selected,a[e].$match&&(d+=f),a[e].$match});return e.length>0&&b.counts.station++,b.counts.observation+=d,d},g.prototype.toExportParam=function(){var a={species_id:this.getId(),common_name:this.arg.common_name},b=this.phenophases.filter(function(a){return a.selected});return b.length!==this.phenophases.length&&(a.phenophases=b.map(function(a){return parseInt(a.phenophase_id)})),a},g.prototype.toString=function(){var a=this.arg.species_id+":",b=this.phenophases.filter(function(a){return a.selected});return b.length===this.phenophases.length?a+="*":b.forEach(function(b,c){a+=(c>0?",":"")+b.phenophase_id}),this.ydo&&(a+=":1"),a},g.fromString=function(b){var c=b.split(":"),e=c[0],f=c[1],h=3===c.length?"1"===c[2]:void 0;return a.get(d("/npn_portal/species/getSpeciesById.json"),{params:{species_id:e}}).then(function(a){return a.data.species_id=e,h?new g(a.data,f,h):new g(a.data,f)})},g}]).factory("GeoFilterArg",["FilterArg",function(a){function b(a,c){var d,e,f,g=c.getType();if("Polygon"==g){for(e=c.getArray(),f=0;f<e.length;f++)if(d=new google.maps.Polygon({paths:e[f].getArray()}),google.maps.geometry.poly.containsLocation(a,d)||google.maps.geometry.poly.isLocationOnEdge(a,d))return!0}else if("MultiPolygon"===g||"GeometryCollection"==g)for(e=c.getArray(),f=0;f<e.length;f++)if(b(a,e[f]))return!0;return!1}var c=function(b,c){a.apply(this,arguments),this.sourceId=c};return c.prototype.getId=function(){return this.arg.getProperty("NAME")},c.prototype.getSourceId=function(){return this.sourceId},c.prototype.getUid=function(){return this.getSourceId()+"-"+this.getId()},c.prototype.$filter=function(a){return b(new google.maps.LatLng(parseFloat(a.latitude),parseFloat(a.longitude)),this.arg.getGeometry())},c.prototype.toString=function(){return this.sourceId+":"+this.arg.getProperty("NAME")},c}]).factory("BoundsFilterArg",["$rootScope","FilterArg",function(a,b){var c=function(c){b.apply(this,arguments);var d=this;a.$broadcast("bounds-filter-ready",{filter:d})};return c.RECTANGLE_OPTIONS={strokeColor:"#fff",strokeWeight:1,fillColor:"#000080",fillOpacity:.25,visible:!0,zIndex:1},c.prototype.getId=function(){return this.arg.getBounds().getCenter().toString()},c.prototype.getUid=function(){return this.getId()},c.prototype.$filter=function(a){return this.arg.getBounds().contains(new google.maps.LatLng(parseFloat(a.latitude),parseFloat(a.longitude)))},c.prototype.$removed=function(){
this.arg.setMap(null)},c.prototype.toString=function(){var a=this.arg.getBounds(),b=a.getSouthWest(),c=a.getNorthEast(),d=4;return b.lat().toFixed(d)+","+b.lng().toFixed(d)+":"+c.lat().toFixed(d)+","+c.lng().toFixed(d)},c.fromString=function(a,b){var d=a.split(":"),e=d[0].split(","),f=new google.maps.LatLng(parseFloat(e[0]),parseFloat(e[1])),g=d[1].split(","),h=new google.maps.LatLng(parseFloat(g[0]),parseFloat(g[1])),i=new google.maps.LatLngBounds(f,h),j=new google.maps.Rectangle(c.RECTANGLE_OPTIONS);return j.setBounds(i),j.setMap(b),new c(j)},c}]).factory("NpnFilter",["$q","$log","$http","$url","$filter","DateFilterArg","SpeciesFilterArg","NetworkFilterArg","GeoFilterArg","BoundsFilterArg","CacheService","Analytics",function(a,b,c,d,e,f,g,h,i,j,k,l){function m(a){var b,c=[];for(b in a)c.push(a[b]);return c}function n(a){return a&&Object.keys(a).forEach(function(b){a[b].$removed&&a[b].$removed()}),{}}function o(a){var b=[];return a.filter(function(a){return b[a.phenophase_id]?!1:(b[a.phenophase_id]=a,!0)})}function p(a){return o(a.reduce(function(a,b){return a.concat(b)},[]))}function q(b,e){var f=a.defer(),g={date:e,species_id:b},h=k.keyFromObject(g),i=k.get(h);return i?f.resolve(i):c.get(d("/npn_portal/phenophases/getPhenophasesForSpecies.json"),{params:g}).success(function(a){var b=a[0].phenophases;b=o(b),k.put(h,b),f.resolve(b)},f.reject),f.promise}function r(c,d){var e=a.defer();return a.all([q(c,d+"-12-31"),q(c,d+"-01-01")]).then(function(a){b.debug("getPhenophasesForYear.results",a),e.resolve(p(a))}),e.promise}function s(c,d){var e=a.defer(),f=d.map(function(a){return r(c,a)});return a.all(f).then(function(a){b.debug("getPhenophasesForYears.results",a),e.resolve(p(a))}),e.promise}var t=function(){this.reset()};return t.prototype.hasDate=function(){return!!this.date},t.prototype.hasCriteria=function(){return this.date?!0:Object.keys(this.species).length>0||Object.keys(this.networks).length>0},t.prototype.hasSufficientCriteria=function(){return this.date&&(Object.keys(this.species).length>0||Object.keys(this.networks).length>0)},t.prototype.getUpdateCount=function(){return this.updateCount},t.prototype.getDateArg=function(){return this.date},t.prototype.getSpeciesArg=function(a){return this.species[a]},t.prototype.getSpeciesArgs=function(){return m(this.species)},t.prototype.getNetworkArg=function(a){return this.networks[a]},t.prototype.getNetworkArgs=function(){return m(this.networks)},t.prototype.getCriteria=function(){var a=m(this.species);return this.date&&a.append(this.date),a},t.prototype.getGeoArgs=function(){return m(this.geo)},t.prototype.getBoundsArgs=function(){return m(this.bounds)},t.prototype.getGeographicArgs=function(){return this.getBoundsArgs().concat(this.getGeoArgs())},t.prototype.ga=function(a){a=a||"execute";var b=this.getDateArg(),c=e("speciesTitle"),d=this.getBoundsArgs().length;b&&l.trackEvent("filter",a+" date",b.getStartYear()+"-"+b.getEndYear()),this.getSpeciesArgs().forEach(function(b){l.trackEvent("filter",a+" species",c(b.arg,"common-name"))}),this.getNetworkArgs().forEach(function(b){l.trackEvent("filter",a+" network",b.getName())}),this.getGeoArgs().forEach(function(b){l.trackEvent("filter",a+" geo",b.getUid())}),d&&l.trackEvent("filter",a+" bounds",d)},t.prototype.add=function(a){return this.updateCount++,a instanceof f?this.date=a:a instanceof g?this.species[a.getId()]=a:a instanceof h?this.networks[a.getId()]=a:a instanceof i?this.geo[a.getId()]=a:a instanceof j&&(this.bounds[a.getId()]=a),!(a instanceof i)},t.prototype.remove=function(a){return this.updateCount++,a instanceof f?(this.date=void 0,this.species={},this.networks={},this.bounds={}):a instanceof g?delete this.species[a.getId()]:a instanceof h?delete this.networks[a.getId()]:a instanceof i?delete this.geo[a.getId()]:a instanceof j&&delete this.bounds[a.getId()],a.$removed&&a.$removed(),!(a instanceof i||a instanceof j)},t.prototype.reset=function(){this.updateCount=0,this.date=void 0,this.species=n(this.species),this.geo=n(this.geo),this.networks=n(this.networks),this.bounds=n(this.bounds)},t.prototype.getSpeciesList=function(){var b=[],e=this.getSpeciesArgs(),f=this.getNetworkArgs(),g=a.defer();if(e.length)e.forEach(function(a){b.push(a.arg)}),g.resolve(b);else if(f.length){var h={},i=0;f.forEach(function(a){h["network_id["+i++ +"]"]=a.getId()});var j=k.keyFromObject(h);b=k.get(j),b&&b.length?g.resolve(b):c.get(d("/npn_portal/species/getSpeciesFilter.json"),{params:h}).success(function(a){k.put(j,a),g.resolve(a)})}else g.resolve(b);return g.promise},t.prototype.getPhenophasesForSpecies=function(b,c,d){var e,f=this.getSpeciesArgs(),g=this.getDateArg(),h=a.defer();if("string"==typeof b&&(b=parseInt(b)),!c&&f.length){var i=!1;for(e=0;e<f.length;e++)if(f[e].getId()===b){h.resolve(f[e].getPhenophaseList()),i=!0;break}i||h.resolve([])}else d=d||d3.range(g.getStartYear(),g.getEndYear()+1),s(b,d).then(function(a){h.resolve(a)});return h.promise},t}]).factory("FilterService",["$q","$http","$rootScope","$timeout","$log","$filter","$url","uiGmapGoogleMapApi","md5","NpnFilter","SpeciesFilterArg","SettingsService","Analytics",function(a,b,c,d,e,f,g,h,i,j,k,l,m){function n(){if(A.hasCriteria()){var a={},b=A.getDateArg();return b&&(a.start_date=b.getStartDate(),a.end_date=b.getEndDate()),A.getSpeciesArgs().forEach(function(b,c){a["species_id["+c+"]"]=b.getId()}),A.getNetworkArgs().forEach(function(b,c){a["network_id["+c+"]"]=b.getId()}),a}}function o(a,b){function c(a,b){var c,d=Object.keys(a),f=Object.keys(b);if(d.length!==f.length+1&&e.warn("Issue with usage of _mapdiff, unexpected key lengths",a,b),1===d.length)return a[d[0]];for(c=0;c<d.length;c++)if(!b[d[c]])return a[d[c]];e.warn("Issue with usage of _mapdiff, unfound diff",a,b)}function d(){var a={};return angular.forEach(A.getGeographicArgs(),function(b){a[b.getUid()]=b}),a}function f(a,b){var c={hits:[],misses:[]};return angular.forEach(a,function(a){b(a)?c.hits.push(a):c.misses.push(a)}),c}var g,h=Date.now(),i=A.getGeographicArgs(),j=i.length,k=j>E.previousFilterCount,l=d();if(j>0&&E.previousFilterCount===j){if(angular.equals(Object.keys(l),Object.keys(E.previousFilterMap)))return e.debug("refilter but no change in geographic filters"),E.hits;e.warn("refilter but no change in geo filter count")}if(E.previousFilterCount=j,0===j)E.misses=[],E.hits=[].concat(a);else if(b&&1!==Object.keys(l).length)if(k){var m=c(l,E.previousFilterMap);g=f(E.misses,function(a){return m.$filter(a)}),E.hits=E.hits.concat(g.hits),E.misses=g.misses}else{var n=c(E.previousFilterMap,l);g=f(E.hits,function(a){return n.$filter(a)}),E.hits=g.misses,E.misses=E.misses.concat(g.hits)}else g=f(a,function(a){var b,c=!1;for(b=0;b<i.length&&!(c=i[b].$filter(a));b++);return c}),E.hits=g.hits,E.misses=g.misses;return E.previousFilterMap=l,e.debug("geo time:"+(Date.now()-h)),E.hits}function p(a,b){var d=Date.now();c.$broadcast("filter-phase2-start",{count:a.length});var g=0,h=A.getSpeciesArgs().length>0,j=A.getNetworkArgs(),k=f("speciesTitle"),m=l.getSettingValue("tagSpeciesTitle"),n=function(a,b,c){var d;j.length&&angular.forEach(j,function(e){d=e.updateCounts(a,b,c),c&&(g+=d)})},p=o(a,b).filter(function(a){a.markerOpts.icon.fillColor=C.fillColor;var b,c,d,f=0,i={};a.observationCount=0,a.speciesInfo=void 0;for(b in a.species)c=A.getSpeciesArg(b),i[b]=0,c||!h?c&&(d=c.$filter(a.species[b]))?(g+=d,a.observationCount+=d,i[b]++,f++,n(a,a.species[b]),a.speciesInfo||(a.speciesInfo={titles:{},counts:{}}),a.speciesInfo.titles[b]=k(c.arg,m),a.speciesInfo.counts[b]=d):c||(f++,n(a,a.species[b],!0)):e.warn("species found in results but not in filter",a.species[b]);i.n=0;for(b in i)"n"!=b&&i[b]>0&&i.n++;return a.markerOpts.title=a.station_name+" ("+a.observationCount+")",a.speciesInfo&&(a.markerOpts.title+=" ["+Object.keys(a.speciesInfo.titles).map(function(b){return a.speciesInfo.titles[b]}).join(",")+"]"),a.markerOpts.icon.strokeColor=i.n>1?"#00ff00":C.strokeColor,a.markerOpts.zIndex=a.observationCount+2,f>0}).map(function(a){return{latitude:a.latitude,longitude:a.longitude,markerOpts:a.markerOpts,station_id:a.station_id,station_name:a.station_name,observationCount:a.observationCount,speciesInfo:a.speciesInfo}});if(h){var q={};p.forEach(function(a){var b=Object.keys(a.speciesInfo.counts),c=b.reduce(function(b,c){return q[c]?(a.speciesInfo.counts[c]<q[c].min&&(q[c].min=a.speciesInfo.counts[c]),a.speciesInfo.counts[c]>q[c].max&&(q[c].max=a.speciesInfo.counts[c])):q[c]={min:a.speciesInfo.counts[c],max:a.speciesInfo.counts[c]},a.speciesInfo.counts[c]>a.speciesInfo.counts[b]?c:b},b[0]),d=A.getSpeciesArg(c);a.markerOpts.icon.fillColorIdx=d.colorIdx}),A.getSpeciesArgs().forEach(function(a){if(q[a.arg.species_id]){var b=p.filter(function(b){return a.colorIdx===b.markerOpts.icon.fillColorIdx}),c=a.arg.species_id,d=q[c].min,f=q[c].max;e.debug("observationCount variability for "+a.toString()+" ("+a.arg.common_name+") ["+d+"-"+f+"]");var g=z[a.colorIdx];g.domain([d,f]),b.forEach(function(a){a.markerOpts.icon.fillColor=g(a.speciesInfo.counts[c])})}})}else{var r=d3.min(p,function(a){return a.observationCount}),s=d3.max(p,function(a){return a.observationCount});e.debug("observationCount variability for network only results ["+r+"-"+s+"]"),z[0].domain([r,s]),p.forEach(function(a){a.markerOpts.icon.fillColorIdx=0,a.markerOpts.icon.fillColor=z[0](a.observationCount)})}return p.forEach(function(a){a.$markerKey=i.createHash(JSON.stringify(a))}),c.$broadcast("filter-phase2-end",{station:p.length,observation:g}),e.debug("phase2 time:",Date.now()-d),D=p}function q(){var d=a.defer(),f=n();if(!B&&f&&u!=A.getUpdateCount()){u=A.getUpdateCount();var h=Date.now();e.debug("execute",u,f),c.$broadcast("filter-phase1-start",{}),b.get(g("/npn_portal/observations/getAllObservationsForSpecies.json"),{params:f}).success(function(a){angular.forEach(a.station_list,function(a){a.markerOpts={title:a.station_name,icon:angular.extend({},C)}}),c.$broadcast("filter-phase1-end",{count:a.station_list.length}),e.debug("phase1 time:",Date.now()-h),d.resolve(p(v=a.station_list))})}else d.resolve(D);return d.promise}function r(){B||c.$broadcast("filter-update",{})}function s(){D=[],c.$broadcast("filter-reset",{})}function t(){A.getSpeciesArgs().forEach(function(a,b){a.colorIdx=b,a.color=y(b)})}var u,v,w=["#1f77b4","#ff7f0e","#2ca02c","#d62728","#222299","#c51b8a","#8c564b","#637939","#843c39","#5254a3","#636363","#bcbd22","#7b4173","#e7ba52","#222299","#f03b20","#1b9e77","#e377c2","#ef8a62","#91cf60","#9467bd"],x=d3.range(0,w.length),y=d3.scale.ordinal().domain(x).range(x.map(function(a){return d3.rgb(w[a]).darker(1).toString()})),z=x.map(function(a){var b=y(a),c=d3.rgb(b).brighter(4).toString();return d3.scale.linear().range([c,b])}),A=new j,B=!1,C={fillColor:"#00ff00",fillOpacity:1,scale:8,strokeColor:"#204d74",strokeWeight:1},D=[];h.then(function(a){C.path=a.SymbolPath.CIRCLE}),c.$on("filter-rerun-phase2",function(a,b){B||d(function(){if(v){F.getFilter().ga("re-execute");var a=p(v,!0);c.$broadcast("filter-marker-updates",{markers:a})}},500)});var E={previousFilterCount:0,previousFilterMap:{},hits:[],misses:[]},F={execute:q,getFilteredMarkers:function(){return D},pause:function(){e.debug("PAUSE"),B=!0},resume:function(){e.debug("RESUME"),B=!1,r()},getFilter:function(){return A},hasFilterChanged:function(){return u!==A.getUpdateCount()},isFilterEmpty:function(){return!A.hasCriteria()},hasDate:function(){return A.hasDate()},hasSufficientCriteria:function(){return A.hasSufficientCriteria()},addToFilter:function(a){A.add(a)&&(t(),r())},removeFromFilter:function(a){A.remove(a)&&(A.hasCriteria()?r():s())},resetFilter:function(){A.reset(),u=A.getUpdateCount(),s()},getColorScale:function(){return y},getChoroplethScale:function(a){var b=A.getSpeciesArg(a);return b?z[b.colorIdx]:void 0},getChoroplethScales:function(){return z}};return F}]).directive("npnFilterResults",["$rootScope","$http","$timeout","$filter","$log","FilterService","SettingsService","StationService","ClusterService","Analytics",function(a,b,c,d,e,f,g,h,i,j){return{restrict:"E",template:'<ui-gmap-markers models="results.markers" idKey="\'$markerKey\'" coords="\'self\'" icon="\'icon\'" options="\'markerOpts\'" doCluster="doCluster" clusterOptions="clusterOptions" control="mapControl" events="markerEvents"></ui-gmap-markers>',scope:{},controller:function(b){function e(a){var c,d=a.reduce(function(a,b){return a+b.observationCount},0),e=d>512?Math.round(d/2):512;for(c=l.styles.length-1;c>=0;c--)l.styles[c].n=e,e=Math.round(e/2);b.results.markers=a}function j(){f.hasFilterChanged()&&f.hasSufficientCriteria()&&(f.getFilter().ga("execute"),c(function(){b.results.markers=[],c(function(){f.execute().then(function(a){e(a)})},500)},500))}var k=!1;b.results={markers:[]},b.mapControl={},b.doCluster=g.getSettingValue("clusterMarkers");var l=i.getDefaultClusterOptions(),m=d("speciesBadge");b.clusterOptions=angular.extend(l,{calculator:function(a,b){var c=0,d=(g.getSettingValue("tagBadgeFormat"),{index:1});a.values().forEach(function(a){c+=a.model.observationCount}),d.text=m({station:a.length,observation:c},g.getSettingValue("tagBadgeFormat"));for(var e=0;e<l.styles.length;e++)c>=l.styles[e].n&&(d.index=e+1);return d}}),b.$on("setting-update-tagBadgeFormat",function(a,c){b.mapControl&&b.mapControl.managerDraw&&b.mapControl.managerDraw()}),b.$on("setting-update-clusterMarkers",function(a,c){b.doCluster=c.value}),b.$on("tool-open",function(a,b){k="filter"===b.tool.id}),b.$on("tool-close",function(a,b){"filter"===b.tool.id&&(k=!1,j())}),b.$on("filter-update",function(a,b){k||j()}),b.$on("filter-reset",function(a,c){b.results.markers=[]}),b.$on("filter-marker-updates",function(a,b){e(b.markers)});var n=h.getMarkerEvents();b.markerEvents={click:n.click,mouseover:function(b){a.$broadcast("marker-mouseover",{marker:b})},mouseout:function(b){a.$broadcast("marker-mouseout",{marker:b})}}}}}]).directive("choroplethInfo",["$log","$timeout","FilterService",function(a,b,c){return{restrict:"E",templateUrl:"js/filter/choroplethInfo.html",controller:function(d){function e(a){var b,c,d=Math.ceil(a.domain[1]/20),e=[];for(b=0;20>b;b++)c=d*b+1,e[b]=a.scale(c),a.count>=c&&(a.color=e[b]);return e.forEach(function(b){-1===a.colors.indexOf(b)&&a.colors.push(b)}),a}var f=!1;d.show=!1,d.$on("marker-mouseover",function(g,h){a.debug("mouseover",h),(h.marker.model.speciesInfo||h.marker.model.observationCount)&&(f=!0,b(function(){if(d.show=f){d.station_name=h.marker.model.station_name;var b=c.getChoroplethScales();if(h.marker.model.speciesInfo){var g=Object.keys(h.marker.model.speciesInfo.counts);d.data=g.map(function(a){var d=c.getFilter().getSpeciesArg(a),f={sid:a,count:h.marker.model.speciesInfo.counts[a],title:h.marker.model.speciesInfo.titles[a],arg:d,scale:b[d.colorIdx],domain:b[d.colorIdx].domain(),colors:[]};return e(f)})}else if(h.marker.model.observationCount){var i={count:h.marker.model.observationCount,title:"All Records",scale:b[0],domain:b[0].domain(),colors:[]};d.data=[e(i)]}a.debug(d.data)}},500))}),d.$on("marker-mouseout",function(c,e){a.debug("mouseout",e),f=!1,d.show&&b(function(){f||(d.show=!1,d.data=void 0)},500)})}}}]).directive("filterTags",["FilterService",function(a){return{restrict:"E",templateUrl:"js/filter/filterTags.html",scope:{},controller:function(b){b.getFilter=a.getFilter}}}]).filter("speciesBadge",function(){return function(a,b){return"observation-count"===b?a.observation:"station-count"===b?a.station:"station-observation-count"===b?a.station+"/"+a.observation:a}}).filter("speciesTitle",["SettingsService",function(a){return function(b,c){var d=c||a.getSettingValue("tagSpeciesTitle");if("common-name"===d){if(b.common_name){var e=b.common_name.toLowerCase();return e.substring(0,1).toUpperCase()+e.substring(1)}return b.common_name}return"scientific-name"===d?b.genus+" "+b.species:b}}]).directive("speciesFilterTag",["$rootScope","FilterService","SettingsService","SpeciesFilterArg",function(a,b,c,d){return{restrict:"E",require:"^filterTags",templateUrl:"js/filter/speciesFilterTag.html",scope:{arg:"="},controller:function(d){d.titleFormat=c.getSettingValue("tagSpeciesTitle"),d.$on("setting-update-tagSpeciesTitle",function(a,b){d.titleFormat=b.value}),d.badgeFormat=c.getSettingValue("tagBadgeFormat"),d.badgeTooltip=c.getSettingValueLabel("tagBadgeFormat"),d.$on("setting-update-tagBadgeFormat",function(a,b){d.badgeFormat=b.value,d.badgeTooltip=c.getSettingValueLabel("tagBadgeFormat")}),d.$on("setting-update-onlyYesData",function(b,c){c.value!==d.arg.ydo&&(d.arg.ydo=c.value,a.$broadcast("filter-rerun-phase2",{}))}),d.$on("filter-phase2-start",function(a,b){d.arg.resetCounts(0)}),d.$on("filter-phase1-start",function(a,b){d.arg.resetCounts("?")}),d.removeFromFilter=b.removeFromFilter,d.status={isopen:!1},d.hasCount=function(a,b){return a.count>0};var e,f;d.$watch("status.isopen",function(){if(d.status.isopen)e=d.arg.phenophases.map(function(a){return a.selected}),f=d.arg.ydo;else if(e){for(var b=!1,c=0;c<e.length;c++)if(e[c]!=d.arg.phenophases[c].selected){b=!0;break}b||(b=f!=d.arg.ydo),b&&a.$broadcast("filter-rerun-phase2",{})}}),d.selectAll=function(a){angular.forEach(d.arg.phenophases,function(b){b.selected=a})}}}}]).directive("dateFilterTag",["FilterService","SettingsService",function(a,b){return{restrict:"E",require:"^filterTags",templateUrl:"js/filter/dateFilterTag.html",scope:{arg:"="},controller:function(c){c.badgeFormat=b.getSettingValue("tagBadgeFormat"),c.badgeTooltip=b.getSettingValueLabel("tagBadgeFormat"),c.$on("setting-update-tagBadgeFormat",function(a,d){c.badgeFormat=d.value,c.badgeTooltip=b.getSettingValueLabel("tagBadgeFormat")}),c.removeFromFilter=a.removeFromFilter,c.counts={station:"?",observation:"?"},c.$on("filter-phase1-start",function(a,b){c.counts.station=c.counts.observation="?"}),c.$on("filter-phase2-start",function(a,b){c.counts.station=c.counts.observation=0}),c.$on("filter-phase2-end",function(a,b){c.counts=b})}}}]).directive("networkFilterTag",["$rootScope","FilterService","SettingsService",function(a,b,c){return{restrict:"E",require:"^filterTags",templateUrl:"js/filter/networkFilterTag.html",scope:{arg:"="},controller:function(d){d.status={isopen:!1},d.badgeFormat=c.getSettingValue("tagBadgeFormat"),d.badgeTooltip=c.getSettingValueLabel("tagBadgeFormat"),d.$on("setting-update-tagBadgeFormat",function(a,b){d.badgeFormat=b.value,d.badgeTooltip=c.getSettingValueLabel("tagBadgeFormat")}),d.$on("setting-update-onlyYesData",function(b,c){c.value!==d.arg.ydo&&(d.arg.ydo=c.value,a.$broadcast("filter-rerun-phase2",{}))}),d.removeFromFilter=b.removeFromFilter,d.$on("filter-phase1-start",function(a,b){d.arg.resetCounts("?")}),d.$on("filter-phase2-start",function(a,b){d.arg.resetCounts(0)});var e;d.$watch("status.isopen",function(b){b?e=d.arg.ydo:"undefined"!=typeof e&&e!==d.arg.ydo&&a.$broadcast("filter-rerun-phase2",{})})}}}]).directive("filterControl",["$http","$filter","$timeout","$url","FilterService","DateFilterArg","SpeciesFilterArg","NetworkFilterArg","HelpService","SpeciesService",function(a,b,c,d,e,f,g,h,i,j){return{restrict:"E",templateUrl:"js/filter/filterControl.html",controller:["$scope",function(k){function l(){var a={},b=0;angular.forEach([].concat(k.speciesInput.animals).concat(k.speciesInput.plants),function(c){a["group_ids["+b++ +"]"]=c.species_type_id}),b=0,angular.forEach(k.speciesInput.networks,function(c){a["network_id["+b++ +"]"]=c.network_id}),o=a,k.findSpeciesParamsEmpty=0===Object.keys(a).length,q=!0}k.addDateRangeToFilter=function(){e.addToFilter(new f(k.selected.date))},k.filterHasDate=e.hasDate,k.filterHasSufficientCriteria=e.hasSufficientCriteria;var m=(new Date).getYear()+1900,n=d3.range(1900,m+1);k.thisYear=m,k.validYears=n,k.selected={date:{start_date:m-1,end_date:m},species:[]},k.speciesInput={animals:[],plants:[],networks:[]},k.findSpeciesParamsEmpty=!0,k.$watch("selected.species.length",function(a){a&&i.lookAtMe("#add-species-button")}),k.$watch("speciesInput.networks.length",function(a){a&&i.lookAtMe("#add-networks-button")}),k.networksMaxedOut=function(){return e.getFilter().getNetworkArgs().length>=10},k.speciesMaxedOut=function(){return e.getFilter().getSpeciesArgs().length>=20},k.addNetworksToFilter=function(){i.stopLookingAtMe("#add-networks-button"),angular.forEach(k.speciesInput.networks,function(a){k.networksMaxedOut()||e.addToFilter(new h(a))})},k.addSpeciesToFilter=function(){i.stopLookingAtMe("#add-species-button"),angular.forEach(k.selected.species,function(a){k.speciesMaxedOut()||e.addToFilter(new g(a))})};var o,p,q=!0;k.$watch("speciesInput.animals",l),k.$watch("speciesInput.plants",l),k.$watch("speciesInput.networks",l),k.findSpecies=function(){q&&(q=!1,angular.forEach(k.selected.species,function(a){a.selected=!1}),k.selected.species=[],k.findSpeciesParamsEmpty&&p&&p.length?k.speciesList=p:(k.findingSpecies=!0,k.serverResults=a.get(d("/npn_portal/species/getSpeciesFilter.json"),{params:o}).then(function(a){var d=[];angular.forEach(a.data,function(a){a.number_observations=parseInt(a.number_observations),a.display=b("speciesTitle")(a)+" ("+a.number_observations+")",d.push(a)});var e=k.speciesList=d.sort(function(a,b){return a.number_observations<b.number_observations?1:a.number_observations>b.number_observations?-1:0});return k.findSpeciesParamsEmpty&&(p=e),c(function(){k.findingSpecies=!1},250),e})))},k.$on("setting-update-tagSpeciesTitle",function(a,d){c(function(){angular.forEach(k.speciesList,function(a){a.display=b("speciesTitle")(a)+" ("+a.number_observations+")"})},250)}),a.get(d("/npn_portal/networks/getPartnerNetworks.json?active_only=true")).success(function(a){angular.forEach(a,function(a){a.network_name=a.network_name.trim()}),k.partners=a}),j.getPlantTypes().then(function(a){k.plantTypes=a}),j.getAnimalTypes().then(function(a){k.animalTypes=a}),k.findSpecies()}]}}]).factory("SpeciesService",["$q","$http","$url",function(a,b,c){function d(b){return function(){var c=a.defer();return b.then(function(a){c.resolve(a.data)}),c.promise}}var e=b.get(c("/npn_portal/species/getPlantTypes.json")),f=b.get(c("/npn_portal/species/getAnimalTypes.json"));return{getPlantTypes:d(e),getAnimalTypes:d(f)}}]),angular.module("npn-viz-tool.filters",[]).filter("cssClassify",function(){return function(a){return"string"==typeof a?a.trim().toLowerCase().replace(/\s+/g,"-"):a}}).filter("yesNo",function(){return function(a){return a?"Yes":"No"}}).filter("gte",function(){return function(a,b){return b&&angular.isArray(a)?a.filter(function(a){return a>=b}):a}}).filter("lte",function(){return function(a,b){return b&&angular.isArray(a)?a.filter(function(a){return b>=a}):a}}).filter("trim",function(){return function(a){return angular.isString(a)?a.trim():a}}).filter("ellipses",function(){return function(a){var b=2==arguments.length?arguments[1]:55;return"string"==typeof a&&a.length>b?a.substring(0,b)+" ...":a}}).filter("doy",function(){var a=864e5;return function(b,c){if("string"==typeof b){var d=b.split("-");if(3===d.length){var e=parseInt(d[0]),f=parseInt(d[1]),g=parseInt(d[2]);!isNaN(e)&&!isNaN(f)&&!isNaN(g)&&13>f&&32>g&&(b=new Date(e,f-1,g))}}if(b instanceof Date){b=new Date(b.getTime()),c&&b.setFullYear(2010);for(var h=b.getDate();b.getMonth()>0;)b.setDate(1),b.setTime(b.getTime()-a),h+=b.getDate();return h}return b}}),angular.module("npn-viz-tool.gridded",["npn-viz-tool.gridded-services"]).service("GriddedControlService",["$location",function(a){var b={getLegend:function(){return b.legend},getLayer:function(){return b.layer},addSharingUrlArgs:function(a){if(b.layer){var c=b.layer.name+"/"+b.layer.extent.current.value,d=b.layer.getStyleRange();d&&(c+="/"+d[0]+"/"+d[1]),a.gl=c}},getSharingUrlArgs:function(){var b=a.search().gl;return b?b.split(/\//):void 0}};return b}]).directive("griddedLegendMain",["GriddedControlService",function(a){return{restrict:"E",template:'<div id="griddedLegendMain" ng-style="{display: shared.legend ? \'inherit\' : \'none\'}"><gridded-legend legend="shared.legend"></gridded-legend></div>',scope:{},link:function(b){b.shared=a}}}]).directive("griddedControl",["$log","$rootScope","uiGmapGoogleMapApi","uiGmapIsReady","WmsService","GriddedControlService","GriddedInfoWindowHandler",function(a,b,c,d,e,f,g){return{restrict:"E",templateUrl:"js/gridded/gridded-control.html",link:function(h){function i(){n||(n=!0,c.then(function(b){l=b,d.promise(1).then(function(b){m=b[0].map,k=new g(m),m.addListener("click",function(a){k.open(a.latLng,h.selection.activeLayer,h.legend)}),e.getLayers(m).then(function(b){a.debug("layers",b),h.layers=b;var c,d,e,g,i=f.getSharingUrlArgs();i&&(a.debug("arguments from shared url",i),c=i[0],d=i[1],g=b.categories.reduce(function(a,b){return a||(a=b.layers.reduce(function(a,b){return a||(b.name===c?b:void 0)},void 0),a&&(e=b)),a},void 0),g?(g.extent.current=g.extent.values.reduce(function(a,b){return a||(b.value===d?b:void 0)},void 0)||g.extent.current,h.selection.layerCategory=e,h.selection.layer=g,4===i.length&&g.setStyleRange([parseInt(i[2]),parseInt(i[3])])):a.warn("unable to find gridded layer named "+c))},function(){a.error("unable to get map layers?")})})}))}function j(){k&&k.close()}var k;h.selection={},h.actions={reset:function(){delete h.selection.layerCategory,delete h.selection.layer}},h.$on("filter-reset",h.actions.reset);var l,m,n;f.getSharingUrlArgs()?i():h.$on("tool-open",function(a,b){"gridded"===b.tool.id&&i()}),h.$watch("selection.layerCategory",function(c){if(a.debug("layer category change ",c),h.selection.activeLayer){a.debug("turning off layer ",h.selection.activeLayer.name);var d=h.selection.activeLayer;h.selection.activeLayer.off(),delete h.selection.activeLayer,delete h.legend,delete f.legend,delete f.layer,j(),b.$broadcast("gridded-layer-off",{layer:d})}}),h.$watch("selection.layer",function(c){c&&(j(),a.debug("selection.layer",c),h.selection.activeLayer&&(a.debug("turning off layer ",h.selection.activeLayer.name),h.selection.activeLayer.off()),a.debug("fitting new layer ",c.name),f.layer=h.selection.activeLayer=c.fit().on(),delete h.legend,h.selection.activeLayer.getLegend(c).then(function(a){f.legend=h.legend=a}),b.$broadcast("gridded-layer-on",{layer:h.selection.activeLayer}))}),h.$watch("selection.activeLayer.extent.current",function(b){var c;(c=h.selection.activeLayer)&&(a.debug("layer extent change ",c.name,b),j(),c.bounce())})}}}]),angular.module("npn-viz-tool.gridded-services",[]).provider("$url",[function(){this.$get=["$log",function(a){var b=window.location.origin.replace("data","www");return a.debug("BASE_URL",b),function(a){return b+a}}]}]).service("DateExtentUtil",[function(){var a=/^(\d\d\d\d)-0?(\d+)-0?(\d+)/;return{parse:function(b){var c=a.exec(b.replace(/T.*$/,"")),d=parseInt(c[1]),e=parseInt(c[2])-1,f=parseInt(c[3]);return new Date(d,e,f)}}}]).directive("griddedPointInfoWindow",["$log","$timeSeriesVis",function(a,b){return{restrict:"E",template:'<div id="griddedPointInfoWindow" class="ng-cloak"><div ng-if="gridded_point_legend" class="gridded-legend-color" style="background-color: {{gridded_point_legend.color}};">&nbsp;</div><div class="gridded-point-data">{{legend.formatPointData(point)}}</div><ul class="list-unstyled" ng-if="timeSeries"><li><a href ng-click="timeSeries()">Show Time Series</a></li></ul></div>',scope:{point:"=",layer:"=",legend:"=",latLng:"="},link:function(c){var d=c.latLng,e=c.point,f=c.layer,g=c.legend;a.debug("griddedPointInfoWindow:latLng",d),a.debug("griddedPointInfoWindow:point",e),a.debug("griddedPointInfoWindow:layer",f),a.debug("griddedPointInfoWindow:legend",g),c.gridded_point_legend=c.legend.getPointData(e),f.supports_time_series&&(c.timeSeries=function(){b(f,g,d)})}}}]).factory("GriddedInfoWindowHandler",["$log","$timeout","$compile","$rootScope",function(a,b,c,d){function e(a){this.map=a}return e.prototype.open=function(e,f,g){var h,i=this.map;e&&f&&g&&(this.infoWindow||(this.infoWindow=new google.maps.InfoWindow({maxWidth:200,content:"contents"})),h=this.infoWindow,f.getGriddedData(e).then(function(j){a.debug("tuples",j);var k,l=j&&j.length?j[0]:void 0,m=d.$new();return-9999===l||isNaN(l)?void a.debug("received -9999 or Nan ignoring"):"undefined"==typeof(m.point=l)?void a.debug("undefined point?"):(m.layer=f,m.legend=g,m.latLng=e,k=c('<div><gridded-point-info-window point="point" layer="layer" legend="legend" lat-lng="latLng"></gridded-point-info-window></div>')(m),void b(function(){h.setContent(k[0]),h.setPosition(e),h.open(i)}))},function(){a.error("unable to get gridded data.")}))},e.prototype.close=function(){this.infoWindow&&this.infoWindow.close()},e}]).directive("griddedOpacitySlider",["$log","$timeout","WmsService",function(a,b,c){return{restrict:"E",template:'<div ng-if="layer" class="form-group"><label for="griddedOpacitySlider" style="margin-bottom: 15px;">Opacity</label><rzslider rz-slider-model="selection.opacity" rz-slider-options="options"></rzslider></div>',scope:{layer:"="},link:function(a){function b(){a.layer&&a.layer.googleLayer.setOpacity(a.selection.opacity/100)}a.selection={opacity:75},a.options={floor:0,ceil:100,step:1},a.$watch("layer.extent.current",b),a.$watch("selection.opacity",b),a.$watch("layer",b)}}}]).directive("griddedRangeSlider",["$log","$timeout","WmsService",function(a,b,c){return{restrict:"E",template:'<div ng-if="legend" class="form-group"><label for="griddedRangeSlider" style="margin-bottom: 15px;">Range</label><rzslider rz-slider-model="selection.min" rz-slider-high="selection.max" rz-slider-options="options"></rzslider></div>',scope:{layer:"="},link:function(c){function d(){e&&b.cancel(e),e=b(function(){var a=c.layer,b=c.legend,d=c.data;if(b&&d){if(c.selection.min===c.options.floor&&c.selection.max===c.options.ceil)return a.setStyleRange(void 0);a.setStyleRange([c.selection.min,c.selection.max])}},500)}c.$watch("layer",function(b){delete c.legend,b&&b.getLegend().then(function(d){c.legend=d,a.debug("legend",d);var e=c.data=d.getData(),f=b.getStyleRange();c.selection={min:f?f[0]:0,max:f?f[1]:e.length-1},c.options={floor:0,ceil:e.length-1,step:1,showTicks:!0,showSelectionBar:!0,translate:function(a){return e[a].label},getTickColor:function(a){return e[a].color},getPointerColor:function(a){return e[a].color}}})});var e;c.$watch("selection.min",d),c.$watch("selection.max",d)}}}]).directive("griddedDoyControl",["$log","thirtyYearAvgDayOfYearFilter",function(a,b){function c(b){var c,d=b.getMonth();return 11===d?31:(c=new Date(b.getTime()),c.setDate(1),c.setMonth(c.getMonth()+1),c.setTime(c.getTime()-e),a.debug("last day of month "+(d+1)+" is "+c),c.getDate())}var d=b(1,!0).getFullYear(),e=864e5,f=d3.range(0,12).map(function(a){return new Date(d,a)});return{restrict:"E",templateUrl:"js/gridded/doy-control.html",scope:{layer:"="},link:function(d){function e(c){d.selection.month.setDate(c);var e=b(d.selection.month);a.debug("doy-control:date "+e),d.layer.extent.current=d.layer.extent.values.reduce(function(a,b){return a||(b.label===e?b:void 0)},void 0)}d.months=f;var g;d.$watch("layer",function(a){g=b(d.layer.extent.current.value,!0),d.selection={month:f[g.getMonth()],date:g.getDate()}}),d.$watch("selection.month",function(b){a.debug("doy-control:month "+(b.getMonth()+1),b),d.dates=d3.range(1,c(b)+1),g?g=void 0:1===d.selection.date?e(1):d.selection.date=1}),d.$watch("selection.date",e)}}}]).directive("griddedYearControl",["$log",function(a){return{restrict:"E",templateUrl:"js/gridded/year-control.html",scope:{layer:"="},link:function(a){}}}]).directive("griddedDateControl",["$log","dateFilter",function(a,b){return{restrict:"E",templateUrl:"js/gridded/date-control.html",scope:{layer:"="},link:function(c){c.$watch("layer",function(b){b&&(c.selection=b.extent.current.date,c.minDate=b.extent.values[0].date,c.maxDate=b.extent.values[b.extent.values.length-1].date,a.debug("minDate",c.minDate),a.debug("maxDate",c.maxDate))}),c.open=function(){c.isOpen=!0},c.$watch("selection",function(d){a.debug("selection",d);var e="longDate",f=b(d,e);c.layer.extent.current=c.layer.extent.values.reduce(function(a,c){return a||(f===b(c.date,e)?c:void 0)},void 0)})}}}]).directive("griddedLayerControl",["$log",function(a){
return{restrict:"E",templateUrl:"js/gridded/layer-control.html",link:function(a){}}}]).directive("griddedLegend",["$log","$window",function(a,b){return{restrict:"E",templateUrl:"js/gridded/legend.html",scope:{legendId:"@",legend:"="},link:function(c,d){function e(){function b(a,b,c){var d=l+k+v;a.append("line").attr("x1",j/2).attr("y1",d).attr("x2",j/2).attr("y2",d+u).attr("stroke","black").attr("stroke-width","1"),a.append("text").attr("dx",j/2).attr("dy","3.8em").style("text-anchor",c).text(b)}var d=c.legend,e=d3.select(f);if(e.selectAll("g").remove(),d){a.debug("legend.title",d.getTitle()),a.debug("legend.length",d.length),a.debug("legend.colors",d.getColors()),a.debug("legend.quantities",d.getQuantities()),a.debug("legend.labels",d.getLabels()),a.debug("legend.original_labels",d.getOriginalLabels());var g=parseFloat(e.style("width").replace("px","")),h=parseFloat(e.style("height").replace("px","")),i=d.getData(),j=g/i.length,k=30,l=2;a.debug("svg dimensions",g,h),a.debug("legend cell width",j);var m=e.append("g"),n=m.selectAll("g.cell").data(i).enter().append("g").attr("class","cell").attr("transform",function(a,b){return"translate("+b*j+","+l+")"}).append("rect").attr("height",k).attr("width",j).style("stroke","black").style("stroke-width","1px").style("fill",function(a,b){return a.color});if(d.ldef.legend_delimiter_every){var o=d.ldef.legend_delimiter_every,p=0,q=i.map(function(a,b){return b+1===i.length?!0:(p+=i[b+1].quantity-i[b].quantity,p>=o?(p=0,!0):!1)}),r=[j+1,k,j+1,k].join(","),s=[2*j+k,k].join(","),t=[j+1,k,j+k+1,0].join(",");a.debug("legend_delimiter_every",o),n.style("stroke-dasharray",function(a,b){return 0===b?q[b]?void 0:t:q[b]?s:r}).attr("width",function(a,b){var c=parseFloat(d3.select(this).attr("width"));return 0===b?q[b]?c:c+1:q[b]?c:c+1}),m.selectAll("g.cell").append("line").attr("stroke",function(a,b){return q[b]?"black":"none"}).attr("stroke-width",2).attr("x1",j-1).attr("x2",j-1).attr("y1",0).attr("y2",k)}n.append("title").text(function(a){return a.label});var u=5,v=3,w=m.selectAll("g.cell")[0],x=Math.floor(w.length/2);b(d3.select(w[0]),i[0].label,"start"),b(d3.select(w[x]),i[x].label,"middle"),b(d3.select(w[w.length-1]),i[i.length-1].label,"end"),d.ldef.legend_units&&e.append("g").append("text").attr("dx",g/2).attr("dy",75+l).attr("text-anchor","middle").text(d.ldef.legend_units),e.append("g").append("text").attr("dx",5).attr("dy",100+l).attr("font-size","18px").attr("text-anchor","right").text(d.ldef.title+", "+d.ldef.extent.current.label),e.append("g").append("text").attr("dx",5).attr("dy",118+l).attr("font-size","11px").attr("text-anchor","right").text("USA National Phenology Network, www.usanpn.org")}}var f=d.find("svg")[0];c.$watch("legend",e),$(b).bind("resize",e),c.$watch("legend.layer.extent.current",e),c.$on("$destroy",function(){a.debug("legend removing resize handler"),$(b).unbind("resize",e)})}}}]).filter("thirtyYearAvgDayOfYear",["dateFilter",function(a){var b=new Date(2010,0),c=864e5;return function(d,e){"string"==typeof d&&(d=parseFloat(d));var f=d instanceof Date?d:new Date(b.getTime()+(d-1)*c);return e?f:a(f,"MMMM d")}}]).filter("legendDoy",["dateFilter",function(a){var b=new Date(2010,0),c=new Date((new Date).getFullYear(),0),d=864e5;return function(e,f,g){return e=Math.round(e),0===e&&(e=1),f=f||"MMM d",a(new Date((g?c:b).getTime()+(e-1)*d),f)}}]).filter("legendGddUnits",["numberFilter",function(a){return function(b,c){return a(b,0)+(c?" AGDD":"")}}]).filter("legendDegrees",["numberFilter",function(a){return function(b,c){return a(b,0)+"°"+(c||"F")}}]).filter("legendAgddAnomaly",["numberFilter",function(a){return function(b,c){if(0===b)return"No Difference";var d=0>b;return a(Math.abs(b),0)+(c?" AGDD ":" ")+(d?"<":">")+" Avg"}}]).filter("agddDefaultTodayElevation",["dateFilter",function(a){var b=a(new Date,"MMMM d");return function(a){return a.reduce(function(a,c){return a||(c.label==b?c:void 0)},void 0)}}]).filter("agddDefaultTodayTime",["dateFilter",function(a){var b=a(new Date,"longDate");return function(a){return a.reduce(function(a,c){return a||(c.label==b?c:void 0)},void 0)}}]).filter("legendSixAnomaly",[function(){return function(a){if(0===a)return"No Difference";var b=0>a,c=Math.abs(a);return c+" Days "+(b?"Early":"Late")}}]).filter("extentDates",["$log","dateFilter","DateExtentUtil",function(a,b,c){function d(a){var d=new Date;return"yesterday"===a||"today"===a||"tomorrow"===a?("yesterday"===a?d.setTime(d.getTime()-e):"tomorrow"===a&&d.setTime(d.getTime()+e),a=b(d,"yyyy-MM-dd 00:00:00")):-1===a.indexOf("T")&&(a=d.getFullYear()+"-"+a+" 00:00:00"),c.parse(a).getTime()}var e=864e5;return function(a,b,e){var f=b?d(b):void 0,g=e?d(e):void 0;return(f||g)&&(a=a.filter(function(a){var b=c.parse(a).getTime();return(!f||f&&b>f)&&(!g||g&&g>b)})),a}}]).service("WmsService",["$log","$q","$http","$sce","$httpParamSerializer","$filter","DateExtentUtil","WcsService","Analytics",function(a,b,c,d,e,f,g,h,i){function j(a){u=a,v=u+"/wms",w=v+"?service=wms&version="+A+"&request=GetCapabilities"}function k(a,b,c){function d(a){var b=f(a.name);return function(c,d){var e=[d];return a.args&&(e=e.concat(a.args)),b.apply(void 0,e)}}var e,g,h=b.legend_label_filter?d(b.legend_label_filter):angular.identity,i=b.gridded_label_filter?d(b.gridded_label_filter):void 0;e=a.find("ColorMapEntry"),0===e.length&&(e=a.find("sld\\:ColorMapEntry")),g=e.toArray().reduce(function(a,b,c){var d=$(b),e=parseFloat(d.attr("quantity")),f=d.attr("label");return a.push({color:d.attr("color"),quantity:e,original_label:f,label:0===c?f:h(f,e)}),a},[]),this.styleDefinition=c,this.ldef=b,this.lformat=h,this.gformat=i,this.title_data=g[0],this.data=g.slice(1),this.length=this.data.length}function l(g,j){function l(a){if(!(Math.abs(a.lng())>180||Math.abs(a.lat())>90)){var b=.017453292519943295*a.lng(),c=6378137*b,d=.017453292519943295*a.lat();return{lng:c,lat:3189068.5*Math.log((1+Math.sin(d))/(1-Math.sin(d)))}}}if(j.extent_values_filter){a.debug("layer "+j.name+" has an extent_values_filter, processing",j.extent_values_filter);var m,n=f(j.extent_values_filter.name),o=j.extent.values.map(function(a){return a.value}),p=[o].concat(j.extent_values_filter.args||[]);m=n.apply(void 0,p),a.debug("filteredValues",m.length>1?m[0]+"..."+m[m.length-1]:m),j.extent.values=j.extent.values.filter(function(a){return-1!==m.indexOf(a.value)}),j.extent.current&&-1===m.indexOf(j.extent.current.value)&&(a.debug("current extent value has become invalid, replacing with last option"),j.extent.current=j.extent.values.length?j.extent.values[j.extent.values.length-1]:void 0)}if(j.extent_default_filter){a.debug("layer "+j.name+" has an extent_default_filter, processing",j.extent_default_filter);var q=f(j.extent_default_filter.name),r=[j.extent.values].concat(j.extent_default_filter.values||[]);j.extent.current=q.apply(void 0,r)||j.extent.current,a.debug("resulting default value",j.extent.current)}j.description&&(j.$description=d.trustAsHtml(j.description));var s,t=256,w={service:"WMS",request:"GetMap",version:A,layers:j.name,styles:"",format:"image/png",transparent:!0,height:t,width:t,srs:"EPSG:3857"},x=new google.maps.ImageMapType({getTileUrl:function(a,b){var c=g.getProjection(),d=Math.pow(2,b),f=c.fromPointToLatLng(new google.maps.Point(a.x*t/d,a.y*t/d)),h=c.fromPointToLatLng(new google.maps.Point((a.x+1)*t/d,(a.y+1)*t/d)),i=l(f),j=l(h),k={};y.extent&&y.extent.current&&y.extent.current.addToWmsParams(k);var m={bbox:[i.lng,j.lat,j.lng,i.lat].join(",")};return s&&(m.sld_body=s),v+"?"+e(angular.extend(k,w,m))},tileSize:new google.maps.Size(t,t),isPng:!0,name:j.title||j.name}),y=angular.extend({},j,{googleLayer:x,getMap:function(){return g},getStyleRange:function(){return y.styleRange},setStyleRange:function(a){function b(a){var b;return b=window.ActiveXObject?a.xml:(new XMLSerializer).serializeToString(a)}var c=this;(c.styleRange=a)?c.getLegend().then(function(d){var e=d.getStyleDefinition(),f=d.getData(),g=f[a[0]].quantity,h=f[a[1]].quantity,i=$(e),j=i.find("ColorMapEntry"),k=i.find("ColorMap");0===j.length&&(j=i.find("sld\\:ColorMapEntry")),0===k.length&&(k=i.find("sld\\:ColorMap")),k&&k.attr("type","intervals"),j.each(function(){var a=$(this),b=parseInt(a.attr("quantity"));a.attr("opacity",b>=g&&h>=b?"1.0":"0.0")});var l=b(e[0]);c.setStyle(l)}):c.setStyle(void 0)},setStyle:function(b){b!==s&&(b&&a.debug("style:",b),s=b,this.bounce())},getBounds:function(){return j.bbox?j.bbox.getBounds():void 0},supportsData:function(){return"boolean"==typeof j.supports_data?j.supports_data:!0},currentYearOnly:function(){return"boolean"==typeof j.current_year_only?j.current_year_only:!1},getTitle:function(){return y.title?y.title.replace(/^(.*?)\s+-\s+(.*)$/,"$2"):void 0},getAbstract:function(){return y["abstract"]?y["abstract"].replace(/\s*developer notes.*$/i,""):void 0},fit:function(){var a=y.getBounds();return a&&g.fitBounds(a),y},bounce:function(){return g.overlayMapTypes.length&&g.overlayMapTypes.pop(),g.overlayMapTypes.push(x),y},on:function(){return i.trackEvent("gridded-layer","on",this.getTitle()),g.overlayMapTypes.push(x),y},off:function(){return g.overlayMapTypes.length&&(i.trackEvent("gridded-layer","off",this.getTitle()),g.overlayMapTypes.pop()),y},getLegend:function(){var d=this,e=b.defer();return B.hasOwnProperty(j.name)?(e.resolve(B[j.name]),e.resolve(B[j.name].setLayer(d))):c.get(v,{params:{service:"wms",request:"GetStyles",version:A,layers:j.name}}).then(function(b){a.debug("legend response",b);var c=$($.parseXML(b.data)),f=c.find("ColorMap");0===f.length&&(f=c.find("sld\\:ColorMap")),B[j.name]=0!==f.length?new k($(f.toArray()[0]),j,c):void 0,e.resolve(B[j.name]),e.resolve(B[j.name].setLayer(d))},e.reject),e.promise},getGriddedData:function(a){return h.getGriddedData(u,this,a,5)}});return y}function m(a){if(a&&!(a.length<2)){var b=[];return a.slice(1).each(function(a,c){b.push(c)}),b.map(n).reduce(function(a,b){return a[b.name]=b,a},{})}}function n(a){var b=$(a),c={name:b.find("Name").first().text(),title:b.find("Title").first().text().replace(/\((.+?)\)/g,""),"abstract":b.find("Abstract").first().text(),bbox:q(b.find("EX_GeographicBoundingBox").first()),style:o(b.find("Style").first()),extent:t(b.find("Extent").first())};return c.bbox||(c.bbox=p(b.find("LatLonBoundingBox").first())),c}function o(a){var b=$(a);return{name:b.find("Name").first().text(),title:b.find("Title").first().text().replace(/\((.+?)\)/g,""),legend:b.find("OnlineResource").attr("xlink:href")}}function p(a){if(a.length){var b={westBoundLongitude:parseFloat(a.attr("minx")),eastBoundLongitude:parseFloat(a.attr("maxx")),southBoundLatitude:parseFloat(a.attr("miny")),northBoundLatitude:parseFloat(a.attr("maxy")),getBounds:function(){return new google.maps.LatLngBounds(new google.maps.LatLng(b.southBoundLatitude,b.westBoundLongitude),new google.maps.LatLng(b.northBoundLatitude,b.eastBoundLongitude))}};return b}}function q(a){if(a.length){var b={westBoundLongitude:parseFloat(a.find("westBoundLongitude").text()),eastBoundLongitude:parseFloat(a.find("eastBoundLongitude").text()),southBoundLatitude:parseFloat(a.find("southBoundLatitude").text()),northBoundLatitude:parseFloat(a.find("northBoundLatitude").text()),getBounds:function(){return new google.maps.LatLngBounds(new google.maps.LatLng(b.southBoundLatitude,b.westBoundLongitude),new google.maps.LatLng(b.northBoundLatitude,b.eastBoundLongitude))}};return[b.westBoundLongitude,b.eastBoundLongitude,b.southBoundLatitude,b.northBoundLatitude].reduce(function(a,b){return a||0===b||-1===b},!1)?void 0:b}}function r(a,b){var c=g.parse(a);return{value:a,date:c,label:f("date")(c,b||"longDate"),addToWmsParams:function(b){b.time=a},addToWcsParams:function(b){b.subset||(b.subset=[]),b.subset.push('http://www.opengis.net/def/axis/OGC/0/time("'+a+'")')}}}function s(a){return{value:a,label:f("thirtyYearAvgDayOfYear")(a),addToWmsParams:function(b){b.elevation=a},addToWcsParams:function(b){b.subset||(b.subset=[]),b.subset.push("http://www.opengis.net/def/axis/OGC/0/elevation("+a+")")}}}function t(a){function b(a,b){return a||(b.value==j?b:void 0)}var c,d,e,f,g,h=$(a),i=h.text(),j=h.attr("default"),k=h.attr("name"),l="yyyy";if(!k||!i)return void 0;if("time"===k){if(-1===i.indexOf("/"))return d=i.split(",").map(function(a){return new r(a)}),j=j.replace(/0Z/,"0.000Z"),c=d.reduce(b,void 0),{label:"Date",type:"date",current:c,values:d};if(d=/^([^\/]+)\/(.*)\/P1Y$/.exec(i),d&&3===d.length&&(e=new r(d[1],l),f=new r(d[2],l),f.date.getFullYear()>e.date.getFullYear())){for(d=[e],g=e.date.getFullYear()+1;g<f.date.getFullYear();g++)d.push(new r(g+"-01-01T00:00:00.000Z",l));return d.push(f),{label:"Year",type:"year",current:f,values:d}}}else if("elevation"===k)return d=i.split(",").map(function(a){return new s(a)}),c=d.reduce(b,void 0),{label:"Day of Year",type:"doy",current:c,values:d}}var u,v,w,x,y,z=c.get("map-vis-layers.json"),A="1.1.1",B={},C={baseUrl:v,getLayers:function(d){function e(){var a=angular.copy(x),b=a.description;return a.categories.forEach(function(a){var c=angular.copy(a);delete c.name,delete c.layers,c.description=c.description||b,a.layers=a.layers.map(function(a){return new l(d,angular.extend(angular.copy(c),y[a.name],a))})}),a}var f=b.defer();return x&&y?f.resolve(e()):z.then(function(b){x=b.data,j(x.geo_server.url),a.debug("layer_config",b.data),c.get(w).then(function(b){var c=$($.parseXML(b.data));y=m(c.find("Layer")),a.debug("wms_layer_defs",y),f.resolve(e())},f.reject)},f.reject),f.promise}};return k.prototype.setLayer=function(a){return this.layer=a,this},k.prototype.getData=function(){return this.data},k.prototype.getStyleDefinition=function(){return this.styleDefinition},k.prototype.getTitle=function(){return this.title_data.label},k.prototype.getColors=function(){return this.data.map(function(a){return a.color})},k.prototype.getQuantities=function(){return this.data.map(function(a){return a.quantity})},k.prototype.getLabels=function(){return this.data.map(function(a){return a.label})},k.prototype.getOriginalLabels=function(){return this.data.map(function(a){return a.original_label})},k.prototype.formatPointData=function(a){return(this.gformat||this.lformat)(a,a)},k.prototype.getPointData=function(a){var b,c,d;for(b=0;b<this.data.length;b++){if(c=this.data[b],d=b+1<this.data.length?this.data[b+1]:void 0,a==c.quantity)return c;if(d&&a>=c.quantity&&a<d.quantity)return c}},C}]).service("WcsService",["$log","$q","$http","uiGmapGoogleMapApi",function(a,b,c,d){d.then(function(b){a.debug("WcsService: adding functionality to Number/Google Maps prototypes."),Number.prototype.toRad=function(){return this*Math.PI/180},Number.prototype.toDeg=function(){return 180*this/Math.PI},b.LatLng.prototype.destinationPoint=function(a,b){b/=6371,a=a.toRad();var c=this.lat().toRad(),d=this.lng().toRad(),e=Math.asin(Math.sin(c)*Math.cos(b)+Math.cos(c)*Math.sin(b)*Math.cos(a)),f=d+Math.atan2(Math.sin(a)*Math.sin(b)*Math.cos(c),Math.cos(b)-Math.sin(c)*Math.sin(e));return isNaN(e)||isNaN(f)?null:new google.maps.LatLng(e.toDeg(),f.toDeg())}});var e={getGriddedData:function(d,e,f,g){var h=d+"/wcs",i=b.defer(),j=[0,80,180,270].map(function(a){return f.destinationPoint(a,g/2)}),k={service:"WCS",request:"GetCoverage",version:"2.0.1",coverageId:e.name.replace(":","__"),format:"application/gml+xml",subset:[]};return k.subset.push("http://www.opengis.net/def/axis/OGC/0/Long("+[j[3].lng(),j[1].lng()].join(",")+")"),k.subset.push("http://www.opengis.net/def/axis/OGC/0/Lat("+[j[2].lat(),j[0].lat()].join(",")+")"),e.extent&&e.extent.current&&e.extent.current.addToWcsParams(k),a.debug("wcsArgs",k),c.get(h,{params:k}).then(function(b){a.debug("wcs response",b);var c=$($.parseXML(b.data)),d=c.find("tupleList").text();a.debug("wcs_data",c),a.debug("tuples",d),d?i.resolve(d.trim().split(" ").map(function(a){return parseFloat(a)})):i.reject()},i.reject),i.promise}};return e}]),angular.module("npn-viz-tool.help",[]).factory("HelpService",["$timeout",function(a){var b,c="look-at-me",d=65e3,e={lookAtMe:function(f,g){b&&e.stopLookingAtMe(b),$(f).hasClass(c)||a(function(){$(f).addClass(c),b=f,a(function(){e.stopLookingAtMe(f)},d)},g||0)},stopLookingAtMe:function(a){$(a).removeClass(c),b=null}};return e}]).directive("helpVideoControl",["$http","$sce",function(a,b){var c="Help videos";return{restrict:"E",template:'<a ng-show="videos.length" title="Help" href id="help-video-control" class="btn btn-default btn-xs" ng-click="visible = !visible;"><i class="fa fa-question"></i></a><div ng-show="visible" id="help-video-content"><a class="close" href ng-click="visible = false"><i class="fa fa-times-circle-o" aria-hidden="true"></i></a><h4>{{title}}<span ng-if="selection.video"> <a href ng-click="selection.video = null"><i class="fa fa-window-close" aria-hidden="true"></i></a></span></h4><ul class="list-unstyled" ng-show="!selection.video"><li ng-repeat="video in videos"><a href ng-click="selection.video = video;">{{video.title}}</a></li></ul><span ng-if="selection.video" ng-bind-html="selection.video.$embed"></span>',scope:{},link:function(d){d.visible=!1,d.$watch("visible",function(){d.selection={}}),d.$watch("selection.video",function(a){d.title=a?a.title:c}),a.get("help-videos.json").then(function(a){d.videos=a.data.map(function(a){return a.$embed=b.trustAsHtml(a.embed),a})})}}}]),angular.module("npn-viz-tool.layers",["npn-viz-tool.filter","ngResource"]).factory("LayerService",["$rootScope","$http","$q","$log","uiGmapIsReady","Analytics",function(a,b,c,d,e,f){function g(a){if(!a.properties.CENTER){var b,c,d,e,f,g,h=a.geometry,i="Polygon"===h.type?h.coordinates[0]:h.coordinates.reduce(function(a,b){return a.concat(b[0])},[]);for(b=0;b<i.length;b++)c=i[b],0===b?(f=g=c[0],d=e=c[1]):(f=Math.max(f,c[0]),g=Math.min(g,c[0]),d=Math.max(d,c[1]),e=Math.min(e,c[1]));a.properties.CENTER={latitude:e+(d-e)/2,longitude:g+(f-g)/2}}}function h(a,b){a.properties||(a.properties={}),a.properties.NAME||(a.properties.NAME=""+b)}function i(e){var f=c.defer();return e.data?f.resolve(e):(a.$broadcast("layer-load-start",{}),b.get("layers/"+e.file).success(function(b){"GeometryCollection"===b.type?(d.debug("Translating GeometryCollection to FeatureCollection"),b.features=[],angular.forEach(b.geometries,function(a,c){b.features.push({type:"Feature",properties:{NAME:""+c},geometry:a})}),b.type="FeatureCollection",delete b.geometries):"Topology"===b.type&&(d.debug("Translating Topojson to GeoJson"),b=topojson.feature(b,b.objects[Object.keys(b.objects)[0]])),b.features.forEach(h),b.features.forEach(g),e.data=b,f.resolve(e),a.$broadcast("layer-load-end",{})})),f.promise}function j(){m.data.setStyle(function(a){var b=a.getProperty("$style");return b&&"function"==typeof b?b(a):b?angular.extend(o,b):o})}function k(a){if(a.loaded){for(var b=[],c=0;c<a.loaded.length;c++)a.loaded[c].removeProperty("$style"),m.data.remove(a.loaded[c]),b.push(a.loaded[c]);return delete a.loaded,b}}var l=null,m=null,n=e.promise(1).then(function(a){return m=a[0].map,d.debug("LayerService - map is ready"),b.get("layers/layers.json").success(function(a){l={},a.forEach(function(a,b){a.index=b,l[a.id]=a}),d.debug("LayerService - layer list is loaded",l)})}),o={strokeColor:"#666",strokeOpacity:null,strokeWeight:1,fillColor:"#c0c5b8",fillOpacity:null,zIndex:0};return{getAvailableLayers:function(){var a=c.defer();return n.then(function(){var b,c,d=[];for(b in l)c=l[b],d.push({id:c.id,index:c.index,label:c.label,source:c.source,img:c.img,link:c.link});a.resolve(d.sort(function(a,b){return a.idx-b.idx}))}),a.promise},restyleLayers:function(){var a=c.defer();return n.then(function(){j(),a.resolve()}),a.promise},resetLayers:function(){var a=c.defer();return n.then(function(){for(var b in l)k(l[b]);a.resolve()}),a.promise},loadLayer:function(a,b){var e=c.defer();return n.then(function(){var c=l[a];return c?void i(c).then(function(a){c.style=b,c.loaded=m.data.addGeoJson(c.data),c.loaded.forEach(function(a){a.setProperty("$style",b)}),j(),f.trackEvent("filter-layer","on",c.label),e.resolve([m,c.loaded])}):(d.debug("no such layer with id",a),e.reject(a))}),e.promise},unloadLayer:function(a){var b=c.defer();return n.then(function(){var c=l[a];if(!c)return d.debug("no such layer with id",a),b.reject(a);f.trackEvent("filter-layer","off",c.label);var e=k(c);b.resolve(e)}),b.promise}}}]).directive("layerControl",["$rootScope","$q","$location","$log","LayerService","FilterService","GeoFilterArg",function(a,b,c,d,e,f,g){return{restrict:"E",templateUrl:"js/layers/layerControl.html",controller:function(h){function i(){h.layerOnMap={layer:"none"}}function j(){e.restyleLayers().then(function(){f.getFilter().hasSufficientCriteria()&&a.$broadcast("filter-rerun-phase2",{})})}function k(a,b){var c=a.getProperty("$FILTER");n=a,c||(c=new g(a,h.layerOnMap.layer.id),f.addToFilter(c),b.data.overrideStyle(a,{fillColor:"#800000"}),a.setProperty("$FILTER",c),j())}function l(a,b){var c=a.getProperty("$FILTER");n=a,c&&(f.removeFromFilter(c),a.setProperty("$FILTER",null),j())}function m(a){var c=b.defer();return"none"===a?c.resolve(null):(e.loadLayer(a.id,function(a){var b={strokeOpacity:1,strokeColor:"#666",strokeWeight:1,fillOpacity:0};return a.getProperty("$FILTER")&&(b.fillColor="#800000",b.fillOpacity=.25),b}).then(function(a){if(!o.length){var b=a[0];h.$on("filter-phase2-end",function(a,c){if(n){var d=n.getProperty("CENTER");b.panTo(new google.maps.LatLng(d.latitude,d.longitude)),n=null}}),o.push(b.data.addListener("mouseover",function(a){b.data.overrideStyle(a.feature,{strokeWeight:3})})),o.push(b.data.addListener("mouseout",function(a){b.data.revertStyle()})),o.push(b.data.addListener("click",function(a){h.$apply(function(){k(a.feature,b)})})),o.push(b.data.addListener("rightclick",function(a){h.$apply(function(){l(a.feature,b)})}))}c.resolve(a)}),c.promise)}h.hasSufficientCriteria=f.hasSufficientCriteria;var n,o=[];i(),h.$on("filter-reset",i),e.getAvailableLayers().then(function(b){function e(){a.$broadcast("layers-ready",{})}d.debug("av.layers",b),h.layers=b;var f=c.search();if(f.g){d.debug("init layers from query arg",f.g);var g,i,j=f.g.split(";"),l=j.map(function(a){return a.substring(a.indexOf(":")+1)}),n=j[0].substring(0,j[0].indexOf(":"));for(i=0;i<b.length;i++)if(b[i].id===n){g=b[i];break}g&&m(g).then(function(a){var b=a[0],c=a[1];h.layerOnMap.skipLoad=!0,h.layerOnMap.layer=g,c.forEach(function(a){-1!=l.indexOf(a.getProperty("NAME"))&&k(a,b)}),e()})}else e()}),h.$watch("layerOnMap.layer",function(b,c){return h.layerOnMap.skipLoad?void(h.layerOnMap.skipLoad=!1):void(c&&"none"!=c?e.unloadLayer(c.id).then(function(c){var d=f.getFilter().getGeoArgs(),e=d.length>0;d.forEach(function(a){f.removeFromFilter(a)}),c.forEach(function(a){a.setProperty("$FILTER",null)}),e&&!f.isFilterEmpty()&&a.$broadcast("filter-rerun-phase2",{}),m(b)}):b&&m(b))}),h.$on("$destroy",function(){e.resetLayers(),o.forEach(function(a){a.remove()})})}}}]),angular.module("npn-viz-tool",["templates-npnvis","npn-viz-tool.map","uiGmapgoogle-maps","ui.bootstrap","angular-google-analytics","ngAnimate"]).config(["uiGmapGoogleMapApiProvider","$logProvider","AnalyticsProvider",function(a,b,c){a.configure({key:"AIzaSyAsTM8XaktfkwpjEeDMXkNrojaiB2W5WyE",v:"3.27",libraries:["geometry","drawing"]});var d=window.location.hash&&window.location.hash.match(/^#.*#debug/);b.debugEnabled(d),window.onbeforeunload=function(){return"You are about to navigate away from the USA-NPN Visualization Tool.  Are you sure you want to do this?"},c.setAccount("UA-30327499-1"),d&&c.enterDebugMode(!0)}]),angular.module("npn-viz-tool.map",["npn-viz-tool.layers","npn-viz-tool.stations","npn-viz-tool.toolbar","npn-viz-tool.filter","npn-viz-tool.bounds","npn-viz-tool.settings","npn-viz-tool.vis","npn-viz-tool.share","npn-viz-tool.export","npn-viz-tool.help","npn-viz-tool.gridded","uiGmapgoogle-maps"]).directive("npnVizMap",["$location","$timeout","uiGmapGoogleMapApi","uiGmapIsReady","RestrictedBoundsService","FilterService","GriddedControlService","HelpService",function(a,b,c,d,e,f,g,h){return{restrict:"E",templateUrl:"js/map/map.html",scope:{},controller:["$scope",function(i){function j(){i.stationView=!1}function k(){m&&(m.panTo(new google.maps.LatLng(n.latitude,n.longitude)),m.setZoom(4)),b(function(){i.stationView=!0},500),h.lookAtMe("#toolbar-icon-filter",5e3)}var l,m,n={latitude:38.8402805,longitude:-97.61142369999999},o=4;i.stationView=!1,c.then(function(b){l=b;var c=e.getRestrictor("base_map",new l.LatLngBounds(new google.maps.LatLng(0,-174),new google.maps.LatLng(75,-43)));i.map={center:n,zoom:o,options:{mapTypeId:b.MapTypeId.TERRAIN,mapTypeControl:!0,mapTypeControlOptions:{position:b.ControlPosition.RIGHT_BOTTOM},streetViewControl:!1,panControl:!1,zoomControl:!0,zoomControlOptions:{style:b.ZoomControlStyle.SMALL,position:b.ControlPosition.RIGHT_TOP},styles:[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"transit.station",elementType:"labels",stylers:[{visibility:"off"}]}]},events:{center_changed:c.center_changed}},d.promise(1).then(function(b){m=b[0].map;var c=a.search(),d=c.gl||c.d&&(c.s||c.n);d||k()})}),i.$on("gridded-layer-on",j),i.$on("gridded-layer-off",function(){f.isFilterEmpty()&&!g.layer&&k()}),i.$on("filter-phase1-start",j),i.$on("filter-reset",k),i.reset=function(){f.resetFilter(),i.stationView&&(i.stationView=!1,b(k,500))},i.$on("filter-phase2-end",function(a,b){b&&b.observation&&h.lookAtMe("#toolbar-icon-visualizations",5e3)})}]}}]).directive("npnWorking",["uiGmapIsReady",function(a){return{restrict:"E",template:'<div id="npn-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>',scope:{},controller:function(b){function c(){b.working=!0}function d(){b.working=!1}c(),a.promise(1).then(d),b.$on("filter-phase1-start",c),b.$on("filter-phase2-start",c),b.$on("filter-rerun-phase2",c),b.$on("filter-phase2-end",d),b.$on("layer-load-start",c),b.$on("layer-load-end",d)}}}]),angular.module("npn-viz-tool.vis-map",["npn-viz-tool.vis","npn-viz-tool.filter","npn-viz-tool.filters","npn-viz-tool.settings","npn-viz-tool.gridded","ui.bootstrap","rzModule"]).directive("mapVisGeoLayer",["$log","$q","$timeout","uiGmapIsReady","FilterService",function(a,b,c,d,e){return{restrict:"E",template:"",scope:{},link:function(a,f,g){var h=e.getFilter().getGeoArgs(),i=f.parent().parent().find(".angular-google-map-container");h.length&&(c(function(){$(i.children().first().children().first().children().first().children()[1]).css("z-index","99")},1e3),d.promise(2).then(function(a){var c=(a[0].map,a[1].map),d=h.map(function(a){var c=b.defer();return a.arg.toGeoJson(function(a){c.resolve(a)}),c.promise});b.all(d).then(function(a){c.data.addGeoJson({type:"FeatureCollection",features:a}),c.data.setStyle(function(a){return{clickable:!1,strokeColor:"#666",strokeOpacity:null,strokeWeight:1,fillColor:"#800000",fillOpacity:null,zIndex:0}})})}))}}}]).directive("mapVisBoundsLayer",["$log","$q","$timeout","uiGmapIsReady","FilterService","BoundsFilterArg",function(a,b,c,d,e,f){return{restrict:"E",template:"",scope:{},link:function(b,g,h){var i=e.getFilter().getBoundsArgs(),j=g.parent().parent().find(".angular-google-map-container");i.length&&(c(function(){$(j.children().first().children().first().children().first().children()[1]).css("z-index","99")},1e3),d.promise(2).then(function(b){var c=(b[0].map,b[1].map),d=i.map(function(a){return new google.maps.Rectangle(angular.extend({clickable:!1,bounds:a.arg.getBounds(),map:c},f.RECTANGLE_OPTIONS))});a.debug("mapVisBoundsLayer.rectangles",d)}))}}}]).service("MapVisMarkerService",["$log",function(a){var b={PATHS:["M0 22 L22 22 L10 0 Z","M0 22 L22 22 L22 0 L0 0 Z","M4 22 L18 22 L22 10 L18 0 L4 0 L0 10 Z"],getBaseIcon:function(a){return{path:b.PATHS[a],anchor:{x:11,y:11},scale:1}},renderMarkerToSvg:function(a,c,d){if(!(0>c||c>=b.PATHS.length)){d=d||"steelblue";var e=d3.select(a);e.selectAll("path").remove(),e.attr("viewBox","0 0 22 22").attr("width",16).attr("height",16),e.append("path").attr("d",b.PATHS[c]).attr("fill",d)}}};return b}]).directive("mapVisFilterTags",["$log","$timeout","MapVisMarkerService",function(a,b,c){return{restrict:"E",templateUrl:"js/mapvis/filter-tags.html",scope:{mapVisFilter:"="},link:function(a){a.removeFromFilter=function(b){a.mapVisFilter.splice(b,1)},a.$watchCollection("mapVisFilter",function(){b(function(){a.mapVisFilter.forEach(function(a,b){c.renderMarkerToSvg("svg#map-vis-marker-"+b,b)})})})}}}]).directive("mapVisInSituControl",["$log","$q","$http","$url","CacheService","FilterService",function(a,b,c,d,e,f){function g(a,b){var c=b.map(function(a){return a.species_id});return a.forEach(function(a){-1===c.indexOf(a.species_id)&&b.push(a)}),b}function h(f){var h=b.defer(),k=e.get(j);return k?h.resolve(g(k,f)):c.get(d("/npn_portal/species/getSpeciesFilter.json")).then(function(b){k=b.data.filter(function(a){return-1!==i.indexOf(a.species_id)}),a.debug("filtered implicit list of species",k),e.put(j,k,-1),h.resolve(g(k,f))}),h.promise}var i=["20","1198","35","36"],j="map-vis-insitu-implicit-species";return{restrict:"E",templateUrl:"js/mapvis/in-situ-control.html",scope:{mapVisFilter:"=",layer:"=",mapVisPlot:"&"},link:function(b){function c(){var a;b.layer&&(b.disableControl=!1,(b.currentYearOnly=b.layer.currentYearOnly())&&(a=b.layer.extent.current.date.getFullYear(),-1===b.years.indexOf(a)?b.disableControl=!0:b.selection.year=a))}function d(){var c=b.selection.species,d=b.selection.year;c&&d&&(b.phenophaseList=[],f.getFilter().getPhenophasesForSpecies(c.species_id,!0,[d]).then(function(c){a.debug("phenophaseList",c),b.phenophaseList=c,b.selection.phenophase=c.length?c[0]:void 0}))}var e=f.getFilter(),g=e.getDateArg(),i=e.getGeographicArgs().length>0;b.years=d3.range(g.getStartYear(),g.getEndYear()+1),b.selection={year:b.years[0]},b.$watch("layer",c),b.$watch("layer.extent.current",c),e.getSpeciesList().then(function(c){a.debug("speciesList",c),i?(a.debug("filter has geographic args, not adding implicit species."),b.speciesList=c,b.selection.species=c.length?c[0]:void 0):(a.debug("filter has no geographic args merging in implicit species."),h(c).then(function(c){a.debug("merged",c),b.speciesList=c,b.selection.species=c.length?c[0]:void 0}))}),b.$watch("selection.species",d),b.$watch("selection.year",d),b.validSelection=function(){var a=b.selection;return a.species&&a.phenophase&&a.year?b.mapVisFilter.length<3&&(0===b.mapVisFilter.length||!b.mapVisFilter.reduce(function(b,c){return b||a.species===c.species&&a.phenophase===c.phenophase&&a.year===c.year},!1)):!1},b.addSelectionToFilter=function(){b.mapVisFilter.push(angular.extend({},b.selection))}}}}]).directive("mapVisMarkerInfoWindow",[function(){return{restrict:"E",templateUrl:"js/mapvis/marker-info-window.html"}}]).controller("MapVisCtrl",["$scope","$uibModalInstance","$filter","$log","$compile","$timeout","$q","$http","$url","uiGmapGoogleMapApi","uiGmapIsReady","RestrictedBoundsService","WmsService","ChartService","MapVisMarkerService","md5","GriddedInfoWindowHandler",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){function r(){a.results.markerModels={},a.results.markers=[]}function s(){w&&w.close(),x&&x.close()}function t(){var b="#ffffff",c={data:a.speciesSelections.map(function(){return{record:null}}),getSiteId:function(){return c.site_id},restyle:function(){return c.markerOpts.icon.strokeColor=c.data.reduce(function(a,b){return a+(b.record?1:0)},0)>1?"#00ff00":"#204d74",c.markerOpts.title=c.data.reduce(function(c,d,e){if(delete d.legend_data,d.record){d.legend_data=d.record.legend_data=a.legend.getPointData(d.record.mean_first_yes_doy)||{color:b,label:"off scale"};var f=a.speciesSelections[e];""!==c&&(c+=", "),c+=f.year,c+=": ",c+=a.legend.formatPointData(d.record.mean_first_yes_doy)}return c},""),c.markerOpts.icon.fillColor=c.data[c.filter_index].legend_data.color,c.$markerKey=p.createHash(JSON.stringify(c)),c},marker:function(){return{$markerKey:c.$markerKey,site_id:c.site_id,latitude:c.latitude,longitude:c.longitude,markerOpts:c.markerOpts}},add:function(a,b){return c.data[b].record=a,c.markerOpts||(c.site_id=a.site_id,c.filter_index=b,c.latitude=a.latitude,
c.longitude=a.longitude,c.markerOpts={zIndex:365-a.first_yes_doy,icon:angular.extend(o.getBaseIcon(b),{fillOpacity:1,strokeWeight:1})}),c.restyle()}};return c}var u,v,w,x,y="<div><map-vis-marker-info-window></map-vis-marker-info-window></div>",z=l.getRestrictor("map_vis");a.modal=b,a.wms_map={center:{latitude:48.35674,longitude:-122.39658},zoom:3,options:{disableDoubleClickZoom:!0,scrollwheel:!0,streetViewControl:!1,panControl:!1,zoomControl:!0,zoomControlOptions:{style:google.maps.ZoomControlStyle.SMALL,position:google.maps.ControlPosition.RIGHT_TOP},styles:[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"transit.station",elementType:"labels",stylers:[{visibility:"off"}]}]},events:{click:function(b,c,e){var f=e[0];d.debug("click",f),w&&w.open(f.latLng,a.selection.activeLayer,a.legend)},center_changed:z.center_changed}},j.then(function(b){u=b,k.promise(2).then(function(b){v=b[1].map,w=new q(v),m.getLayers(v).then(function(b){d.debug("layers",b),a.layers=b},function(){d.error("unable to get map layers?")})})}),a.selection={},a.results={},r(),a.$watch("selection.layerCategory",function(b){d.debug("layer category change ",b),a.selection.activeLayer&&(d.debug("turning off layer ",a.selection.activeLayer.name),a.selection.activeLayer.off(),delete a.selection.activeLayer,delete a.legend,s())}),a.$watch("selection.layer",function(b){b&&(s(),delete a.markerModel,d.debug("selection.layer",b),a.selection.activeLayer&&(d.debug("turning off layer ",a.selection.activeLayer.name),a.selection.activeLayer.off()),d.debug("fitting new layer ",b.name),a.selection.activeLayer=b.fit().on(),z.setBounds(b.getBounds()),delete a.legend,a.selection.activeLayer.getLegend(b).then(function(b){a.legend=b,a.selection.activeLayer.supportsData()?a.results.markers=Object.keys(a.results.markerModels).map(function(b){return a.results.markerModels[b].restyle().marker()}):r()}))}),a.$watch("selection.activeLayer.extent.current",function(b){var c,e,f;(c=a.selection.activeLayer)&&(d.debug("layer extent change ",c.name,b),s(),c.bounce(),c.currentYearOnly()&&(e=b.date.getFullYear(),f=a.speciesSelections.filter(function(a){return a.year===e}),f.length!==a.speciesSelections.length&&(a.speciesSelections.splice(0,a.speciesSelections.length),f.forEach(function(b){a.speciesSelections.push(b)}),a.plotMarkers())))}),a.speciesSelections=[],a.$watchCollection("speciesSelections",function(b,c){d.debug("speciesSelections",b,c),c&&b&&c.length>b.length&&a.results.markers.length&&a.plotMarkers()}),a.markerEvents={click:function(b){d.debug("click",b),a.$apply(function(){var c=a.markerModel===a.results.markerModels[b.model.site_id];a.markerModel=a.results.markerModels[b.model.site_id],x||(x=new u.InfoWindow({maxWidth:500,content:""})),c||x.setContent('<i class="fa fa-circle-o-notch fa-spin"></i>'),x.setPosition(b.position),x.open(b.map)})}},a.$watch("markerModel",function(b){if(b){var c,j,k=[];d.debug("mapVisMarkerInfoWindow.markerModel",b),b.station||(c=g.defer(),k.push(c.promise),h.get(i("/npn_portal/stations/getStationDetails.json"),{params:{ids:b.site_id}}).success(function(a){b.station=a&&a.length?a[0]:void 0,c.resolve()})),j=g.defer(),k.push(j.promise),delete b.gridded_legend_data,a.selection.activeLayer.getGriddedData(new google.maps.LatLng(b.latitude,b.longitude)).then(function(c){d.debug("tuples",c);var e=c&&c.length?c[0]:void 0;if("undefined"==typeof e||-9999===e||isNaN(e))return d.debug("received undefined, -9999 or Nan ignoring"),void j.resolve();var f=a.legend.getPointData(e);f||(f={label:a.legend.formatPointData(e),color:"#ffffff"}),b.gridded_legend_data=angular.extend({point:e},f),j.resolve()},function(){d.error("unable to get gridded data."),j.resolve()}),g.all(k).then(function(){var c=e(y)(a);f(function(){x.setContent(c.html()),f(function(){a.speciesSelections.forEach(function(a,c){b.data[c].record&&b.data[c].legend_data&&o.renderMarkerToSvg("svg#map-vis-iw-marker-"+c,c,b.data[c].legend_data.color)})},250)})})}}),a.plotMarkers=function(){s(),r(),a.working=!0;var b=a.results.markerModels,c=a.speciesSelections.map(function(a,c){var e=g.defer(),f={request_src:"npn-vis-map",start_date:a.year+"-01-01",end_date:a.year+"-12-31","species_id[0]":a.species.species_id,"phenophase_id[0]":a.phenophase.phenophase_id};return d.debug("gathering summary data for ",a,f),n.getSiteLevelData(f,function(f){d.debug("site level data has arrived for ",a,f);var g=(f||[]).reduce(function(a,d){return-9999===d.mean_first_yes_doy?a:(b[d.site_id]?b[d.site_id].add(d,c):a.push(b[d.site_id]=(new t).add(d,c)),a)},[]);d.debug("resulted in "+g.length+" added markers."),e.resolve()}),e.promise});g.all(c).then(function(){d.debug("all summary data has arrived..."),a.results.markers=Object.keys(b).reduce(function(a,c){return a.push(b[c].marker()),a},[]),a.working=!1})}}]),angular.module("templates-npnvis",["js/activity/activity.html","js/activity/curve-control.html","js/calendar/calendar.html","js/filter/choroplethInfo.html","js/filter/dateFilterTag.html","js/filter/filterControl.html","js/filter/filterTags.html","js/filter/networkFilterTag.html","js/filter/speciesFilterTag.html","js/gridded/date-control.html","js/gridded/doy-control.html","js/gridded/gridded-control.html","js/gridded/layer-control.html","js/gridded/legend.html","js/gridded/year-control.html","js/layers/layerControl.html","js/map/map.html","js/mapvis/filter-tags.html","js/mapvis/in-situ-control.html","js/mapvis/mapvis.html","js/mapvis/marker-info-window.html","js/scatter/scatter.html","js/settings/settingsControl.html","js/time/time.html","js/toolbar/tool.html","js/toolbar/toolbar.html","js/vis/visControl.html","js/vis/visDialog.html","js/vis/visDownload.html"]),angular.module("js/activity/activity.html",[]).run(["$templateCache",function(a){a.put("js/activity/activity.html",'<vis-dialog title="Activity Curves" modal="modal">\n<form class="form-inline plot-criteria-form">\n    <ul class="list-unstyled">\n        <li ng-repeat="input in selection.curves" class="control"><h4 ng-style="{color: input.color()}">Curve {{$index+1}}</h4><activity-curve-control input="input"></activity-curve-control></li>\n        <li  style="padding-top: 10px;">\n            <form class="form-inline">\n                <div class="form-group">\n                    <label for="frequency">Date Interval</label>\n                    <select class="form-control" id="frequency"\n                        ng-model="selection.frequency"\n                        ng-options="f as f.label for f in frequencies"></select>\n                </div>\n                <div class="form-group">\n                    <label for="interpolate">Interpolate</label>\n                    <select class="form-control" id="year-{{input.id}}"\n                        ng-model="selection.interpolate"\n                        ng-options="i as i for i in [\'linear\',\'step-after\',\'cardinal\',\'monotone\']"></select>\n                </div>\n                <button class="btn btn-primary" ng-click="visualize()" ng-disabled="!selection.shouldRevisualize()">Visualize</button>\n            </form>\n        </li>\n    </ul>\n</form>\n\n<div class="panel panel-default main-vis-panel" >\n    <div class="panel-body">\n        <center>\n            <div id="vis-container">\n                <div id="vis-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>\n                <activity-curves-chart selection="selection"></activity-curves-chart>\n            </div>\n        </center>\n    </div>\n    <!--pre>{{selection | json}}</pre-->\n</div>\n</vis-dialog>\n')}]),angular.module("js/activity/curve-control.html",[]).run(["$templateCache",function(a){a.put("js/activity/curve-control.html",'<div class="activity-curve-control">\n    <form class="form-inline">\n        <div class="form-group">\n            <label for="species-{{input.id}}">Species</label>\n            <select class="form-control" id="species-{{input.id}}"\n                ng-model="input.species"\n                ng-options="(o|speciesTitle) for o in speciesList">\n              <option ng-if="input.id > 0" value="">-- Select species --</option>\n            </select>\n        </div>\n        <div class="form-group" ng-show="input.species">\n            <label for="phenophase-{{input.id}}">Phenophase</label>\n            <select class="form-control" id="phenophase-{{input.id}}"\n                ng-model="input.phenophase"\n                ng-options="o.phenophase_name for o in input.validPhenophases"></select>\n        </div>\n        <div class="form-group" ng-show="input.species">\n            <label for="year-{{input.id}}">Year</label>\n            <select class="form-control" id="year-{{input.id}}"\n                ng-model="input.year"\n                ng-options="y for y in validYears"></select>\n        </div>\n        <div class="form-group" ng-show="input.species">\n            <label for="metric-{{input.id}}">Metric</label>\n            <select class="form-control" id="metric-{{input.id}}"\n                ng-model="input.metric"\n                ng-options="m as m.label for m in input.validMetrics"></select>\n        </div>\n    </form>\n</div>\n')}]),angular.module("js/calendar/calendar.html",[]).run(["$templateCache",function(a){a.put("js/calendar/calendar.html",'<vis-dialog title="Calendar" modal="modal">\n<form class="form-inline plot-criteria-form">\n    <div class="form-group">\n        <label for="yearsOneInput">Select up to two years</label>\n        <input id="yearsOneInput" type="number" class="form-control"\n               ng-model="selection.year"\n               uib-typeahead="year for year in validYears | filter:$viewValue"\n               required placeholder="Year" />\n        <button class="btn btn-default" ng-click="addYear()" ng-disabled="!canAddYear()"><i class="fa fa-plus"></i></button>\n    </div>\n    <div class="form-group animated-show-hide">\n        <label for="speciesInput">Species phenophase combinations</label>\n        <select name="speciesInput" class="form-control" ng-model="selection.species" ng-options="(o|speciesTitle) for o in speciesList"></select>\n        <select name="phenophaseInput" class="form-control" ng-model="selection.phenophase" ng-options="o.phenophase_name for o in phenophaseList"></select>\n        <div class="btn-group" uib-dropdown is-open="selection.color_isopen">\n          <button type="button" class="btn btn-default dropdown-toggle" uib-dropdown-toggle style="background-color: {{colorRange[selection.color]}};">\n            &nbsp; <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu" role="menu">\n            <li ng-repeat="i in colors track by $index" style="background-color: {{colorRange[$index]}};"><a href ng-click="selection.color=$index;">&nbsp;</a></li>\n          </ul>\n        </div>\n        <button class="btn btn-default" ng-click="addToPlot()" ng-disabled="!canAddToPlot()"><i class="fa fa-plus"></i></button>\n    </div>\n</form>\n<div class="panel panel-default main-vis-panel" >\n    <div class="panel-body">\n        <center ng-if="error_message"><p class="text-danger">{{error_message}}</p></center>\n        <center>\n        <ul class="to-plot list-inline animated-show-hide" ng-if="toPlot.length || toPlotYears.length">\n            <li class="criteria" ng-repeat="y in toPlotYears">{{y}}\n                <a href ng-click="removeYear($index)"><i class="fa fa-times-circle-o"></i></a>\n            </li>\n            <li class="criteria" ng-repeat="tp in toPlot">{{tp|speciesTitle}}/{{tp.phenophase_name}} <i style="color: {{colorRange[tp.color]}};" class="fa fa-circle"></i>\n                <a href ng-click="removeFromPlot($index)"><i class="fa fa-times-circle-o"></i></a>\n            </li>\n            <li ng-if="data">\n                <label for="negativeInput">Absence Data</label>\n                <input type="checkbox" id="negativeInput" ng-model="selection.negative" />\n            </li>\n            <li ng-if="!data && toPlotYears.length && toPlot.length"><button class="btn btn-primary" ng-click="visualize()">Visualize</button></li>\n        </ul>\n        <div id="vis-container">\n            <div id="vis-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>\n            <div class="chart-container">\n                <vis-download ng-if="data"\n                              selector=".chart"\n                              filename="npn-calendar.png"></vis-download>\n                <div><svg class="chart"></svg></div>\n            </div>\n        </div>\n        </center>\n		<!--\n		<p class = \'citation-text\'>USA National Phenology Network, www.usanpn.org</p>\n		-->\n        <ul class="list-inline calendar-chart-controls" ng-if="data" style="float: right;">\n            <li>Label Size\n                <a href class="btn btn-default btn-xs" ng-click="decrFontSize()"><i class="fa fa-minus"></i></a>\n                <a href class="btn btn-default btn-xs" ng-click="incrFontSize()"><i class="fa fa-plus"></i></a>\n            </li>\n            <li>Label Position\n                <a href class="btn btn-default btn-xs" ng-click="yAxisConfig.labelOffset=(yAxisConfig.labelOffset-1)"><i class="fa fa-minus"></i></a>\n                <a href class="btn btn-default btn-xs" ng-click="yAxisConfig.labelOffset=(yAxisConfig.labelOffset+1)"><i class="fa fa-plus"></i></a>\n            </li>\n            <li>Band Size\n                <a href class="btn btn-default btn-xs" ng-click="incrBandPadding()" ng-disabled="yAxisConfig.bandPadding >= 0.95"><i class="fa fa-minus"></i></a>\n                <a href class="btn btn-default btn-xs" ng-click="decrBandPadding()" ng-disabled="yAxisConfig.bandPadding <= 0.05"><i class="fa fa-plus"></i></a>\n            </li>\n        </ul>\n    </div>\n</div>\n\n</vis-dialog>\n')}]),angular.module("js/filter/choroplethInfo.html",[]).run(["$templateCache",function(a){a.put("js/filter/choroplethInfo.html",'<div id="choroplethHelp" ng-show="show">\n    <h4>{{station_name}}</h4>\n    <h5>Record Densit{{data.length == 1 ? \'y\' : \'ies\'}}</h5>\n    <ul class="list-unstyled">\n        <li ng-repeat="scale in data">\n            <label>{{scale.title}} ({{scale.count}})</label>\n            <ul class="list-inline color-scale">\n                <li ng-repeat="color in scale.colors" style="background-color: {{color}};" class="{{scale.color === color ? \'selected\' :\'\'}}">\n                    <div ng-if="$first">{{scale.domain[0]}}</div>\n                    <div ng-if="$last">{{scale.domain[1]}}</div>\n                </li>\n            </ul>\n        </li>\n    </li>\n</div>')}]),angular.module("js/filter/dateFilterTag.html",[]).run(["$templateCache",function(a){a.put("js/filter/dateFilterTag.html",'<div class="btn-group filter-tag date">\n    <a class="btn btn-default">\n        <span popover-placement="bottom" popover-popup-delay="500" popover-append-to-body="true"\n              popover-trigger="mouseenter" uib-popover="Indicates the span of time represented on the map">{{arg.arg.start_date}} - {{arg.arg.end_date}} </span>\n        <span class="badge"\n              popover-placement="bottom" popover-popup-delay="500" popover-append-to-body="true"\n              popover-trigger="mouseenter" uib-popover="{{badgeTooltip}}">{{counts | speciesBadge:badgeFormat}}</span>\n    </a>\n    <a class="btn btn-default" ng-click="removeFromFilter(arg)">\n        <i class="fa fa-times-circle-o"></i>\n    </a>\n</div>')}]),angular.module("js/filter/filterControl.html",[]).run(["$templateCache",function(a){a.put("js/filter/filterControl.html",'<ul class="list-unstyled">\n    <li>\n        <label for="yearInputForm">Select up to ten (consecutive) years</label>\n        <form id="yearInputForm" name="yearInputForm">\n        <input id="start_date" type="number" class="form-control"\n               max="{{selected.date.end_date || thisYear}}"\n               ng-model="selected.date.start_date"\n               uib-typeahead="year for year in validYears | lte:selected.date.end_date | filter:$viewValue"\n               required placeholder="From" /> - \n        <input id="end_date" type="number" class="form-control"\n                min="{{selected.date.start_date || 1900}}"\n                ng-model="selected.date.end_date"\n                uib-typeahead="year for year in validYears | gte:selected.date.start_date | filter:$viewValue"\n                required placeholder="To" />\n        <button class="btn btn-default"\n                ng-disabled="yearInputForm.$invalid || ((selected.date.end_date - selected.date.start_date) > 10)"\n                ng-click="addDateRangeToFilter()"\n                popover-placement="right" popover-popup-delay="500" popover-append-to-body="true"\n                popover-trigger="mouseenter" popover="Add this filter to the map"><i class="fa fa-plus"></i></button>\n        </form>\n        <p ng-if="selected.date.start_date < 2008" class="disclaimer">\n            You have selected a starting year prior to 2008 when the contemprary phenology data begins.  Prior to 2008 there is\n            a much more limited set of historical data and a limited number of species (E.g. lilac and honeysuckle).\n        </p>\n    </li>\n    <li class="divider" ng-if="filterHasDate()"></li>\n    <li ng-if="filterHasDate()">\n        <label>Animal Types</label>\n        <div isteven-multi-select\n            max-labels="3"\n            input-model="animalTypes"\n            output-model="speciesInput.animals"\n            button-label="species_type"\n            item-label="species_type"\n            tick-property="selected"\n            orientation="horizontal"\n            helper-elements="all none reset filter"\n            on-close="findSpecies()"></div>\n    </li>\n    <li ng-if="filterHasDate()">\n        <label>Plant Types</label>\n        <div isteven-multi-select\n            max-labels="3"\n            input-model="plantTypes"\n            output-model="speciesInput.plants"\n            button-label="species_type"\n            item-label="species_type"\n            tick-property="selected"\n            orientation="horizontal"\n            helper-elements="all none reset filter"\n            on-close="findSpecies()"></div>\n    </li>\n    <li ng-if="filterHasDate()">\n        <label>Partners</label>\n        <div class="row">\n            <div class="col-xs-9">\n                <div isteven-multi-select\n                    max-labels="3"\n                    input-model="partners"\n                    output-model="speciesInput.networks"\n                    button-label="network_name"\n                    item-label="network_name"\n                    tick-property="selected"\n                    orientation="horizontal"\n                    helper-elements="none reset filter"\n                    on-close="findSpecies()"></div>\n            </div>\n            <div class="col-xs-3">\n                <button id="add-networks-button" class="btn btn-default"\n                        ng-disabled="!speciesInput.networks.length || networksMaxedOut()"\n                        ng-click="addNetworksToFilter()"\n                        popover-placement="right" popover-popup-delay="500"\n                        popover-trigger="mouseenter" uib-popover="Add this filter to the map" popover-append-to-body="true">\n                    <i class="fa fa-plus"></i>\n                </button>\n            </div>\n        </div>\n\n    </li>\n    <li ng-if="filterHasDate()">\n        <label for="species">Species</label>\n        <div class="row">\n            <div class="col-xs-9">\n                <div isteven-multi-select\n                    max-labels="3"\n                    input-model="speciesList"\n                    output-model="selected.species"\n                    button-label="display"\n                    item-label="display"\n                    tick-property="selected"\n                    orientation="horizontal"\n                    helper-elements="none reset filter"></div>\n            </div>\n            <div class="col-xs-3">\n                <button id="add-species-button" class="btn btn-default"\n                        ng-disabled="!selected.species.length || speciesMaxedOut()"\n                        ng-click="addSpeciesToFilter()"\n                        popover-placement="right" popover-popup-delay="500"\n                        popover-trigger="mouseenter" uib-popover="Add this filter to the map" popover-append-to-body="true">\n                    <i class="fa" ng-class="{\'fa-refresh fa-spin\': findingSpecies, \'fa-plus\': !findingSpecies}"></i>\n                </button>\n            </div>\n        </div>\n    </li>\n    <li ng-if="filterHasDate()" style="text-align: right;">\n        <a class="btn btn-lg btn-primary" id="filter-placebo" href ng-click="$parent.$parent.close()" ng-disabled="!filterHasSufficientCriteria()">Execute Filter <i class="fa fa-search"></i></a>\n    </li>\n</ul>\n')}]),angular.module("js/filter/filterTags.html",[]).run(["$templateCache",function(a){a.put("js/filter/filterTags.html",'<ul class="list-inline filter-tags">\n    <li ng-repeat="s in getFilter().getSpeciesArgs()"><species-filter-tag arg="s"></species-filter-tag></li>\n    <li ng-repeat="n in getFilter().getNetworkArgs()"><network-filter-tag arg="n"></network-filter-tag></li>\n    <li ng-if="(date = getFilter().getDateArg())"><date-filter-tag arg="date"></date-filter-tag></li>\n</ul>')}]),angular.module("js/filter/networkFilterTag.html",[]).run(["$templateCache",function(a){a.put("js/filter/networkFilterTag.html",'<div class="btn-group filter-tag date" ng-class="{open: status.isopen}">\n    <a class="btn btn-default" ng-click="status.isopen = !status.isopen">\n        {{arg.arg.network_name}}\n        <span class="badge"\n              popover-placement="bottom" popover-popup-delay="500" popover-append-to-body="true"\n              popover-trigger="mouseenter" uib-popover="{{badgeTooltip}}">{{arg.counts | speciesBadge:badgeFormat}}</span>\n        <span class="caret"></span>\n    </a>\n    <ul class="dropdown-menu network-dd" role="menu">\n        <li class="inline">\n            <label for="ydo-{{arg.arg.network_id}}"><input id="ydo-{{arg.arg.network_id}}" type="checkbox" ng-model="arg.ydo"/> Yes Data Only</label>\n        </li>\n    </ul>\n    <a class="btn btn-default" ng-click="removeFromFilter(arg)">\n        <i class="fa fa-times-circle-o"></i>\n    </a>\n</div>\n')}]),angular.module("js/filter/speciesFilterTag.html",[]).run(["$templateCache",function(a){a.put("js/filter/speciesFilterTag.html",'<div class="btn-group filter-tag" ng-class="{open: status.isopen}">\n    <a class="btn btn-primary" style="background-color: {{arg.color}};" ng-disabled="!arg.phenophases" ng-click="status.isopen = !status.isopen">\n        {{arg.arg | speciesTitle:titleFormat}}\n        <span class="badge"\n              popover-placement="bottom" popover-popup-delay="500" popover-append-to-body="true"\n              popover-trigger="mouseenter" uib-popover="{{badgeTooltip}}">{{arg.counts | speciesBadge:badgeFormat}}</span>\n        <span class="caret"></span>\n    </a>\n    <ul class="dropdown-menu phenophase-list" role="menu">\n        <li class="inline">\n            <label for="ydo-{{arg.arg.species_id}}"><input id="ydo-{{arg.arg.species_id}}" type="checkbox" ng-model="arg.ydo"/> Yes Data Only</label>\n        </li>\n        <li class="divider"></li>\n        <li class="inline">Select <a href ng-click="selectAll(true)">all</a> <a href ng-click="selectAll(false)">none</a></li>\n        <li class="divider"></li>\n        <li ng-repeat="phenophase in arg.phenophases | filter:hasCount">\n            <label for="{{arg.arg.species_id}}-{{phenophase.phenophase_id}}"><input id="{{arg.arg.species_id}}-{{phenophase.phenophase_id}}" type="checkbox" ng-model="phenophase.selected"> <span class="badge">{{phenophase.count}}</span> {{phenophase.phenophase_name}}</label>\n        </li>\n    </ul>\n    <a class="btn btn-primary" style="background-color: {{arg.color}};" ng-click="removeFromFilter(arg)">\n        <i class="fa fa-times-circle-o"></i>\n    </a>\n</div>\n')}]),angular.module("js/gridded/date-control.html",[]).run(["$templateCache",function(a){a.put("js/gridded/date-control.html",'<label>Date</label>\n<p class="input-group">\n  <input type="text" class="form-control"\n        uib-datepicker-popup="longDate"\n        ng-model="selection"\n        is-open="isOpen"\n        min-date="minDate"\n        max-date="maxDate"\n        close-text="Close"\n        ng-click="open()" />\n  <span class="input-group-btn">\n    <button type="button" class="btn btn-default" ng-click="open()"><i class="glyphicon glyphicon-calendar"></i></button>\n  </span>\n</p>')}]),angular.module("js/gridded/doy-control.html",[]).run(["$templateCache",function(a){a.put("js/gridded/doy-control.html",'<label>Day of Year</label>\n<div class="form-inline" style="margin-bottom: 15px;">\n    <div class="form-group">\n        <label for="selectedMonth" class="sr-only">Month</label>\n        <select id="selectedMonth" class="form-control" ng-model="selection.month"\n                ng-options="m as (m | date:\'MMMM\') for m in months"></select>\n    </div>\n    <div class="form-group" ng-if="selection.month">\n        <label for="selectedDate" class="sr-only">Day</label>\n        <select id="selectedDate" class="form-control" ng-model="selection.date"\n                ng-options="d for d in dates"></select>\n    </div>\n    <div class="form-group">\n        <input class="form-control" style="width: 50px; cursor: default;" type="text" value="{{layer.extent.current.value | number:0}}" disabled />\n    </div>\n</div>')}]),angular.module("js/gridded/gridded-control.html",[]).run(["$templateCache",function(a){a.put("js/gridded/gridded-control.html",'<p class="empty-filter-notes">Spring Index and Accumulated Growing Degree Day (AGDD) maps display spatial and temporal patterns in temperature and predicted phenology across the United States. Use the controls below to select a gridded layer to view on the map.</p>\n<p><a href="https://www.usanpn.org/data/phenology_maps" target="_blank">More Info on Phenology Maps</a></p>\n<gridded-layer-control></gridded-layer-control>')}]),angular.module("js/gridded/layer-control.html",[]).run(["$templateCache",function(a){a.put("js/gridded/layer-control.html",'<div ng-if="layers" class="gridded-layer-control">\n    <div class="form-group">\n        <a ng-if="actions.reset && selection.layer" class="reset-layer pull-right" ng-click="actions.reset()"\n            uib-popover="Reset" popover-placement="right" popover-append-to-body="true" popover-trigger="mouseenter" popover-delay="500"><i class="fa fa-times-circle"></i></a>\n        <label for="selectedCategory">Category</label>\n        <select id="selectedCategory" class="form-control" ng-model="selection.layerCategory"\n                ng-options="cat as cat.name for cat in layers.categories"></select>\n\n    </div>\n    <div class="form-group" ng-if="selection.layerCategory">\n        <label for="selectedLayer">Layer</label>\n        <select id="selectedLayer" class="form-control" ng-model="selection.layer"\n                ng-options="l as l.getTitle() for l in selection.layerCategory.layers"></select>\n    </div>\n    <div class="extent-control" ng-if="selection.layer.extent" ng-switch="selection.layer.extent.type">\n        <gridded-doy-control ng-switch-when="doy" layer="selection.layer"></gridded-doy-control>\n        <gridded-date-control ng-switch-when="date" layer="selection.layer"></gridded-date-control>\n        <gridded-year-control ng-switch-when="year" layer="selection.layer"></gridded-year-control>\n    </div>\n    <gridded-opacity-slider layer="selection.layer"></gridded-opacity-slider>\n    <gridded-range-slider layer="selection.layer"></gridded-range-slider>\n    <p ng-if="selection.layer.abstract">{{selection.layer.getAbstract()}}</p>\n    <p ng-if="selection.layer.$description" ng-bind-html="selection.layer.$description"></p>\n</div>\n')}]),angular.module("js/gridded/legend.html",[]).run(["$templateCache",function(a){a.put("js/gridded/legend.html",'<svg class="gridded-legend"></svg>')}]),angular.module("js/gridded/year-control.html",[]).run(["$templateCache",function(a){a.put("js/gridded/year-control.html",'<div class="form-group" ng-if="layer.extent">\n    <label for="selectedExtent">Year</label>\n    <select id="selectedExtent" class="form-control" ng-model="layer.extent.current" ng-options="v as v.label for v in layer.extent.values"></select>\n</div>')}]),angular.module("js/layers/layerControl.html",[]).run(["$templateCache",function(a){a.put("js/layers/layerControl.html",'<p class="empty-filter-notes" ng-if="!hasSufficientCriteria()">\n    Before adding a boundary layer to the map you must create and execute a filter.\n    A boundary layer will allow you to filter sites based on the geographic area it defines.\n</p>\n<ul class="list-unstyled" ng-if="hasSufficientCriteria()">\n    <li><label ng-class="{\'selected-layer\': layerOnMap.layer === \'none\'}"><a href ng-click="layerOnMap.layer=\'none\'">None</a></label>\n        <!--input type="radio" id="layer-none" ng-model="layerOnMap.layer" value="none"/> <label for="layer-none">None</label-->\n    </li>\n    <li ng-repeat="layer in layers">\n        <label  ng-class="{\'selected-layer\': layerOnMap.layer === layer}">{{layer.label}}</label>\n        <a href ng-click="layerOnMap.layer=layer"><img ng-src="{{layer.img}}" /></a>\n        <ul class="list-inline layer-links">\n            <li ng-if="layer.link"><a href="{{layer.link}}" target="_blank">More Info</a></li>\n            <li ng-if="layer.source"><a href="{{layer.source}}" target="_blank">Source</a></li>\n        </ul>\n    </li>\n</ul>')}]),angular.module("js/map/map.html",[]).run(["$templateCache",function(a){a.put("js/map/map.html",'<a title="Reset" href id="reset-control" class="btn btn-default btn-xs" ng-click="reset()"><i class="fa fa-refresh"></i></a>\n\n<npn-working></npn-working>\n\n<ui-gmap-google-map ng-if="map" center=\'map.center\' zoom=\'map.zoom\' options="map.options" events="map.events">\n    <npn-stations ng-if="stationView"></npn-stations>\n    <npn-filter-results></npn-filter-results>\n    <bounds-manager></bounds-manager>\n</ui-gmap-google-map>\n\n<share-control></share-control>\n<export-control></export-control>\n<help-video-control></help-video-control>\n<filter-tags></filter-tags>\n<choropleth-info></choropleth-info>\n<gridded-legend-main></gridded-legend-main>\n\n<toolbar>\n    <tool id="filter" icon="fa-search" title="Filter">\n        <filter-control></filter-control>\n    </tool>\n    <tool id="layers" icon="fa-bars" title="Boundary Layers">\n        <layer-control></layer-control>\n    </tool>\n    <tool id="visualizations" icon="fa-bar-chart" title="Visualizations">\n        <vis-control></vis-control>\n    </tool>\n    <tool id="settings" icon="fa-cog" title="Settings">\n        <settings-control></settings-control>\n    </tool>\n	<tool id="gridded" icon="fa-th" title="Gridded Layers">\n		<gridded-control></gridded-control>\n	</tool>\n</toolbar>\n')}]),angular.module("js/mapvis/filter-tags.html",[]).run(["$templateCache",function(a){a.put("js/mapvis/filter-tags.html",'<ul class="filter-tags map-vis list-inline pull-right">\n	<li ng-if="mapVisFilter.length">\n        <div class="btn-group filter-tag">\n            <a class="btn btn-default">\n                <span>Multiple Observations Reported at this Location</span>\n                <img src=\'mult-species-legend.png\' />\n            </a>\n        </div>		\n	</li>\n    <li ng-repeat="tag in mapVisFilter">\n        <div class="btn-group filter-tag">\n            <a class="btn btn-default">\n                <span>{{tag.species | speciesTitle}}, {{tag.phenophase.phenophase_name}}, {{tag.year}} </span>\n                <svg id="map-vis-marker-{{$index}}"></svg>\n            </a>\n            <a class="btn btn-default" ng-click="removeFromFilter($index)">\n                <i class="fa fa-times-circle-o"></i>\n            </a>\n        </div>\n    </li>\n</ul>');
}]),angular.module("js/mapvis/in-situ-control.html",[]).run(["$templateCache",function(a){a.put("js/mapvis/in-situ-control.html",'<div class="in-situ-control" ng-if="layer && layer.supportsData()">\n    <div class="disable-curtain" ng-if="disableControl"></div>\n    <hr />\n	<h4>Plot Observed Onset</h4>	\n    <div class="form-group" ng-if="speciesList">\n        <label for="selectedSpecies">Species</label>\n        <select id="selectedSpecies" class="form-control" ng-model="selection.species"\n                ng-options="s as (s | speciesTitle) for s in speciesList"></select>\n    </div>\n    <div class="form-group" ng-if="selection.species">\n        <label for="selectedPhenophse">Phenophase</label>\n        <select id="selectedPhenophse" class="form-control" ng-model="selection.phenophase"\n                ng-options="p as p.phenophase_name for p in phenophaseList"></select>\n    </div>\n    <div class="row">\n        <div class="col-xs-9">\n            <div class="form-group" ng-if="selection.species && selection.phenophase">\n                <label for="selectedYear">Year</label>\n                <select id="selectedYear" class="form-control" ng-model="selection.year" ng-disabled="currentYearOnly"\n                        ng-options="y as y for y in years"></select>\n            </div>\n        </div>\n        <div class="col-xs-3">\n            <div class="form-group text-right">\n                <label for="addToMapVis" style="visibility: hidden; display: block;">Add</label>\n                <button id="addToMapVis" class="btn btn-default"\n                        ng-click="addSelectionToFilter()"\n                        ng-disabled="!validSelection()"\n                        popover-placement="left" popover-popup-delay="500"\n                        popover-trigger="mouseenter"\n                        uib-popover="Add this species/phenophase/year to the map"\n                        popover-append-to-body="true">\n                    <i class="fa fa-plus"></i>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xs-12">\n            <button id="mapVisPlot" class="btn btn-default pull-right"\n                    ng-click="mapVisPlot()"\n                    ng-disabled="!mapVisFilter.length"\n                    popover-placement="left" popover-popup-delay="500"\n                    popover-trigger="mouseenter"\n                    uib-popover="Add this species/phenophase/year to the map"\n                    popover-append-to-body="true">Plot data</button>\n        </div>\n    </div>\n</div>\n<div class="in-situ-control" ng-if="layer && !layer.supportsData()">\n	<p style=\'font-style:italic;font-size:11px\'>Note: To plot Nature’s Notebook phenology observations against phenology maps, please select one of the following Gridded Layer categories: "Spring Indices, Historical Annual", "Spring Indices, Current Year" or "Spring Indices, Daily 30-year Average".</p>\n</div>')}]),angular.module("js/mapvis/mapvis.html",[]).run(["$templateCache",function(a){a.put("js/mapvis/mapvis.html",'<vis-dialog title="Phenology Maps" modal="modal">\n    <div class="container-fluid">\n        <div class="row">\n            <div class="col-xs-8">\n                <div id="vis-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>\n                <map-vis-filter-tags map-vis-filter="speciesSelections"></map-vis-filter-tags>\n                <ui-gmap-google-map ng-if="wms_map" center=\'wms_map.center\' zoom=\'wms_map.zoom\' options="wms_map.options" events="wms_map.events">\n                    <ui-gmap-markers models="results.markers"\n                                    idKey="\'$markerKey\'"\n                                    coords="\'self\'"\n                                    icon="\'icon\'"\n                                    options="\'markerOpts\'"\n                                    doCluster="false"\n                                    events="markerEvents"></ui-gmap-markers>\n                    <map-vis-geo-layer></map-vis-geo-layer>\n                    <map-vis-bounds-layer></map-vis-bounds-layer>\n                </ui-gmap-google-map>\n				<p class = \'citation-text\'>USA National Phenology Network, www.usanpn.org</p>\n                <gridded-legend legend="legend"></gridded-legend>\n                <!--map-vis-marker-info-window></map-vis-marker-info-window-->\n            </div>\n            <div class="col-xs-4">\n				<h4>Select Gridded Layer</h4>\n				<p><a href="https://www.usanpn.org/data/phenology_maps" target="_blank">More Info on Phenology Maps</a></p>\n                <gridded-layer-control></gridded-layer-control>\n                <map-vis-in-situ-control layer="selection.layer" map-vis-filter="speciesSelections" map-vis-plot="plotMarkers()"></map-vis-in-situ-control>\n            </div>\n        </div>\n    </div>\n</vis-dialog>')}]),angular.module("js/mapvis/marker-info-window.html",[]).run(["$templateCache",function(a){a.put("js/mapvis/marker-info-window.html",'<div class="map-vis-marker-info-window" ng-if="markerModel">\n    <div class="station-info" ng-if="markerModel.station">\n        <h3>{{markerModel.station.site_name}}</h3>\n        <ul class="list-unstyled">\n            <li ng-if="markerModel.station.group_name"><label>Group:</label> {{markerModel.station.group_name}}</li>\n            <li><label>Latitude:</label> {{markerModel.station.latitude}} <label>Longitude:</label> {{markerModel.station.longitude}}</li>\n            <li ng-if="markerModel.gridded_legend_data"><label>Gridded Layer Value:</label> <div class="legend-cell" style="background-color: {{markerModel.gridded_legend_data.color}};">&nbsp;</div> {{markerModel.gridded_legend_data.point | number:0}} ({{legend.formatPointData(markerModel.gridded_legend_data.point)}})</li>\n        </ul>\n    </div>\n    <div class="gridded-data" ng-if="markerModel.gridded_legend_data">\n    </div>\n    <div ng-repeat="md in markerModel.data" ng-init="tag = speciesSelections[$index];" ng-if="md.record">\n        <h4><span>{{tag.species | speciesTitle}}, {{tag.phenophase.phenophase_name}}, {{tag.year}} </span>\n                <svg id="map-vis-iw-marker-{{$index}}" uib-tooltip="{{md.legend_data.label}}" tooltip-append-to-body="true" tooltip-placement="top"></svg></h4>\n        <ul class="list-unstyled">\n            <li><label>Observed Day of Onset:</label> {{md.record.mean_first_yes_doy | number:0}} ({{legend.formatPointData(md.record.mean_first_yes_doy)}})<span ng-if="md.record && md.record.sd_first_yes_in_days > 0"> [Standard Deviation: {{md.record.sd_first_yes_in_days | number:1}}]</span></li>\n        </ul>\n    </div>\n</div>\n')}]),angular.module("js/scatter/scatter.html",[]).run(["$templateCache",function(a){a.put("js/scatter/scatter.html",'<vis-dialog title="Scatter Plot" modal="modal">\n<form class="form-inline plot-criteria-form">\n    <div class="form-group">\n        <label for="speciesInput">Select up to three species phenophase combinations</label>\n        <select name="speciesInput" class="form-control" ng-model="selection.species" ng-options="(o|speciesTitle) for o in speciesList"></select>\n        <select name="phenophaseInput" class="form-control" ng-model="selection.phenophase" ng-options="o.phenophase_name for o in phenophaseList"></select>\n        <div class="btn-group" uib-dropdown is-open="selection.color_isopen">\n          <button type="button" class="btn btn-default dropdown-toggle" uib-dropdown-toggle style="background-color: {{colorRange[selection.color]}};">\n            &nbsp; <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu" role="menu">\n            <li ng-repeat="i in colors track by $index" style="background-color: {{colorRange[$index]}};"><a href ng-click="selection.color=$index;">&nbsp;</a></li>\n          </ul>\n        </div>\n    </div>\n    <button class="btn btn-default" ng-click="addToPlot()" ng-disabled="!canAddToPlot()"><i class="fa fa-plus"></i></button>\n</form>\n\n<div class="panel panel-default main-vis-panel" >\n    <div class="panel-body">\n        <center>\n        <ul class="to-plot list-inline animated-show-hide" ng-if="toPlot.length">\n            <li class="criteria" ng-repeat="tp in toPlot">{{tp|speciesTitle}}/{{tp.phenophase_name}} <i style="color: {{colorRange[tp.color]}};" class="fa fa-circle"></i>\n                <a href ng-click="removeFromPlot($index)"><i class="fa fa-times-circle-o"></i></a>\n            </li>\n            <li>\n                <select class="form-control vis-axis" ng-model="selection.axis" ng-options="o as o.label for o in axis"></select>\n            </li>\n            <li>\n                <label for="fitLinesInput">Fit Line{{toPlot.length > 1 ? \'s\' : \'\'}}</label>\n                <input type="checkbox" id="fitLinesInput" ng-model="selection.regressionLines" />\n            </li>\n            <li>\n                <label for="individualPhenometrics">Use Individual Phenometrics</label>\n                <input type="checkbox" id="individualPhenometrics" ng-model="selection.useIndividualPhenometrics" />\n            </li>\n            <li ng-if="!data"><button class="btn btn-primary" ng-click="visualize()">Visualize</button></li>\n        </ul>\n        <div id="vis-container">\n            <div id="vis-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>\n            <div class="chart-container">\n                <vis-download ng-if="data"\n                              selector=".chart"\n                              filename="npn-scatter-plot.png"></vis-download>\n                <div><svg class="chart"></svg></div>\n            </div>\n            <div ng-if="filteredDisclaimer" class="filter-disclaimer">For quality assurance purposes, only onset dates that are preceded by negative records are included in the visualization.</div>\n        </div>\n        </center>\n    </div>\n</div>\n<!--pre ng-if="record">{{record | json}}</pre-->\n\n</vis-dialog>\n')}]),angular.module("js/settings/settingsControl.html",[]).run(["$templateCache",function(a){a.put("js/settings/settingsControl.html",'<ul class="list-unstyled">\n    <li>\n        <Label for="clusterMarkersSetting">Cluster Markers</label>\n        <ul class="list-unstyled">\n            <li ng-repeat="option in [true,false]">\n                <input type="radio" id="clusterMarkers{{option}}" ng-model="settings.clusterMarkers.value"\n                       ng-value="{{option}}" /> <label for="clusterMarkers{{option}}">{{option | yesNo}}</label>\n            </li>\n        </ul>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <label>Variable Displayed</label>\n        <ul class="list-unstyled">\n            <li ng-repeat="option in settings.tagBadgeFormat.options">\n                <input type="radio"\n                       id="{{option.value}}" ng-model="settings.tagBadgeFormat.value"\n                       value="{{option.value}}"> <label for="{{option.value}}">{{option.label}}</label>\n            </li>\n        </ul>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <Label for="onlyYesData">Only Show Yes Data</label>\n        <ul class="list-unstyled">\n            <li ng-repeat="option in [true,false]">\n                <input type="radio" name="onlyYesData" id="onlyYesData{{option}}" ng-model="settings.onlyYesData.value"\n                       ng-value="{{option}}" /> <label for="onlyYesData{{option}}">{{option | yesNo}}</label>\n            </li>\n        </ul>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <label>Species Tag Title</label>\n        <ul class="list-unstyled">\n            <li ng-repeat="option in settings.tagSpeciesTitle.options">\n                <input type="radio"\n                       id="{{option.value}}" ng-model="settings.tagSpeciesTitle.value"\n                       value="{{option.value}}"> <label for="{{option.value}}">{{option.label}}</label>\n            </li>\n        </ul>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <label for="excludeLqd">Exclude less precise data from visualizations</label>\n        <ul class="list-unstyled">\n            <li ng-repeat="option in [true,false]">\n                <input type="radio" id="filterLqdSummary{{option}}" ng-model="settings.filterLqdSummary.value"\n                       ng-value="{{option}}" /> <label for="filterLqdSummary{{option}}">{{option | yesNo}}</label>\n            </li>\n        </ul>\n        <p>Selecting <strong>Yes</strong> will exclude data points which lack a "no" record preceding the first "yes" record from certain visualizations. </p>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <label for="dataPrecisionFilter">Data Precision Filter</label>\n        <select class="form-control" ng-model="settings.dataPrecisionFilter.value"\n            ng-options="days as days+\' days\' for days in settings.dataPrecisionFilter.options" />\n        <p style="margin: 15px 0px;">Less precise data is removed from the scatter plot and map visualizations by only plotting data points preceded or followed by a “no” within 30 days. This filter can be adjusted here to  7, 14, or 30 days.</p>\n    </li>\n</ul>\n')}]),angular.module("js/time/time.html",[]).run(["$templateCache",function(a){a.put("js/time/time.html",'<vis-dialog title="Time Series" modal="modal">\n    <div class="controls">\n        <div class="threshold">\n            <label>AGDD Threshold</label>\n            <rzslider rz-slider-model="selection.threshold.value" rz-slider-options="selection.threshold.options"></rzslider>\n        </div>\n        <div class="days-of-the-year">\n            <label>Show days of the year</label>\n            <rzslider rz-slider-model="selection.doys.value" rz-slider-options="selection.doys.options"></rzslider>\n        </div>\n        <div class="checkbox" ng-if="selection.lastYearValid">\n            <label ng-disabled="working">\n              <input type="checkbox" ng-model="selection.showLastYear"> Show previous year’s data\n            </label>\n        </div>\n    </div>\n    <div class="panel panel-default main-vis-panel" >\n        <div class="panel-body">\n            <center>\n            <div id="vis-container">\n                <div id="vis-working" ng-show="working"><i class="fa fa-circle-o-notch fa-spin fa-5x"></i></div>\n                <div class="chart-container">\n                    <vis-download ng-if="!working"\n                                  selector=".chart"\n                                  filename="time-series.png"></vis-download>\n                    <div><svg class="chart"></svg></div>\n                </div>\n            </div>\n            </center>\n        </div>\n    </div>\n</vis-dialog>\n')}]),angular.module("js/toolbar/tool.html",[]).run(["$templateCache",function(a){a.put("js/toolbar/tool.html",'<div class="tool-content {{title.toLowerCase()}}" ng-show="selected">\n    <h2>{{title}}</h2>\n    <div ng-transclude>\n    </div>\n</div>')}]),angular.module("js/toolbar/toolbar.html",[]).run(["$templateCache",function(a){a.put("js/toolbar/toolbar.html",'<div class="toolbar">\n  <ul class="tools-list">\n    <li ng-repeat="t in tools" ng-class="{open: t.selected}"\n        popover-placement="right" uib-popover="{{(t.selected) ? \'Click to Collapse Menu\' : t.title}}" popover-trigger="mouseenter" popover-popup-delay="1000" popover-append-to-body="true"\n        ng-click="select(t)">\n      <i id="toolbar-icon-{{t.id}}" class="toolbar-icon fa {{t.icon}}"></i>\n    </li>\n  </ul>\n  <div class="toolbar-content" ng-class="{open: open}" ng-transclude></div>\n</div>')}]),angular.module("js/vis/visControl.html",[]).run(["$templateCache",function(a){a.put("js/vis/visControl.html",'<p class="empty-filter-notes" ng-if="isFilterEmpty()">\n    Before using a visualization you must create and execute a filter.\n    Visualizations use the species, and sometimes, date ranges you\'ve identified\n    in your filter as the basis for what you want to visualize.\n</p>\n<ul class="list-unstyled">\n    <li ng-repeat="vis in visualizations">\n        <a href ng-click="open(vis)" ng-class="{disabled: isFilterEmpty()}">{{vis.title}}</a>\n        <p>{{vis.description}}</p>\n    </li>\n</ul>')}]),angular.module("js/vis/visDialog.html",[]).run(["$templateCache",function(a){a.put("js/vis/visDialog.html",'<div class="modal-header">\n    <a href class="modal-dismiss" ng-click="modal.dismiss()"><i class="fa fa-times-circle-o fa-2x"></i></a>\n    <h3 class="modal-title">{{title}}</h3>\n</div>\n<div class="modal-body vis-dialog {{title | cssClassify}}" ng-transclude>\n</div>')}]),angular.module("js/vis/visDownload.html",[]).run(["$templateCache",function(a){a.put("js/vis/visDownload.html",'<div class="vis-download">\n    <a href ng-click="download()" title="Download"><i class="fa fa-download"></i></a>\n    <canvas id="visDownloadCanvas" style="display: none;"></canvas>\n    <a id="vis-download-link" style="display: none;">download</a>\n</div>')}]),angular.module("npn-viz-tool.vis-scatter",["npn-viz-tool.vis","npn-viz-tool.filter","npn-viz-tool.filters","npn-viz-tool.settings","ui.bootstrap"]).controller("ScatterVisCtrl",["$scope","$uibModalInstance","$timeout","$filter","$log","FilterService","ChartService",function(a,b,c,d,e,f,g){function h(b){return(a.selection.axis.axisFmt||p)(b)}function i(){a.selection.color<a.colors.length?a.selection.color++:a.selection.color=0}function j(){return angular.extend({},a.selection.species,a.selection.phenophase,{color:a.selection.color})}function k(){a.data=q=void 0,angular.forEach(t,function(a){delete a.data})}function l(){var a=d3.select(".chart");a.selectAll(".axis path").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),a.selectAll(".axis line").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),a.selectAll("text").style("font-family","Arial"),a.selectAll(".legend rect").style("fill","white").style("stroke","black").style("opacity","0.8");var b="14px";a.selectAll(".legend text").style("font-size",b).attr("y",function(a,b){return 12*b+b}),a.selectAll("g .x.axis text").style("font-size",b),a.selectAll("g .y.axis text").style("font-size",b);var c=-5,d=14;a.selectAll(".legend circle").attr("r","5").attr("cx","5").attr("cy",function(a,b){return c+b*d})}function m(){function b(b){return b[a.selection.axis.key]}if(q){a.working=!0;var c=1,e=q.filter(function(b){return-9999!=b[a.selection.axis.key]});y.domain([d3.min(e,b)-c,d3.max(e,b)+c]),z.scale(y).tickFormat(d3.format(".2f"));var f=r.selectAll("g .x.axis");f.call(z.tickFormat(h)),f.selectAll(".axis-label").remove(),f.append("text").attr("class","axis-label").attr("x",x.width/2).attr("dy","3em").style("text-anchor","middle").style("font-size","12px").text(a.selection.axis.label);var i=r.selectAll(".circle").data(e,function(a){return a.id});i.exit().remove(),i.enter().append("circle").attr("class","circle").style("stroke","#333").style("stroke-width","1");var j=t[s].dataFunc;i.attr("cx",function(b){return y(b[a.selection.axis.key])}).attr("cy",function(a){return A(j(a))}).attr("r","5").attr("fill",function(a){return a.color}).on("click",function(b){d3.event.defaultPrevented||a.$apply(function(){a.record=b})}).append("title").text(function(a){return C(a.day_in_range)+" ["+a.latitude+","+a.longitude+"]"});var k=[],m=d3.format(".2f");angular.forEach(a.toPlot,function(b){var c=a.colorRange[b.color],f=e.filter(function(a){return a.color===c});if(f.length>0){var h=f.sort(function(b,c){return b[a.selection.axis.key]-c[a.selection.axis.key]}),i=h.map(function(b){return b[a.selection.axis.key]}).filter(angular.isNumber),l=h.map(j).filter(angular.isNumber),n=g.leastSquares(i,l),o=i[0],p=g.approxY(n,o),q=i[i.length-1],r=g.approxY(n,q);k.push({id:b.species_id+"."+b.phenophase_id,legend:d("speciesTitle")(b)+"/"+b.phenophase_name+(a.selection.regressionLines&&!isNaN(n[2])?" (R^2 = "+m(n[2])+")":""),color:c,p1:[o,p],p2:[q,r]})}});var n=r.selectAll(".regression").data(k,function(a){return a.id});n.exit().remove(),n.enter().append("line").attr("class","regression"),n.attr("data-legend",function(a){return a.legend}).attr("data-legend-color",function(a){return a.color}).attr("x1",function(a){return y(a.p1[0])}).attr("y1",function(a){return A(a.p1[1])}).attr("x2",function(a){return y(a.p2[0])}).attr("y2",function(a){return A(a.p2[1])}).attr("stroke",function(a){return a.color}).attr("stroke-width",a.selection.regressionLines?2:0),r.select(".legend").remove();r.append("g").attr("class","legend").attr("transform","translate(30,-45)").style("font-size","1em").call(d3.legend);a.selection.regressionLines&&r.selectAll(".legend text").html(function(a){return a.key.replace("R^2",'R<tspan style="baseline-shift: super; font-size: 8px;">2</tspan>')}),l(),a.working=!1}}function n(b){return function(){function c(b,c){a.data=q=b.filter(function(b,c){var e=!0;return b.color=a.colorRange[l[b.species_id+"."+b.phenophase_id]],b.color?(b.id=c,b.fyy=h(b),angular.forEach({daylength:"mean_daylength",acc_prcp:"mean_accum_prcp",gdd:"mean_gdd"},function(a,c){"undefined"==typeof b[c]&&(b[c]=b[a])}),b.day_in_range=365*(b.fyy-v)+d(b)):e=!1,e}),a.data=t[s].data=q,a.filteredDisclaimer=c,e.debug("scatterPlot data",q),m()}if(s=b,q=t[s].data)return m();var d=t[s].dataFunc,h=t[s].firstYesYearFunc;a.working=!0,e.debug("visualize",a.selection.axis,a.toPlot);var i=f.getFilter().getDateArg(),j={climate_data:1,request_src:"npn-vis-scatter-plot",start_date:i.getStartDate(),end_date:i.getEndDate()},k=0,l={};angular.forEach(a.toPlot,function(a){l[a.species_id+"."+a.phenophase_id]=a.color,j["species_id["+k+"]"]=a.species_id,j["phenophase_id["+k++ +"]"]=a.phenophase_id}),g[b](j,c)}}a.modal=b;var o=f.getColorScale();a.colors=o.domain(),a.colorRange=o.range(),a.axis=[{key:"latitude",label:"Latitude",axisFmt:d3.format(".2f")},{key:"longitude",label:"Longitude",axisFmt:d3.format(".2f")},{key:"elevation_in_meters",label:"Elevation (m)"},{key:"fyy",label:"Year"},{key:"prcp_fall",label:"Precip Fall (mm)"},{key:"prcp_spring",label:"Precip Spring (mm)"},{key:"prcp_summer",label:"Precip Summer (mm)"},{key:"prcp_winter",label:"Precip Winter (mm)"},{key:"tmax_fall",label:"Tmax Fall (C°)"},{key:"tmax_spring",label:"Tmax Spring (C°)"},{key:"tmax_summer",label:"Tmax Summer (C°)"},{key:"tmax_winter",label:"Tmax Winter (C°)"},{key:"tmin_fall",label:"Tmin Fall (C°)"},{key:"tmin_spring",label:"Tmin Spring (C°)"},{key:"tmin_summer",label:"Tmin Summer (C°)"},{key:"tmin_winter",label:"Tmin Winter (C°)"},{key:"daylength",label:"Day Length (s)"},{key:"acc_prcp",label:"Accumulated Precip (mm)"},{key:"gdd",label:"AGDD"}];var p=d3.format("d");a.selection={color:0,axis:a.axis[0],regressionLines:!1,useIndividualPhenometrics:!1},a.$watch("selection.regressionLines",function(a,b){a!==b&&m()}),a.$watch("selection.axis",function(a,b){a!==b&&m()}),a.toPlot=[],f.getFilter().getSpeciesList().then(function(b){e.debug("speciesList",b),a.speciesList=b,b.length&&(a.selection.species=b[0])}),a.$watch("selection.species",function(){a.phenophaseList=[],a.selection.species&&f.getFilter().getPhenophasesForSpecies(a.selection.species.species_id).then(function(b){e.debug("phenophaseList",b),a.phenophaseList=b,b.length&&(a.selection.phenophase=b[0])})}),a.canAddToPlot=function(){if(3===a.toPlot.length||!a.selection.species||!a.selection.phenophase)return!1;if(0===a.toPlot.length)return!0;var b,c=j();for(b=0;b<a.toPlot.length;b++)if(angular.equals(a.toPlot[b],c))return!1;for(b=0;b<a.toPlot.length;b++)if(c.color===a.toPlot[b].color)return!1;return!0},a.addToPlot=function(){a.canAddToPlot()&&(a.toPlot.push(j()),i(),k())},a.removeFromPlot=function(b){a.toPlot.splice(b,1),k()};var q,r,s="getSiteLevelData",t={getSiteLevelData:{dataFunc:function(a){return a.mean_first_yes_doy},firstYesYearFunc:function(a){return a.mean_first_yes_year}},getSummarizedData:{dataFunc:function(a){return a.first_yes_doy},firstYesYearFunc:function(a){return a.first_yes_year}}},u=f.getFilter().getDateArg(),v=u.arg.start_date,w=new Date(v,0),x=(u.arg.end_date,g.getSizeInfo({top:80,left:60})),y=d3.scale.linear().range([0,x.width]).domain([0,100]),z=d3.svg.axis().scale(y).orient("bottom").tickFormat(h),A=d3.scale.linear().range([x.height,0]).domain([1,365]),B=d3.time.format("%x"),C=function(a){var b=(a-1)*g.ONE_DAY_MILLIS+w.getTime(),c=new Date(b);return B(c)},D=d3.svg.axis().scale(A).orient("left");c(function(){var a=d3.select(".chart").attr("width",x.width+x.margin.left+x.margin.right).attr("height",x.height+x.margin.top+x.margin.bottom);a.append("g").append("rect").attr("width","100%").attr("height","100%").attr("fill","#fff"),r=a.append("g").attr("transform","translate("+x.margin.left+","+x.margin.top+")");var b=f.getFilter().getDateArg();r.append("g").attr("class","chart-title").append("text").attr("y","0").attr("dy","-3em").attr("x",x.width/2).style("text-anchor","middle").style("font-size","18px").text(b.getStartYear()+" - "+b.getEndYear()),r.append("g").attr("class","x axis").attr("transform","translate(0,"+x.height+")").call(z),r.append("g").attr("class","y axis").call(D).append("text").attr("transform","rotate(-90)").attr("y","0").attr("dy","-3em").attr("x",-1*(x.height/2)).style("text-anchor","middle").text("Onset DOY"),a.append("g").append("text").attr("dx",5).attr("dy",x.height+136).attr("font-size","11px").attr("font-style","italic").attr("text-anchor","right").text("USA National Phenology Network, www.usanpn.org"),l()},500);var E=n("getSiteLevelData"),F=n("getSummarizedData");a.$watch("selection.useIndividualPhenometrics",function(b){delete a.data,a.visualize=b?F:E})}]),angular.module("npn-viz-tool.settings",["npn-viz-tool.filters"]).factory("SettingsService",[function(){var a={clusterMarkers:{name:"cluster-markers",q:"cm",value:!0},tagSpeciesTitle:{name:"tag-species-title",q:"tst",value:"common-name",options:[{value:"common-name",q:"cn",label:"Common Name"},{value:"scientific-name",q:"sn",label:"Scientific Name"}]},tagBadgeFormat:{name:"tag-badge-format",q:"tbf",value:"observation-count",options:[{value:"observation-count",q:"oc",label:"Record Count"},{value:"station-count",q:"sc",label:"Site Count"}]},filterLqdSummary:{name:"filter-lqd-summary",q:"flqdf",value:!0},onlyYesData:{name:"only-yes-data",q:"oyd",value:!1},dataPrecisionFilter:{name:"filter-data-precision",q:"fdp",value:30,options:[7,14,30]}};return{getSettings:function(){return a},getSetting:function(b){return a[b]},getSettingValue:function(b){return a[b].value},getSettingValueLabel:function(b){var c,d=a[b],e=d.value;for(c=0;d.options&&c<d.options.length;c++)if(d.options[c].value===e)return d.options[c].label},getSharingUrlArgs:function(){var b,c,d,e="";for(b in a)if(c=a[b],e+=(""!==e?";":"")+c.q+"=",c.options){for(d=0;d<c.options.length;d++)if(c.value===c.options[d].value){e+=c.options[d].q;break}}else e+=c.value;return"ss="+encodeURIComponent(e)},populateFromSharingUrlArgs:function(b){b&&b.split(";").forEach(function(b){var c,d,e=b.split("="),f=e[0],g=e[1];for(c in a)if(a[c].q===f){if(a[c].options){for(d=0;d<a[c].options.length;d++)if(a[c].options[d].q===g){a[c].value=a[c].options[d].value;break}}else a[c].value="true"===g||"false"===g?"true"===g:g;break}})}}}]).directive("settingsControl",["$rootScope","$location","$log","SettingsService",function(a,b,c,d){return{restrict:"E",templateUrl:"js/settings/settingsControl.html",controller:function(e){function f(b){c.debug("broadcastSettingChange",e.settings[b]),a.$broadcast("setting-update-"+b,e.settings[b])}function g(a){e.$watch("settings."+a+".value",function(b,c){f(a)})}d.populateFromSharingUrlArgs(b.search().ss),e.settings=d.getSettings();for(var h in e.settings)g(h)}}}]),angular.module("npn-viz-tool.share",["npn-viz-tool.filter","npn-viz-tool.layers","npn-viz-tool.gridded","npn-viz-tool.settings","uiGmapgoogle-maps"]).directive("shareControl",["uiGmapIsReady","FilterService","LayerService","DateFilterArg","SpeciesFilterArg","NetworkFilterArg","GeoFilterArg","BoundsFilterArg","$location","$log","SettingsService","GriddedControlService",function(a,b,c,d,e,f,g,h,i,j,k,l){return{restrict:"E",template:'<a title="Share" href id="share-control" class="btn btn-default btn-xs" ng-disabled="!getFilter().hasSufficientCriteria() && !gridSelected()" ng-click="share()"><i class="fa fa-share"></i></a><div ng-show="url" id="share-content"><input type="text" class="form-control" ng-model="url" ng-blur="url = null" onClick="this.setSelectionRange(0, this.value.length)"/></div>',scope:{},controller:function(c){b.pause(),a.promise(1).then(function(a){function g(){v&&s===r&&t===u&&(j.debug("ready.."),m(),n(),o(),b.resume())}function k(a){e.fromString(a).then(b.addToFilter)}function l(a){f.fromString(a).then(b.addToFilter)}var m,n,o,p=a[0],q=i.search(),r=0,s=0,t=0,u=0,v=!1;if(m=c.$on("layers-ready",function(a,b){j.debug("layers ready..."),v=!0,g()}),n=c.$on("species-filter-ready",function(a,b){j.debug("species filter ready...",b),s++,g()}),o=c.$on("network-filter-ready",function(a,b){j.debug("network filter ready...",b),u++,g()}),j.debug("qargs",q),q.d&&(q.s||q.n)){if(b.addToFilter(d.fromString(q.d)),q.b&&q.b.split(";").forEach(function(a){b.addToFilter(h.fromString(a,p.map))}),q.s){var w=q.s.split(";");r=w.length,w.forEach(k)}if(q.n){var x=q.n.split(";");t=x.length,x.forEach(l)}}else b.resume()}),c.gridSelected=function(){return l.layer},c.getFilter=b.getFilter,c.share=function(){if(c.url)return void(c.url=null);var a={},d=i.absUrl(),e=d.indexOf("?");if(!b.isFilterEmpty()){var f=b.getFilter();a.d=f.getDateArg().toString(),f.getSpeciesArgs().forEach(function(b){a.s?a.s+=";"+b.toString():a.s=b.toString()}),f.getNetworkArgs().forEach(function(b){a.n?a.n+=";"+b.toString():a.n=b.toString()}),f.getGeoArgs().forEach(function(b){a.g?a.g+=";"+b.toString():a.g=b.toString()}),f.getBoundsArgs().forEach(function(b){a.b?a.b+=";"+b.toString():a.b=b.toString()})}l.addSharingUrlArgs(a),-1!=e&&(d=d.substring(0,e)),d+=-1===d.indexOf("#")?"#?":"?",Object.keys(a).forEach(function(b,c){d+=(c>0?"&":"")+b+"="+encodeURIComponent(a[b])}),d+="&"+k.getSharingUrlArgs(),j.debug("absUrl",d),c.url=d}}}}]),angular.module("npn-viz-tool.stations",["npn-viz-tool.filter","npn-viz-tool.vis-cache","npn-viz-tool.cluster","npn-viz-tool.settings","npn-viz-tool.layers","npn-viz-tool.vis"]).factory("StationService",["$rootScope","$http","$log","$url","FilterService","ChartService",function(a,b,c,d,e,f){var g,h={click:function(h){c.debug("click",h),g&&(g.close(),g=void 0),c.debug("Fetching info for station "+h.model.station_id),b.get(d("/npn_portal/stations/getStationDetails.json"),{params:{ids:h.model.station_id}}).success(function(b){function d(a,b){return b&&""!==b?"<li><label>"+a+":</label> "+b+"</li>":""}if(b&&1===b.length){var i=b[0],j='<div class="station-details">';c.debug(i),j+='<ul class="list-unstyled">',j+=d("Site Name",i.site_name),j+=d("Group",i.group_name),h.model.observationCount?j+=d("Records",h.model.observationCount):(j+=d("Individuals",i.num_individuals),j+=d("Records",i.num_records)),j+="</ul>",h.model.speciesInfo&&(j+="<label>Species Observed</label>",j+='<ul class="list-unstyled">',Object.keys(h.model.speciesInfo.titles).forEach(function(a){var b=e.getChoroplethScale(a),c=h.model.speciesInfo.counts[a];j+='<li><div class="choropleth-swatch" style="background-color: '+b(c)+';"></div>'+h.model.speciesInfo.titles[a]+" ("+c+")</li>"}),j+="</ul>"),j+="</div>";var k=$.parseHTML(j)[0];if(!e.isFilterEmpty()){f.getVisualizations();j="<div>",j+="<label>Visualize Site Data</label>",j+='<ul class="list-unstyled">',f.getVisualizations().forEach(function(a){("undefined"==typeof a.singleStation||a.singleStation)&&(j+="<li>",j+='<a id="'+a.controller+'" href="#">'+a.title+"</a>",j+="</li>")}),j+="</ul></div>";var l=$.parseHTML(j)[0];$(k).append(l),f.getVisualizations().forEach(function(b){var c=$(k).find("#"+b.controller);c.click(function(){a.$apply(function(){f.openSingleStationVisualization(h.model.station_id,b);
})})})}g=new google.maps.InfoWindow({maxWidth:500,content:k}),g.open(h.map,h)}})}},i={getMarkerEvents:function(){return h}};return i}]).directive("npnStations",["$http","$log","$timeout","$url","LayerService","SettingsService","StationService","ClusterService","CacheService",function(a,b,c,d,e,f,g,h,i){return{restrict:"E",template:'<ui-gmap-markers models="regions.markers" idKey="\'name\'" coords="\'self\'" icon="\'icon\'" options="\'markerOpts\'" isLabel="true"></ui-gmap-markers><ui-gmap-markers models="stations.markers" idKey="\'station_id\'" coords="\'self\'" icon="\'icon\'" options="\'markerOpts\'" doCluster="doCluster" events="markerEvents" clusterOptions="clusterOptions"></ui-gmap-markers>',scope:{},controller:["$scope",function(j){function k(f){var g=f.reduce(function(a,b){return a[b.state]=b,b.number_stations=parseInt(b.number_stations),a.$min=Math.min(a.$min,b.number_stations),a.$max=Math.max(a.$max,b.number_stations),a},{$max:0,$min:0}),h=d3.scale.linear().domain([g.$min,g.$max]).range(["#F7FBFF","#08306B"]);e.resetLayers().then(function(){e.loadLayer("primary",function(a){var c=a.getProperty("NAME"),d=-1!=j.stations.states.indexOf(c),e=g[c],f={strokeOpacity:1,strokeColor:"#ffffff",strokeWeight:1,fillOpacity:0};if(e&&!d){e.visited=!0,f.fillOpacity=.8,f.fillColor=h(e.number_stations),f.clickable=!0;var i=a.getProperty("CENTER"),k=angular.extend({name:c,icon:{path:google.maps.SymbolPath.CIRCLE,fillColor:"#000",fillOpacity:.5,scale:16,strokeColor:"#ccc",strokeWeight:1},markerOpts:{title:c+" ("+e.number_stations+" Sites)",labelClass:"station-count",labelContent:""+e.number_stations}},i);e.number_stations<10?(k.icon.scale=8,k.markerOpts.labelAnchor="4 8"):e.number_stations<100?(k.icon.scale=12,k.markerOpts.labelAnchor="8 8"):e.number_stations<1e3?(k.icon.scale=14,k.markerOpts.labelAnchor="10 8"):k.markerOpts.labelAnchor="13 8",j.$apply(function(){j.regions.markers.push(k)})}else d||b.warn("no station count for "+c);return f}).then(function(b){var e=b[0];m.push(e.data.addListener("mouseover",function(a){e.data.overrideStyle(a.feature,{strokeWeight:3})})),m.push(e.data.addListener("mouseout",function(a){e.data.revertStyle()})),m.push(e.data.addListener("click",function(b){var f=b.feature.getProperty("NAME");-1===j.stations.states.indexOf(f)&&(j.regions.markers=j.regions.markers.filter(function(a){return a.name!==f}),j.stations.states.push(f),c(function(){e.data.remove(b.feature),e.panTo(b.latLng);var g=0;6!=e.getZoom()&&(e.setZoom(6),g=500),c(function(){a.get(d("/npn_portal/stations/getAllStations.json"),{params:{state_code:f}}).success(function(a){a.forEach(function(a){a.markerOpts={title:a.station_name,icon:{path:google.maps.SymbolPath.CIRCLE,fillColor:"#e6550d",fillOpacity:1,scale:8,strokeColor:"#204d74",strokeWeight:1}}});var b,c=j.stations.markers.concat(a),d=c.length>512?Math.round(c.length/2):512;for(b=l.styles.length-1;b>=0;b--)l.styles[b].n=d,d=Math.round(d/2);j.stations.markers=c})},g)},500))}))})})}j.doCluster=f.getSettingValue("clusterMarkers"),j.$on("setting-update-clusterMarkers",function(a,b){j.doCluster=b.value});var l=h.getDefaultClusterOptions();j.clusterOptions=angular.extend(l,{calculator:function(a,b){for(var c={text:a.length,index:1},d=0;d<l.styles.length;d++)a.length>=l.styles[d].n&&(c.index=d+1);return c}}),j.regions={markers:[]},j.stations={states:[],markers:[]},j.markerEvents=g.getMarkerEvents();var m=[],n=i.get("stations-counts-by-state");n?k(n):a.get(d("/npn_portal/stations/getStationCountByState.json")).success(function(a){i.put("stations-counts-by-state",a),k(a)}),j.$on("$destroy",function(){e.resetLayers(),m.forEach(function(a){a.remove()})})}]}}]),angular.module("npn-viz-tool.vis-time",["npn-viz-tool.vis","npn-viz-tool.filter","npn-viz-tool.filters","npn-viz-tool.settings","ui.bootstrap"]).controller("TimeSeriesVisCtrl",["$scope","$uibModalInstance","$log","$filter","$http","$url","$q","$timeout","layer","legend","latLng","ChartService",function(a,b,c,d,e,f,g,h,i,j,k,l){function m(a,b){W[a]=b,W[a].doyMap=W[a].data.reduce(function(a,b){return a[U(b)]=T(b),a},{})}function n(){H.selectAll(".axis path").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),H.selectAll(".axis line").style("fill","none").style("stroke","#000").style("shape-rendering","crispEdges"),H.selectAll("text").style("font-family","Arial");var a="16px";H.selectAll("g .x.axis text").style("font-size",a),H.selectAll("g .y.axis text").style("font-size",a)}function o(){H.select(".legend").remove();var a=H.append("g").attr("class","legend").attr("transform","translate(30,-45)").style("font-size","1em"),b=a.append("rect").style("fill","white").style("stroke","black").style("opacity","0.8").attr("width",130).attr("height",60),c=14,d=5,e=4,f=["average","selected","forecast","previous"],g=f.reduce(function(b,f,g){var h;return W[f]&&W[f].plotted&&(W[f].filtered||W[f].data).length&&(h=a.append("g").attr("class","legend-item "+f).attr("transform","translate(10,"+((b+1)*c+b*e)+")"),h.append("circle").attr("r",d).attr("fill",W[f].color),h.append("text").style("font-size",c+"px").attr("x",2*d).attr("y",d/2).text(W[f].year||"30-year Average"),b++),b},0);3>g?b.attr("height",45):g>3&&b.attr("height",80)}function p(a){W[a]&&(H.selectAll("path.gdd."+a).remove(),delete W[a].plotted,o())}function q(a){W[a]&&(H.append("path").attr("class","gdd "+a).attr("fill","none").attr("stroke",W[a].color).attr("stroke-linejoin","round").attr("stroke-linecap","round").attr("stroke-width",1.5).attr("d",V(W[a].filtered||W[a].data)),W[a].plotted=!0,o())}function r(){var b=R(a.selection.threshold.value);I.attr("y1",b).attr("y2",b)}function s(){var b,c=Object.keys(W);c.length&&(b=c.reduce(function(a,b){return a.push(d3.max(W[b].filtered||W[b].data,T)),a},[]),a.selection.threshold.options.ceil=Math.round(Q=d3.max(b)),a.selection.threshold.value>a.selection.threshold.options.ceil&&(a.selection.threshold.value=a.selection.threshold.options.ceil),Q=1.05*Q,S.scale(R.domain([0,Q])),r(),P.scale(O.domain([1,a.selection.doys.value])),c.forEach(function(a){W[a].plotted&&(p(a),q(a))})),H.selectAll("g .axis").remove(),H.append("g").attr("class","y axis").call(S).append("text").attr("transform","rotate(-90)").attr("y","0").attr("dy","-3.75em").attr("x",-1*(J.height/2)).style("text-anchor","middle").text("Accumulated Growing Degree Days"),H.append("g").attr("class","x axis").attr("transform","translate(0,"+J.height+")").call(P).append("text").attr("y","0").attr("dy","2.5em").attr("x",J.width/2).style("text-anchor","middle").text("Day of Year"),n()}function t(){var b=a.selection.doys.value;365===b?Object.keys(W).forEach(function(a){delete W[a].filtered}):Object.keys(W).forEach(function(a){W[a].filtered=W[a].data.filter(function(a){return U(a)<=b})}),s()}function u(){a.$watch("selection.threshold.value",r),a.working=!0,g.all({average:e.get(f("/npn_portal/stations/getTimeSeries.json"),{params:E}),selected:e.get(f("/npn_portal/stations/getTimeSeries.json"),{params:F})}).then(function(b){if(C){var d=x(new Date,"yyyy-MM-dd"),e=b.selected.data.reduce(function(a,b){return a.forecast?a.forecast.push(b):(a.selected.push(b),b.date===d&&(a.forecast=[b])),a},{selected:[]});m("selected",{year:B.getFullYear(),color:"blue",data:e.selected}),m("forecast",{year:B.getFullYear()+" forecast",color:"red",data:e.forecast})}else m("selected",{year:B.getFullYear(),color:"blue",data:b.selected.data});m("average",{color:"black",data:b.average.data}),c.debug("draw",W),s(),q("average"),q("selected"),C&&q("forecast"),n(),delete a.working})}a.layer=i,a.legend=j,a.modal=b,a.latLng=k;var v="F",w="yyyy-MM-dd",x=d("date"),y=d("number"),z=(new Date).getFullYear(),A=i.extent.current&&i.extent.current.date?i.extent.current.date.getFullYear():z,B=function(){var a=new Date;return a.setFullYear(A),a.setMonth(0),a.setDate(1),a}(),C=A===z,D=function(){var a=C?new Date(i.extent.values[i.extent.values.length-1].date.getTime()):new Date;return C||(a.setFullYear(A),a.setMonth(11),a.setDate(31)),a}(),E={latitude:k.lat(),longitude:k.lng()},F={layer:i.name,start_date:x(B,w),end_date:x(D,w),latitude:k.lat(),longitude:k.lng()};E.layer="gdd:agdd"===F.layer?"gdd:30yr_avg_agdd":"gdd:30yr_avg_agdd_50f";var G="gdd:agdd"===F.layer?32:50;c.debug("TimeSeries.avg_params",E),c.debug("TimeSeries.params",F);var H,I,J=l.getSizeInfo({top:80,left:80}),K=d3.time.format("%m/%d"),L=function(a){var b=(a-1)*l.ONE_DAY_MILLIS+B.getTime(),c=new Date(b);return K(c)},M=d3.time.format("%b %-d"),N=function(a){var b=(a-1)*l.ONE_DAY_MILLIS+B.getTime(),c=new Date(b);return M(c)},O=d3.scale.linear().range([0,J.width]).domain([1,365]),P=d3.svg.axis().scale(O).orient("bottom").tickFormat(L),Q=2e4,R=d3.scale.linear().range([J.height,0]).domain([0,Q]),S=d3.svg.axis().scale(R).orient("left"),T=function(a){return a.point_value},U=function(a){return a.doy},V=d3.svg.line().x(function(a,b){return O(a.doy)}).y(function(a,b){return R(a.point_value)}).interpolate("basis"),W={};a.selection={lastYearValid:A>2016,showLastYear:!1,threshold:{value:1e3,options:{floor:0,ceil:Q,step:10,translate:function(a){return y(a,0)+v}}},doys:{value:365,options:{floor:1,ceil:365,step:1,translate:function(a){return N(a)+" ("+a+")"}}}},h(function(){function b(){h.style("display","none")}function d(){h.style("display",null)}function e(){var a,b=d3.mouse(this),d=b[0],e=(b[1],Math.round(O.invert(d))),f=Object.keys(W);i.attr("transform","translate("+d+")"),a=f.reduce(function(a,b){var c;return W[b].plotted&&(c=W[b].doyMap[e],"undefined"!=typeof c?(a[b]={year:W[b].year,gdd:c},W[b].focus||(W[b].focus=h.append("circle").attr("r",4.5).attr("fill","none").attr("stroke","steelblue")),W[b].focus.style("display",null).attr("transform","translate("+d+","+R(c)+")")):W[b].focus&&W[b].focus.style("display","none")),a},{}),c.debug("temps for doy "+e,a),p.text(e+" ("+L(e)+")"),Object.keys(r).forEach(function(b){var c,d,f,g,h,i;if(a[b]){if(r[b].style("display",null),t[b].text((a[b].year||"30-year Average")+": "),c=a[b].gdd,w[b].text(y(c,0)+v),x[b]){for(d=c-a.average.gdd,h=" ("+(d>0?"+":"")+y(d,0)+v,i=0;i<W.average.data.length;i++)if(T(W.average.data[i])>c){f=U(W.average.data[i]);break}f>0&&366>f&&(g=f-e,h+="/"+(g>0?"+":"")+g+" days"),h+=")",x[b].attr("class","gdd-diff "+(d>0?"above":"below")).text(h)}}else r[b].style("display","none")})}a.$broadcast("rzSliderForceRender");var f=d3.select(".chart").attr("width",J.width+J.margin.left+J.margin.right).attr("height",J.height+J.margin.top+J.margin.bottom);f.append("g").append("rect").attr("width","100%").attr("height","100%").attr("fill","#fff"),H=f.append("g").attr("transform","translate("+J.margin.left+","+J.margin.top+")");var g=H.append("g").attr("class","chart-title");g.append("text").attr("y","0").attr("dy","-3em").attr("x",J.width/3).style("text-anchor","start").style("font-size","18px").text("Accumulated Growing Degree Days"),g.append("text").attr("y","0").attr("dy","-1.8em").attr("x",J.width/3).style("text-anchor","start").style("font-size","18px").text("(Lat: "+y(k.lat())+", Lon: "+y(k.lng())+") "+G+v+" Base Temp"),s(),f.append("g").append("text").attr("dx",5).attr("dy",J.height+136).attr("font-size","11px").attr("font-style","italic").attr("text-anchor","right").text("USA National Phenology Network, www.usanpn.org"),I=H.append("line").attr("class","threshold").attr("fill","none").attr("stroke","green").attr("stroke-width",1).attr("x1",O(1)).attr("y1",R(Q)).attr("x2",O(365)).attr("y2",R(Q));var h=f.append("g").attr("transform","translate("+J.margin.left+","+J.margin.top+")").style("display","none"),i=h.append("line").attr("class","focus").attr("fill","none").attr("stroke","green").attr("stroke-width",1).attr("x1",O(1)).attr("y1",R(0)).attr("x2",O(1)).attr("y2",R(Q)),j="1.2em",l=15,m=h.append("text").attr("class","gdd-info").attr("font-size",16).attr("y",40),o=m.append("tspan").attr("dy","1em").attr("x",l),p=(o.append("tspan").attr("class","gdd-label").text("DOY: "),o.append("tspan").attr("class","gdd-value")),q=["average","previous","selected","forecast"],r=q.reduce(function(a,b){return a[b]=m.append("tspan").attr("dy",j).attr("x",l),a},{}),t=q.reduce(function(a,b){return a[b]=r[b].append("tspan").attr("class","gdd-label "+b),a},{}),w=q.reduce(function(a,b){return a[b]=r[b].append("tspan").attr("class","gdd-value"),a},{}),x=["previous","forecast","selected"].reduce(function(a,b){return a[b]=r[b].append("tspan").attr("class","gdd-diff"),a},{});f.append("rect").attr("class","overlay").attr("transform","translate("+J.margin.left+","+J.margin.top+")").style("fill","none").style("pointer-events","all").attr("x",0).attr("y",0).attr("width",O(365)).attr("height",R(0)).on("mouseover",d).on("mouseout",b).on("mousemove",e),n(),u()});var X;a.$watch("selection.doys.value",function(a,b){a!==b&&(X&&h.cancel(X),X=h(t,500))}),a.selection.lastYearValid&&a.$watch("selection.showLastYear",function(b){if(b&&!W.previous){a.working=!0;var d,g=new Date(B.getTime()),h=new Date(B.getTime());g.setFullYear(g.getFullYear()-1),h.setFullYear(g.getFullYear()),h.setMonth(11),h.setDate(31),d=angular.extend({},F,{start_date:x(g,w),end_date:x(h,w)}),c.debug("previous_params",d),e.get(f("/npn_portal/stations/getTimeSeries.json"),{params:d}).then(function(b){m("previous",{year:g.getFullYear(),color:"orange",data:b.data}),t(),s(),n(),q("previous"),delete a.working})}else W.previous&&(b?q("previous"):p("previous"))})}]).provider("$timeSeriesVis",[function(){this.$get=["ChartService",function(a){return function(b,c,d){a.openVisualization({title:"Time Series",noFilterRequired:!0,template:"js/time/time.html",controller:"TimeSeriesVisCtrl"},{layer:function(){return b},legend:function(){return c},latLng:function(){return d}})}}]}]),angular.module("npn-viz-tool.toolbar",["npn-viz-tool.help"]).directive("toolbar",["$rootScope","$timeout","HelpService",function(a,b,c){return{restrict:"E",templateUrl:"js/toolbar/toolbar.html",transclude:!0,scope:{},controller:function(d){function e(c){a.$broadcast("tool-"+(c.selected?"open":"close"),{tool:c}),c.selected&&b(function(){a.$broadcast("rzSliderForceRender")},500)}var f=d.tools=[];d.select=function(a){a.selected=!a.selected,d.open=a.selected,c.stopLookingAtMe("#toolbar-icon-"+a.id),e(a)},this.addTool=function(a){f.push(a)},this.closeTool=function(a){d.open=a.selected=!1,e(a)}}}}]).directive("tool",[function(){return{restrict:"E",require:"^toolbar",templateUrl:"js/toolbar/tool.html",transclude:!0,scope:{id:"@",title:"@",icon:"@"},link:function(a,b,c,d){d.addTool(a),a.close=function(){d.closeTool(a)}}}}]),angular.module("npn-viz-tool.vis",["npn-viz-tool.filter","npn-viz-tool.filters","npn-viz-tool.vis-scatter","npn-viz-tool.vis-calendar","npn-viz-tool.vis-map","npn-viz-tool.vis-time","npn-viz-tool.vis-activity","ui.bootstrap"]).factory("ChartService",["$window","$http","$log","$uibModal","$url","FilterService","SettingsService","Analytics",function(a,b,c,d,e,f,g,h){function i(a){var b=0===a.latitude||0===a.longitude||a.elevation_in_meters<0;return b&&c.warn("suspect station data",a),!b}function j(a){var b=a.numdays_since_prior_no>=0;return b||c.debug("filtering less precise data from summary output",a),b}function k(a){var b=a.mean_numdays_since_prior_no>=0;return b||c.debug("filtering less precise data from site level output",a),b}function l(a){if(o)a["station_id[0]"]=o;else{var b=f.getFilter();b.getGeographicArgs().length&&f.getFilteredMarkers().forEach(function(b,c){a["station_id["+c+"]"]=b.station_id}),b.getNetworkArgs().forEach(function(b,c){a["network["+c+"]"]=b.getName(),a["network_id["+c+"]"]=b.getId()})}return a}function m(a){var b,c=[];for(b in a)c.push(encodeURIComponent(b)+"="+encodeURIComponent(a[b]));return c.join("&")}function n(a){o=a}var o,p=930,q=500,r={top:20,right:30,bottom:60,left:40},s=(p-r.left-r.right,q-r.top-r.bottom,[{title:"Scatter Plots",controller:"ScatterVisCtrl",template:"js/scatter/scatter.html",description:"This visualization plots selected geographic or climactic variables against estimated onset dates for individuals for up to three species/phenophase pairs."},{title:"Calendars",controller:"CalendarVisCtrl",template:"js/calendar/calendar.html",description:"This visualization illustrates annual timing of phenophase activity for selected species/phenophase pairs. Horizontal bars represent phenological activity at a site to regional level for up to two years."},{title:"Maps",controller:"MapVisCtrl",template:"js/mapvis/mapvis.html",description:"This visualization maps ground-based observations against USA-NPN phenology maps, including Accumulated Growing Degree Days and Spring Index models.",singleStation:!1},{title:"Activity Curves",controller:"ActivityCurvesVisCtrl",template:"js/activity/activity.html",description:"TODO"}]),t={ONE_DAY_MILLIS:864e5,getSizeInfo:function(b){var d=angular.extend({},r,b),e=Math.round(.9*a.innerWidth),f=Math.round(.5376*e),g=e-d.left-d.right,h=f-d.top-d.bottom,i={width:g,height:h,margin:d};return c.debug("sizing",i),i},leastSquares:function(a,b){if(0===a.length||0===b.length)return[Number.NaN,Number.NaN,Number.NaN];var c=function(a,b){return a+b},d=1*a.reduce(c)/a.length,e=1*b.reduce(c)/b.length,f=a.map(function(a){return Math.pow(a-d,2)}).reduce(c),g=b.map(function(a){return Math.pow(a-e,2)}).reduce(c),h=a.map(function(a,c){return(a-d)*(b[c]-e)}).reduce(c),i=h/f,j=e-d*i,k=Math.pow(h,2)/(f*g);return[i,j,k]},approxY:function(a,b){var c=a[1],d=a[0];return c+d*b},getMagnitudeData:function(a,c){b({method:"POST",url:e("/npn_portal/observations/getMagnitudeData.json"),headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:m,data:l(a)}).success(function(a){c(a)})},getSiteLevelData:function(a,d){a.num_days_quality_filter=g.getSettingValue("dataPrecisionFilter"),b({method:"POST",url:e("/npn_portal/observations/getSiteLevelData.json"),headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:m,data:l(a)}).success(function(a){var b=a.filter(i),e=b.filter(g.getSettingValue("filterLqdSummary")?k:angular.identity);c.debug("filtered out "+(a.length-b.length)+"/"+a.length+" suspect records"),c.debug("filtered out "+(b.length-e.length)+"/"+b.length+" LQD records."),d(e,b.length!==e.length)})},getSummarizedData:function(a,d){b({method:"POST",url:e("/npn_portal/observations/getSummarizedData.json"),headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:m,data:l(a)}).success(function(a){var b=a.filter(i),e=b.filter(g.getSettingValue("filterLqdSummary")?j:angular.identity),f=e.reduce(function(a,b){var c=b.individual_id+"/"+b.phenophase_id+"/"+b.first_yes_year;return a[c]=a[c]||[],a[c].push(b),a},{}),h=[];c.debug("filtered out "+(a.length-b.length)+"/"+a.length+" suspect records"),c.debug("filtered out "+(b.length-e.length)+"/"+b.length+" LQD records."),angular.forEach(f,function(a,b){a.length>1&&a.sort(function(a,b){return a.first_yes_doy-b.first_yes_doy}),h.push(a[0])}),c.debug("filtered out "+(e.length-h.length)+"/"+e.length+" individual records (preferring lowest first_yes_doy)"),d(h,b.length!==e.length)})},getObservationDates:function(a,c){b({method:"POST",url:e("/npn_portal/observations/getObservationDates.json"),headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:m,data:l(a)}).success(c)},isFilterEmpty:f.isFilterEmpty,getVisualizations:function(){return s},openSingleStationVisualization:function(a,b){n(a);var c=t.openVisualization(b);c?c.result.then(n,n):n()},openVisualization:function(a,b){if(a.noFilterRequired||!f.isFilterEmpty()){var c={templateUrl:a.template,controller:a.controller,windowClass:"vis-dialog-window",backdrop:"static",keyboard:!1,size:"lg"};return b&&(c.resolve=b),h.trackEvent("visualization","open",a.title),d.open(c)}}};return t}]).directive("visDialog",[function(){return{restrict:"E",templateUrl:"js/vis/visDialog.html",transclude:!0,scope:{title:"@",modal:"="},controller:["$scope",function(a){}]}}]).directive("visControl",["ChartService",function(a){return{restrict:"E",templateUrl:"js/vis/visControl.html",scope:{},controller:function(b){b.isFilterEmpty=a.isFilterEmpty,b.open=a.openVisualization,b.visualizations=a.getVisualizations()}}}]).directive("visDownload",[function(){return{restrict:"E",templateUrl:"js/vis/visDownload.html",scope:{selector:"@",filename:"@"},controller:["$scope",function(a){a.download=function(){var b=d3.select(a.selector),c=b.attr("version",1.1).attr("xmlns","http://www.w3.org/2000/svg").node().parentNode.innerHTML,d="data:image/svg+xml;base64,"+window.btoa(c),e=document.querySelector("#visDownloadCanvas");e.width=b.attr("width"),e.height=b.attr("height");var f=e.getContext("2d"),g=new Image;g.onload=function(){f.drawImage(g,0,0);var b=e.toDataURL("image/png"),c=$("#vis-download-link")[0];c.download=a.filename||"visualization.png",c.href=b,c.click()},g.src=d}}]}}]);